{"ast":null,"code":"const API_URL='http://localhost:5000/api';const getToken=()=>localStorage.getItem('userToken');const apiFetch=async function(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const token=getToken();const headers={'Content-Type':'application/json',...options.headers};if(token){headers['Authorization']=`Bearer ${token}`;}const response=await fetch(`${API_URL}${endpoint}`,{...options,headers});if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||'Terjadi kesalahan pada server');}if(response.status===204||response.headers.get('Content-Length')==='0'){return null;}return response.json();};// --- AUTH ---\nexport const login=(email,password)=>apiFetch('/auth/login',{method:'POST',body:JSON.stringify({email,password})});export const register=(email,password)=>{return apiFetch('/auth/register',{// Pastikan endpoint-nya '/auth/register'\nmethod:'POST',body:JSON.stringify({email,password})});};// --- TRANSACTIONS (CRUD) ---\nexport const getTransactions=()=>apiFetch('/transactions');export const createTransaction=data=>apiFetch('/transactions',{method:'POST',body:JSON.stringify(data)});export const updateTransaction=(id,data)=>apiFetch(`/transactions/${id}`,{method:'PUT',body:JSON.stringify(data)});export const deleteTransaction=id=>apiFetch(`/transactions/${id}`,{method:'DELETE'});// --- CATEGORIES (CRUD) ---\nexport const getCategories=()=>apiFetch('/categories');export const createCategory=data=>apiFetch('/categories',{method:'POST',body:JSON.stringify(data)});export const updateCategory=(id,data)=>apiFetch(`/categories/${id}`,{method:'PUT',body:JSON.stringify(data)});export const deleteCategory=id=>apiFetch(`/categories/${id}`,{method:'DELETE'});// --- BUDGETS (Read & Update) ---\nexport const getBudgets=(year,month)=>apiFetch(`/budgets?year=${year}&month=${month}`);export const setBudget=data=>apiFetch('/budgets',{method:'POST',// Backend menggunakan POST untuk create/update\nbody:JSON.stringify(data)});// --- ACCOUNTS ---\nexport const updateAccount=(id,data)=>apiFetch(`/accounts/${id}`,{method:'PUT',body:JSON.stringify(data)});export const deleteAccount=id=>apiFetch(`/accounts/${id}`,{method:'DELETE'});export const getAccounts=()=>apiFetch('/accounts');export const createAccount=data=>apiFetch('/accounts',{method:'POST',body:JSON.stringify(data)});// --- DEBTS ---\nexport const getDebts=()=>apiFetch('/debts');export const createDebt=data=>apiFetch('/debts',{method:'POST',body:JSON.stringify(data)});export const deleteDebt=id=>apiFetch(`/debts/${id}`,{method:'DELETE'});// Menggunakan PATCH untuk update status\nexport const markDebtAsPaid=id=>apiFetch(`/debts/${id}/status`,{method:'PATCH'});","map":{"version":3,"names":["API_URL","getToken","localStorage","getItem","apiFetch","endpoint","options","arguments","length","undefined","token","headers","response","fetch","ok","errorData","json","Error","message","status","get","login","email","password","method","body","JSON","stringify","register","getTransactions","createTransaction","data","updateTransaction","id","deleteTransaction","getCategories","createCategory","updateCategory","deleteCategory","getBudgets","year","month","setBudget","updateAccount","deleteAccount","getAccounts","createAccount","getDebts","createDebt","deleteDebt","markDebtAsPaid"],"sources":["D:/xampp/htdocs/back/finance-trackerB/frontend/src/apiservice.js"],"sourcesContent":["const API_URL = 'http://localhost:5000/api';\r\n\r\nconst getToken = () => localStorage.getItem('userToken');\r\n\r\nconst apiFetch = async (endpoint, options = {}) => {\r\n  const token = getToken();\r\n  const headers = { 'Content-Type': 'application/json', ...options.headers };\r\n  if (token) {\r\n    headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n\r\n  const response = await fetch(`${API_URL}${endpoint}`, { ...options, headers });\r\n\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || 'Terjadi kesalahan pada server');\r\n  }\r\n  if (response.status === 204 || response.headers.get('Content-Length') === '0') {\r\n      return null;\r\n  }\r\n  return response.json();\r\n};\r\n\r\n// --- AUTH ---\r\nexport const login = (email, password) => apiFetch('/auth/login', {\r\n  method: 'POST',\r\n  body: JSON.stringify({ email, password }),\r\n});\r\nexport const register = (email, password) => {\r\n  return apiFetch('/auth/register', { // Pastikan endpoint-nya '/auth/register'\r\n    method: 'POST',\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n};\r\n// --- TRANSACTIONS (CRUD) ---\r\nexport const getTransactions = () => apiFetch('/transactions');\r\nexport const createTransaction = (data) => apiFetch('/transactions', {\r\n  method: 'POST',\r\n  body: JSON.stringify(data),\r\n});\r\nexport const updateTransaction = (id, data) => apiFetch(`/transactions/${id}`, {\r\n  method: 'PUT',\r\n  body: JSON.stringify(data),\r\n});\r\nexport const deleteTransaction = (id) => apiFetch(`/transactions/${id}`, { method: 'DELETE' });\r\n\r\n// --- CATEGORIES (CRUD) ---\r\nexport const getCategories = () => apiFetch('/categories');\r\nexport const createCategory = (data) => apiFetch('/categories', {\r\n  method: 'POST',\r\n  body: JSON.stringify(data),\r\n});\r\nexport const updateCategory = (id, data) => apiFetch(`/categories/${id}`, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(data)\r\n});\r\nexport const deleteCategory = (id) => apiFetch(`/categories/${id}`, { method: 'DELETE' });\r\n\r\n\r\n// --- BUDGETS (Read & Update) ---\r\nexport const getBudgets = (year, month) => apiFetch(`/budgets?year=${year}&month=${month}`);\r\nexport const setBudget = (data) => apiFetch('/budgets', {\r\n    method: 'POST', // Backend menggunakan POST untuk create/update\r\n    body: JSON.stringify(data)\r\n});\r\n\r\n// --- ACCOUNTS ---\r\nexport const updateAccount = (id, data) => apiFetch(`/accounts/${id}`, { method: 'PUT', body: JSON.stringify(data) });\r\nexport const deleteAccount = (id) => apiFetch(`/accounts/${id}`, { method: 'DELETE' });\r\nexport const getAccounts = () => apiFetch('/accounts');\r\nexport const createAccount = (data) => apiFetch('/accounts', {\r\n  method: 'POST',\r\n  body: JSON.stringify(data),\r\n});\r\n// --- DEBTS ---\r\nexport const getDebts = () => apiFetch('/debts');\r\n\r\nexport const createDebt = (data) => apiFetch('/debts', {\r\n  method: 'POST',\r\n  body: JSON.stringify(data),\r\n});\r\n\r\nexport const deleteDebt = (id) => apiFetch(`/debts/${id}`, {\r\n  method: 'DELETE',\r\n});\r\n\r\n// Menggunakan PATCH untuk update status\r\nexport const markDebtAsPaid = (id) => apiFetch(`/debts/${id}/status`, {\r\n  method: 'PATCH',\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}