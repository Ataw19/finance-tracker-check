{"ast":null,"code":"// src/ChartKeuangan.js (VERSI BARU DENGAN GRAFIK VERTIKAL)\nimport React,{useState,useMemo}from'react';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);const ChartKeuangan=_ref=>{let{transactions,type}=_ref;const[selectedMonth,setSelectedMonth]=useState(()=>{const today=new Date();return`${today.getFullYear()}-${String(today.getMonth()+1).padStart(2,'0')}`;});// 1. Filter transaksi (tidak ada perubahan di sini)\nconst filtered=useMemo(()=>{return transactions.filter(tx=>{const txDate=new Date(tx.transaction_date);const txMonth=`${txDate.getFullYear()}-${String(txDate.getMonth()+1).padStart(2,'0')}`;if(txMonth!==selectedMonth)return false;return tx.type===type;});},[transactions,selectedMonth,type]);// 2. Kelompokkan total berdasarkan nama kategori (tidak ada perubahan di sini)\nconst categoryTotals=useMemo(()=>{return filtered.reduce((acc,tx)=>{const label=tx.category_name||\"Lain-lain\";acc[label]=(acc[label]||0)+(Number(tx.amount)||0);return acc;},{});},[filtered]);const data=useMemo(()=>{// Label untuk sumbu bawah (hanya satu, misal: \"Total\")\nconst labels=[`Laporan ${type} (${selectedMonth})`];const categoryNames=Object.keys(categoryTotals);const colors=['#3b82f6','#ef4444','#22c55e','#f97316','#8b5cf6','#ec4899','#f59e0b','#10b981'];return{labels:labels,// Buat satu 'dataset' untuk setiap kategori. Ini kunci untuk legenda dan warna yang berbeda.\ndatasets:categoryNames.map((category,index)=>({label:category,// Ini akan menjadi nama di legenda (cth: \"Makanan\")\ndata:[categoryTotals[category]],// Nilai untuk kategori ini\nbackgroundColor:colors[index%colors.length],// Pilih warna secara berurutan\nborderRadius:4}))};},[categoryTotals,type,selectedMonth]);const options=useMemo(()=>({responsive:true,maintainAspectRatio:false,plugins:{legend:{display:true,// Tampilkan legenda\nposition:'top'// Posisi legenda di atas\n},title:{display:false// Judul utama bisa disembunyikan\n},tooltip:{callbacks:{label:function(context){let label=context.dataset.label||'';if(label){label+=': ';}if(context.parsed.y!==null){label+=new Intl.NumberFormat('id-ID',{style:'currency',currency:'IDR'}).format(context.parsed.y);}return label;}}}},scales:{x:{//stacked: true, // Tumpuk barnya jika ada beberapa data dalam satu label\n},y:{// Format angka di sumbu vertikal (sekarang sumbu Y)\n//stacked: true,\nticks:{callback:function(value){if(value>=1000000)return'Rp '+value/1000000+'jt';if(value>=1000)return'Rp '+value/1000+'k';return'Rp '+value;}}}}}),[]);const formattedTitle=type.charAt(0).toUpperCase()+type.slice(1);return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full bg-white p-4 rounded-lg shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-semibold text-lg text-gray-800\",children:`Grafik ${formattedTitle}`}),/*#__PURE__*/_jsx(\"input\",{type:\"month\",value:selectedMonth,onChange:e=>setSelectedMonth(e.target.value),className:\"border rounded px-2 py-1 bg-gray-100 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative h-64\",children:[\" \",filtered.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center h-full\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-500\",children:[\"Tidak ada data \",type.toLowerCase(),\" di bulan ini.\"]})}):/*#__PURE__*/_jsx(Bar,{data:data,options:options})]})]});};export default ChartKeuangan;","map":{"version":3,"names":["React","useState","useMemo","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","ChartKeuangan","_ref","transactions","type","selectedMonth","setSelectedMonth","today","Date","getFullYear","String","getMonth","padStart","filtered","filter","tx","txDate","transaction_date","txMonth","categoryTotals","reduce","acc","label","category_name","Number","amount","data","labels","categoryNames","Object","keys","colors","datasets","map","category","index","backgroundColor","length","borderRadius","options","responsive","maintainAspectRatio","plugins","legend","display","position","title","tooltip","callbacks","context","dataset","parsed","y","Intl","NumberFormat","style","currency","format","scales","x","ticks","callback","value","formattedTitle","charAt","toUpperCase","slice","className","children","onChange","e","target","toLowerCase"],"sources":["D:/xampp/htdocs/back/finance-trackerB/frontend/src/ChartKeuangan.js"],"sourcesContent":["// src/ChartKeuangan.js (VERSI BARU DENGAN GRAFIK VERTIKAL)\r\n\r\nimport React, { useState, useMemo } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst ChartKeuangan = ({ transactions, type }) => {\r\n  const [selectedMonth, setSelectedMonth] = useState(() => {\r\n    const today = new Date();\r\n    return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n  });\r\n\r\n  // 1. Filter transaksi (tidak ada perubahan di sini)\r\n  const filtered = useMemo(() => {\r\n    return transactions.filter(tx => {\r\n      const txDate = new Date(tx.transaction_date);\r\n      const txMonth = `${txDate.getFullYear()}-${String(txDate.getMonth() + 1).padStart(2, '0')}`;\r\n      if (txMonth !== selectedMonth) return false;\r\n      return tx.type === type;\r\n    });\r\n  }, [transactions, selectedMonth, type]);\r\n\r\n  // 2. Kelompokkan total berdasarkan nama kategori (tidak ada perubahan di sini)\r\n  const categoryTotals = useMemo(() => {\r\n    return filtered.reduce((acc, tx) => {\r\n      const label = tx.category_name || \"Lain-lain\";\r\n      acc[label] = (acc[label] || 0) + (Number(tx.amount) || 0);\r\n      return acc;\r\n    }, {});\r\n  }, [filtered]);\r\n\r\n  const data = useMemo(() => {\r\n    // Label untuk sumbu bawah (hanya satu, misal: \"Total\")\r\n    const labels = [`Laporan ${type} (${selectedMonth})`];\r\n    \r\n    const categoryNames = Object.keys(categoryTotals);\r\n    const colors = ['#3b82f6', '#ef4444', '#22c55e', '#f97316', '#8b5cf6', '#ec4899', '#f59e0b', '#10b981'];\r\n\r\n    return {\r\n      labels: labels,\r\n      // Buat satu 'dataset' untuk setiap kategori. Ini kunci untuk legenda dan warna yang berbeda.\r\n      datasets: categoryNames.map((category, index) => ({\r\n        label: category, // Ini akan menjadi nama di legenda (cth: \"Makanan\")\r\n        data: [categoryTotals[category]], // Nilai untuk kategori ini\r\n        backgroundColor: colors[index % colors.length], // Pilih warna secara berurutan\r\n        borderRadius: 4,\r\n      })),\r\n    };\r\n  }, [categoryTotals, type, selectedMonth]);\r\n\r\n  const options = useMemo(() => ({\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: true, // Tampilkan legenda\r\n        position: 'top', // Posisi legenda di atas\r\n      },\r\n      title: {\r\n        display: false, // Judul utama bisa disembunyikan\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(context) {\r\n            let label = context.dataset.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            if (context.parsed.y !== null) {\r\n              label += new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(context.parsed.y);\r\n            }\r\n            return label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        //stacked: true, // Tumpuk barnya jika ada beberapa data dalam satu label\r\n      },\r\n      y: { // Format angka di sumbu vertikal (sekarang sumbu Y)\r\n        //stacked: true,\r\n        ticks: {\r\n          callback: function(value) {\r\n            if (value >= 1000000) return 'Rp ' + (value / 1000000) + 'jt';\r\n            if (value >= 1000) return 'Rp ' + (value / 1000) + 'k';\r\n            return 'Rp ' + value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }), []);\r\n  \r\n  const formattedTitle = type.charAt(0).toUpperCase() + type.slice(1);\r\n\r\n  return (\r\n    <div className=\"w-full bg-white p-4 rounded-lg shadow\">\r\n      <div className=\"mb-4 flex justify-between items-center\">\r\n        <p className=\"font-semibold text-lg text-gray-800\">{`Grafik ${formattedTitle}`}</p>\r\n        <input\r\n          type=\"month\"\r\n          value={selectedMonth}\r\n          onChange={(e) => setSelectedMonth(e.target.value)}\r\n          className=\"border rounded px-2 py-1 bg-gray-100 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        />\r\n      </div>\r\n      <div className=\"relative h-64\"> {/* Beri tinggi yang tetap untuk canvas grafik */}\r\n        {filtered.length === 0 ? (\r\n          <div className=\"flex justify-center items-center h-full\">\r\n            <p className='text-sm text-gray-500'>\r\n              Tidak ada data {type.toLowerCase()} di bulan ini.\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <Bar data={data} options={options} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartKeuangan;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}