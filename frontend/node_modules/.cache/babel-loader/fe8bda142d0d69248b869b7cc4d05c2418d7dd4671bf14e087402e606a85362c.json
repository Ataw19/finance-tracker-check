{"ast":null,"code":"var _jsxFileName = \"E:\\\\testis\\\\frontend\\\\src\\\\HalamanUtama.js\",\n  _s = $RefreshSig$();\n// App.js (atau komponen induk yang mengelola state budget)\nimport React, { useState, useEffect } from 'react';\nimport ModalAddMonth from './ModalAddMonth'; // Pastikan path-nya benar\n// Import fungsi API Anda, misalnya: getBudgets, createBudget\n// Import fungsi helper Anda: transformBudgetsData, formatMonth\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [budgetsByMonth, setBudgetsByMonth] = useState({});\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [isModalAddMonthOpen, setIsModalAddMonthOpen] = useState(false);\n\n  // --- Fungsi untuk mengambil data budget dari backend ---\n  const fetchBudgets = async () => {\n    try {\n      const fetchedBudgetsRaw = await getBudgets(); // Panggil API untuk mendapatkan data mentah\n      const transformedBudgets = transformBudgetsData(fetchedBudgetsRaw);\n      setBudgetsByMonth(transformedBudgets);\n\n      // Set bulan yang dipilih jika belum ada atau berdasarkan bulan saat ini\n      if (!selectedMonth || !transformedBudgets[selectedMonth]) {\n        const currentMonthKey = new Date().toISOString().slice(0, 7); // Format YYYY-MM\n        if (transformedBudgets[currentMonthKey]) {\n          setSelectedMonth(currentMonthKey);\n        } else if (Object.keys(transformedBudgets).length > 0) {\n          // Jika bulan saat ini tidak ada, pilih bulan terakhir yang tersedia\n          setSelectedMonth(Object.keys(transformedBudgets).sort().pop());\n        } else {\n          // Jika tidak ada budget sama sekali, siapkan untuk bulan saat ini (bisa ditambahkan)\n          setSelectedMonth(currentMonthKey);\n        }\n      }\n    } catch (error) {\n      console.error(\"Error fetching budgets:\", error);\n    }\n  };\n\n  // --- useEffect untuk memuat data awal ---\n  useEffect(() => {\n    fetchBudgets();\n  }, []); // [] berarti hanya berjalan sekali setelah render pertama\n\n  // --- Handler untuk menambahkan bulan baru dari modal ---\n  const handleAddMonth = async newMonthYYYYMM => {\n    try {\n      // 1. Panggil API backend untuk membuat/menginisialisasi bulan baru\n      //    (Anda perlu memiliki endpoint API untuk ini, misal `createBudget`)\n      const response = await createBudget({\n        month: newMonthYYYYMM\n      }); // Asumsi API Anda menerima objek { month: \"YYYY-MM\" }\n\n      if (response.success) {\n        // Sesuaikan dengan respons sukses dari API Anda\n        alert(`Bulan ${formatMonth(newMonthYYYYMM)} berhasil ditambahkan.`);\n\n        // 2. Setelah berhasil menambahkan ke backend, RE-FETCH semua budget\n        //    Ini adalah cara paling aman untuk memastikan daftar dropdown terbaru\n        await fetchBudgets();\n\n        // 3. Set bulan yang baru ditambahkan sebagai bulan yang dipilih saat ini\n        setSelectedMonth(newMonthYYYYMM);\n      } else {\n        alert(\"Gagal menambahkan bulan. Mohon coba lagi.\");\n      }\n    } catch (error) {\n      console.error(\"Error adding new month:\", error);\n      alert(\"Terjadi kesalahan saat menambahkan bulan.\");\n    } finally {\n      setIsModalAddMonthOpen(false); // Pastikan modal tertutup\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-10 px-10 flex flex-row bg-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-1/6 mr-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"bg-gray-500 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white px-2 w-3/4\",\n            children: \"Kategori Bulanan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"month-select\",\n              className: \"text-sm font-semibold mr-2 text-gray-700\",\n              children: \"Pilih Bulan:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"month-select\",\n              name: \"month\" // <--- Direkomendasikan untuk pengiriman form\n              ,\n              value: selectedMonth,\n              onChange: e => {\n                const val = e.target.value;\n                if (val === \"add_new\") {\n                  setIsModalAddMonthOpen(true);\n                } else {\n                  setSelectedMonth(val);\n                }\n              },\n              children: [Object.keys(budgetsByMonth).sort((a, b) => new Date(a) - new Date(b)).map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: month,\n                children: formatMonth(month)\n              }, month, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"add_new\",\n                children: \"+ Tambah Bulan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalAddMonth, {\n      isOpen: isModalAddMonthOpen,\n      onClose: () => setIsModalAddMonthOpen(false),\n      onAddMonth: handleAddMonth // <-- Pastikan ini memanggil handler yang benar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"xCFGKqHT84HjCWlXJngqljnZoZ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ModalAddMonth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","budgetsByMonth","setBudgetsByMonth","selectedMonth","setSelectedMonth","isModalAddMonthOpen","setIsModalAddMonthOpen","fetchBudgets","fetchedBudgetsRaw","getBudgets","transformedBudgets","transformBudgetsData","currentMonthKey","Date","toISOString","slice","Object","keys","length","sort","pop","error","console","handleAddMonth","newMonthYYYYMM","response","createBudget","month","success","alert","formatMonth","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","value","onChange","e","val","target","a","b","map","isOpen","onClose","onAddMonth","_c","$RefreshReg$"],"sources":["E:/testis/frontend/src/HalamanUtama.js"],"sourcesContent":["// App.js (atau komponen induk yang mengelola state budget)\r\nimport React, { useState, useEffect } from 'react';\r\nimport ModalAddMonth from './ModalAddMonth'; // Pastikan path-nya benar\r\n// Import fungsi API Anda, misalnya: getBudgets, createBudget\r\n// Import fungsi helper Anda: transformBudgetsData, formatMonth\r\n\r\nfunction App() {\r\n  const [budgetsByMonth, setBudgetsByMonth] = useState({});\r\n  const [selectedMonth, setSelectedMonth] = useState('');\r\n  const [isModalAddMonthOpen, setIsModalAddMonthOpen] = useState(false);\r\n\r\n  // --- Fungsi untuk mengambil data budget dari backend ---\r\n  const fetchBudgets = async () => {\r\n    try {\r\n      const fetchedBudgetsRaw = await getBudgets(); // Panggil API untuk mendapatkan data mentah\r\n      const transformedBudgets = transformBudgetsData(fetchedBudgetsRaw);\r\n      setBudgetsByMonth(transformedBudgets);\r\n\r\n      // Set bulan yang dipilih jika belum ada atau berdasarkan bulan saat ini\r\n      if (!selectedMonth || !transformedBudgets[selectedMonth]) {\r\n        const currentMonthKey = new Date().toISOString().slice(0, 7); // Format YYYY-MM\r\n        if (transformedBudgets[currentMonthKey]) {\r\n          setSelectedMonth(currentMonthKey);\r\n        } else if (Object.keys(transformedBudgets).length > 0) {\r\n          // Jika bulan saat ini tidak ada, pilih bulan terakhir yang tersedia\r\n          setSelectedMonth(Object.keys(transformedBudgets).sort().pop());\r\n        } else {\r\n          // Jika tidak ada budget sama sekali, siapkan untuk bulan saat ini (bisa ditambahkan)\r\n          setSelectedMonth(currentMonthKey);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching budgets:\", error);\r\n    }\r\n  };\r\n\r\n  // --- useEffect untuk memuat data awal ---\r\n  useEffect(() => {\r\n    fetchBudgets();\r\n  }, []); // [] berarti hanya berjalan sekali setelah render pertama\r\n\r\n  // --- Handler untuk menambahkan bulan baru dari modal ---\r\n  const handleAddMonth = async (newMonthYYYYMM) => {\r\n    try {\r\n      // 1. Panggil API backend untuk membuat/menginisialisasi bulan baru\r\n      //    (Anda perlu memiliki endpoint API untuk ini, misal `createBudget`)\r\n      const response = await createBudget({ month: newMonthYYYYMM }); // Asumsi API Anda menerima objek { month: \"YYYY-MM\" }\r\n      \r\n      if (response.success) { // Sesuaikan dengan respons sukses dari API Anda\r\n        alert(`Bulan ${formatMonth(newMonthYYYYMM)} berhasil ditambahkan.`);\r\n        \r\n        // 2. Setelah berhasil menambahkan ke backend, RE-FETCH semua budget\r\n        //    Ini adalah cara paling aman untuk memastikan daftar dropdown terbaru\r\n        await fetchBudgets(); \r\n\r\n        // 3. Set bulan yang baru ditambahkan sebagai bulan yang dipilih saat ini\r\n        setSelectedMonth(newMonthYYYYMM);\r\n      } else {\r\n        alert(\"Gagal menambahkan bulan. Mohon coba lagi.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error adding new month:\", error);\r\n      alert(\"Terjadi kesalahan saat menambahkan bulan.\");\r\n    } finally {\r\n      setIsModalAddMonthOpen(false); // Pastikan modal tertutup\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Tampilan kolom bagian kiri */}\r\n      <div className=\"py-10 px-10 flex flex-row bg-gray-200\">\r\n        <div className=\"flex flex-col w-1/6 mr-8\">\r\n          <div className=\"flex flex-col\">\r\n            <h1 className=\"bg-gray-500 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white px-2 w-3/4\">\r\n              Kategori Bulanan\r\n            </h1>\r\n            <div className=\"mb-4 py-2\">\r\n              <label htmlFor=\"month-select\" className=\"text-sm font-semibold mr-2 text-gray-700\">\r\n                Pilih Bulan:\r\n              </label>\r\n              <select\r\n                id=\"month-select\"\r\n                name=\"month\" // <--- Direkomendasikan untuk pengiriman form\r\n                value={selectedMonth}\r\n                onChange={(e) => {\r\n                  const val = e.target.value;\r\n                  if (val === \"add_new\") {\r\n                    setIsModalAddMonthOpen(true);\r\n                  } else {\r\n                    setSelectedMonth(val);\r\n                  }\r\n                }}\r\n              >\r\n                {/* Pastikan budgetsByMonth memiliki data yang benar */}\r\n                {Object.keys(budgetsByMonth)\r\n                  .sort((a, b) => new Date(a) - new Date(b))\r\n                  .map((month) => (\r\n                    <option key={month} value={month}>\r\n                      {formatMonth(month)}\r\n                    </option>\r\n                  ))}\r\n                <option value=\"add_new\">+ Tambah Bulan</option>\r\n              </select>\r\n            </div>\r\n            {/* ... bagian kode lainnya ... */}\r\n          </div>\r\n        </div>\r\n        {/* ... bagian tampilan kolom kanan Anda ... */}\r\n      </div>\r\n\r\n      {/* Modal Tambah Bulan */}\r\n      <ModalAddMonth\r\n        isOpen={isModalAddMonthOpen}\r\n        onClose={() => setIsModalAddMonthOpen(false)}\r\n        onAddMonth={handleAddMonth} // <-- Pastikan ini memanggil handler yang benar\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}