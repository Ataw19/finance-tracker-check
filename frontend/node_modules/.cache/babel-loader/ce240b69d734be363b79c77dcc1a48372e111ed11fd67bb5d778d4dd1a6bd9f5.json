{"ast":null,"code":"var _jsxFileName = \"D:\\\\xampp\\\\htdocs\\\\back\\\\finance-trackerB\\\\frontend\\\\src\\\\ChartKeuangan.js\",\n  _s = $RefreshSig$();\n// src/ChartKeuangan.js (VERSI FINAL YANG SUDAH DIPERBAIKI)\n\nimport React, { useState, useMemo } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst ChartKeuangan = ({\n  transactions,\n  type\n}) => {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState(() => {\n    const today = new Date();\n    return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\n  });\n\n  // Filter transaksi berdasarkan tipe (income/expense) dan bulan yang dipilih\n  const filtered = useMemo(() => {\n    return transactions.filter(tx => {\n      // Gunakan 'transaction_date' dari API\n      const txDate = new Date(tx.transaction_date);\n      const txMonth = `${txDate.getFullYear()}-${String(txDate.getMonth() + 1).padStart(2, '0')}`;\n      if (txMonth !== selectedMonth) return false;\n\n      // Cek tipe transaksi langsung dari properti 'type'\n      if (type === \"pendapatan\") {\n        return tx.type === 'income';\n      } else if (type === \"pengeluaran\") {\n        return tx.type === 'expense';\n      }\n      return false;\n    });\n  }, [transactions, selectedMonth, type]);\n\n  // Kelompokkan total berdasarkan nama kategori\n  const categoryTotals = useMemo(() => {\n    return filtered.reduce((acc, tx) => {\n      // Gunakan 'category_name' dari API sebagai label\n      const label = tx.category_name || \"Lain-lain\";\n      acc[label] = (acc[label] || 0) + (Number(tx.amount) || 0);\n      return acc;\n    }, {});\n  }, [filtered]);\n\n  // Siapkan data untuk ditampilkan di grafik\n  const data = useMemo(() => {\n    const categories = Object.keys(categoryTotals);\n    const colors = ['#60a5fa', '#f87171', '#34d399', '#fbbf24', '#a78bfa', '#f472b6'];\n    return {\n      labels: categories,\n      // Tampilkan nama kategori di sumbu X\n      datasets: [{\n        label: `Total ${type}`,\n        data: categories.map(cat => categoryTotals[cat]),\n        // Data untuk setiap kategori\n        backgroundColor: colors\n      }]\n    };\n  }, [categoryTotals, type]);\n  const options = useMemo(() => ({\n    indexAxis: 'y',\n    // Membuat bar chart menjadi horizontal agar label mudah dibaca\n    responsive: true,\n    plugins: {\n      legend: {\n        display: false\n      },\n      // Sembunyikan legenda karena sudah jelas dari label\n      title: {\n        display: false\n      }\n    },\n    scales: {\n      x: {\n        ticks: {\n          callback: function (value) {\n            return 'Rp ' + value / 1000 + 'k'; // Format sumbu X (misal: Rp 50k)\n          }\n        }\n      }\n    }\n  }), []);\n  const formattedTitle = type.charAt(0).toUpperCase() + type.slice(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-xl mx-auto py-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-2 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold\",\n        children: formattedTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"month\",\n        value: selectedMonth,\n        onChange: e => setSelectedMonth(e.target.value),\n        className: \"border rounded px-2 py-1 bg-gray-100 text-sm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), filtered.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-48 bg-gray-50 rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: [\"Tidak ada data \", type.toLowerCase(), \" di bulan ini.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartKeuangan, \"j9y4Fby67kUP8Ch4yD59vqzXsi4=\");\n_c = ChartKeuangan;\nexport default ChartKeuangan;\nvar _c;\n$RefreshReg$(_c, \"ChartKeuangan\");","map":{"version":3,"names":["React","useState","useMemo","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ChartKeuangan","transactions","type","_s","selectedMonth","setSelectedMonth","today","Date","getFullYear","String","getMonth","padStart","filtered","filter","tx","txDate","transaction_date","txMonth","categoryTotals","reduce","acc","label","category_name","Number","amount","data","categories","Object","keys","colors","labels","datasets","map","cat","backgroundColor","options","indexAxis","responsive","plugins","legend","display","title","scales","x","ticks","callback","value","formattedTitle","charAt","toUpperCase","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","length","toLowerCase","_c","$RefreshReg$"],"sources":["D:/xampp/htdocs/back/finance-trackerB/frontend/src/ChartKeuangan.js"],"sourcesContent":["// src/ChartKeuangan.js (VERSI FINAL YANG SUDAH DIPERBAIKI)\r\n\r\nimport React, { useState, useMemo } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst ChartKeuangan = ({ transactions, type }) => {\r\n  const [selectedMonth, setSelectedMonth] = useState(() => {\r\n    const today = new Date();\r\n    return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n  });\r\n\r\n  // Filter transaksi berdasarkan tipe (income/expense) dan bulan yang dipilih\r\n  const filtered = useMemo(() => {\r\n    return transactions.filter(tx => {\r\n      // Gunakan 'transaction_date' dari API\r\n      const txDate = new Date(tx.transaction_date);\r\n      const txMonth = `${txDate.getFullYear()}-${String(txDate.getMonth() + 1).padStart(2, '0')}`;\r\n      \r\n      if (txMonth !== selectedMonth) return false;\r\n\r\n      // Cek tipe transaksi langsung dari properti 'type'\r\n      if (type === \"pendapatan\") {\r\n        return tx.type === 'income';\r\n      } else if (type === \"pengeluaran\") {\r\n        return tx.type === 'expense';\r\n      }\r\n\r\n      return false;\r\n    });\r\n  }, [transactions, selectedMonth, type]);\r\n\r\n  // Kelompokkan total berdasarkan nama kategori\r\n  const categoryTotals = useMemo(() => {\r\n    return filtered.reduce((acc, tx) => {\r\n      // Gunakan 'category_name' dari API sebagai label\r\n      const label = tx.category_name || \"Lain-lain\";\r\n      acc[label] = (acc[label] || 0) + (Number(tx.amount) || 0);\r\n      return acc;\r\n    }, {});\r\n  }, [filtered]);\r\n\r\n  // Siapkan data untuk ditampilkan di grafik\r\n  const data = useMemo(() => {\r\n    const categories = Object.keys(categoryTotals);\r\n    const colors = ['#60a5fa', '#f87171', '#34d399', '#fbbf24', '#a78bfa', '#f472b6'];\r\n    return {\r\n      labels: categories, // Tampilkan nama kategori di sumbu X\r\n      datasets: [{\r\n        label: `Total ${type}`,\r\n        data: categories.map(cat => categoryTotals[cat]), // Data untuk setiap kategori\r\n        backgroundColor: colors,\r\n      }],\r\n    };\r\n  }, [categoryTotals, type]);\r\n\r\n  const options = useMemo(() => ({\r\n    indexAxis: 'y', // Membuat bar chart menjadi horizontal agar label mudah dibaca\r\n    responsive: true,\r\n    plugins: {\r\n      legend: { display: false }, // Sembunyikan legenda karena sudah jelas dari label\r\n      title: { display: false },\r\n    },\r\n    scales: {\r\n        x: {\r\n            ticks: {\r\n                callback: function(value) {\r\n                    return 'Rp ' + (value / 1000) + 'k'; // Format sumbu X (misal: Rp 50k)\r\n                }\r\n            }\r\n        }\r\n    }\r\n  }), []);\r\n  \r\n  const formattedTitle = type.charAt(0).toUpperCase() + type.slice(1);\r\n\r\n  return (\r\n    <div className=\"w-full max-w-xl mx-auto py-2\">\r\n      <div className=\"mb-2 flex justify-between items-center\">\r\n        <p className=\"font-semibold\">{formattedTitle}</p>\r\n        <input\r\n          type=\"month\"\r\n          value={selectedMonth}\r\n          onChange={(e) => setSelectedMonth(e.target.value)}\r\n          className=\"border rounded px-2 py-1 bg-gray-100 text-sm\"\r\n        />\r\n      </div>\r\n      {filtered.length === 0 ? (\r\n        <div className=\"flex justify-center items-center h-48 bg-gray-50 rounded-md\">\r\n          <p className='text-sm text-gray-500'>\r\n            Tidak ada data {type.toLowerCase()} di bulan ini.\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <Bar data={data} options={options} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartKeuangan;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}