{"ast":null,"code":"var _jsxFileName = \"E:\\\\testis\\\\frontend\\\\src\\\\HalamanUtama.js\",\n  _s = $RefreshSig$();\nimport ModalAddMonth from \"./ModalAddMonth\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport IconPickerModal from \"./IconPickerModal\";\nimport Recent from './RecentTransaction';\nimport FilterTransaksi from './FilterTransaksi';\nimport ChartKeuangan from './ChartKeuangan';\nimport ModalTransaksi from './ModalTransaksi';\nimport ModalKategori from './ModalKategori';\nimport ModalAkun from './ModalAkun';\nimport { useNavigate } from 'react-router-dom';\nimport DropdownAksi from \"./DropdownButton\";\nimport { getTransactions, getBudgets, getCategories, deleteTransaction, deleteCategory, setBudget, createTransaction, updateTransaction, createCategory, updateCategory, createAccount, getAccounts, updateAccount, deleteAccount } from './apiservice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  const [accounts, setAccounts] = useState([]);\n  const [budgetsByMonth, setBudgetsByMonth] = useState({});\n  const [transactions, setTransactions] = useState([]); // Pengeluaran\n  const [pendapatan, setPendapatan] = useState([]); // Pendapatan\n  const [categories, setCategories] = useState([]);\n  const [isTransactionModalOpen, setTransactionModalOpen] = useState(false);\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\n  const [isCategoryModalOpen, setCategoryModalOpen] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [editingBudgetId, setEditingBudgetId] = useState(null);\n  const [editingBudgetAmount, setEditingBudgetAmount] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isModalAddMonthOpen, setIsModalAddMonthOpen] = useState(false);\n  const [selectedTab, setSelectedTab] = useState(\"Terkini\");\n  const [selectedTabPendapatan, setSelectedTabPendapatan] = useState(\"Terkini\");\n  const [isIconPickerOpen, setIconPickerOpen] = useState(false);\n  const [iconTargetCategory, setIconTargetCategory] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(() => {\n    const d = new Date();\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}`;\n  });\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      // Hapus pemisahan year, month di sini karena getBudgets akan mengambil semua\n      const fetchedBudgets = await getBudgets(); // <--- Panggil tanpa parameter\n      const fetchedCategories = await getCategories();\n      setCategories(fetchedCategories);\n      const newBudgetsByMonth = {};\n      fetchedBudgets.forEach(budget => {\n        const monthKey = `${budget.year}-${String(budget.month).padStart(2, '0')}`;\n        if (!newBudgetsByMonth[monthKey]) {\n          newBudgetsByMonth[monthKey] = {}; // Inisialisasi objek untuk bulan ini\n        }\n        newBudgetsByMonth[monthKey][budget.category_id] = budget;\n      });\n      setBudgetsByMonth(newBudgetsByMonth);\n      const sortedMonths = Object.keys(newBudgetsByMonth).sort((a, b) => new Date(a) - new Date(b));\n      if (sortedMonths.length > 0 && !selectedMonth) {\n        setSelectedMonth(sortedMonths[sortedMonths.length - 1]); // Set ke bulan terbaru\n      } else if (sortedMonths.length === 0 && !selectedMonth) {\n        const today = new Date();\n        const currentMonth = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\n        setSelectedMonth(currentMonth);\n      } else if (selectedMonth && !newBudgetsByMonth[selectedMonth]) {\n        // Jika selectedMonth saat ini tidak ada di data yang baru diambil,\n        // (misal setelah menghapus semua budget di bulan itu), pindah ke bulan terbaru\n        if (sortedMonths.length > 0) {\n          setSelectedMonth(sortedMonths[sortedMonths.length - 1]);\n        } else {\n          // Jika tidak ada bulan sama sekali, kembali ke bulan saat ini\n          const today = new Date();\n          const currentMonth = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\n          setSelectedMonth(currentMonth);\n        }\n      }\n    } catch (error) {\n      console.error(\"Gagal mengambil data:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedMonth]); // HANYA PANGGIL FETCDATA JIKA BULAN BERUBAH\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const handleAddMonth = async newMonth => {\n    if (budgetsByMonth[newMonth]) {\n      alert(\"Maaf, bulan sudah ada!\");\n      return;\n    }\n    setIsLoading(true); // Tampilkan loading saat proses\n    try {\n      const [year, month] = newMonth.split('-');\n\n      // Dapatkan semua kategori yang ada\n      const existingCategories = categories; // Ambil dari state categories yang sudah ada\n\n      // Buat array Promise untuk setiap kategori\n      const budgetPromises = existingCategories.map(async category => {\n        // Panggil API setBudget untuk setiap kategori dengan amount 0\n        // Backend Anda harus bisa menangani pembuatan budget baru jika belum ada\n        await setBudget({\n          category_id: category.id,\n          // Gunakan category.id dari daftar kategori\n          amount: 0,\n          // Inisialisasi dengan budget nol\n          year: parseInt(year),\n          month: parseInt(month)\n        });\n      });\n\n      // Tunggu semua promise selesai\n      await Promise.all(budgetPromises);\n\n      // Setelah semua budget diinisialisasi di backend,\n      // update state lokal dan panggil fetchData untuk mengambil semua data bulan baru\n      setSelectedMonth(newMonth); // Ini akan memicu fetchData\n      setIsModalAddMonthOpen(false); // Tutup modal\n      alert(`Bulan ${formatMonth(newMonth)} berhasil ditambahkan dan diinisialisasi.`);\n    } catch (error) {\n      console.error(\"Gagal menambahkan bulan baru:\", error);\n      alert(\"Gagal menambahkan bulan baru: \" + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // **** UPDATE: handleSaveBudget ****\n  const handleSaveBudget = async (categoryId, amount) => {\n    const [year, month] = selectedMonth.split('-');\n    try {\n      const parsedAmount = parseFloat(amount) || 0;\n      await setBudget({\n        category_id: categoryId,\n        amount: parsedAmount,\n        year: parseInt(year),\n        month: parseInt(month)\n      });\n\n      // Update state lokal secara langsung\n      setBudgetsByMonth(prevBudgets => {\n        const currentMonthBudgets = prevBudgets[selectedMonth] || [];\n        const updatedBudgets = currentMonthBudgets.map(b => b.category_id === categoryId ? {\n          ...b,\n          amount: parsedAmount\n        } : b);\n        return {\n          ...prevBudgets,\n          [selectedMonth]: updatedBudgets\n        };\n      });\n      alert('Budget berhasil disimpan.');\n      // fetchData(); // Tidak perlu fetchData() jika update state lokal sudah dilakukan dengan benar\n    } catch (error) {\n      console.error(\"Gagal simpan budget:\", error);\n      alert(error.message);\n    } finally {\n      setEditingBudgetId(null);\n    }\n  };\n\n  // **** UPDATE: handleDeleteTransaction ****\n  const handleDeleteTransaction = async transactionId => {\n    if (window.confirm(\"Anda yakin ingin menghapus transaksi ini?\")) {\n      try {\n        await deleteTransaction(transactionId);\n        // Update state secara manual agar UI cepat merespons\n        setTransactions(prev => prev.filter(tx => tx.id !== transactionId));\n        setPendapatan(prev => prev.filter(p => p.id !== transactionId));\n\n        // Opsional: Jika penghapusan transaksi mempengaruhi total 'used' di budget, Anda mungkin perlu mengupdate 'used' di budgetsByMonth\n        // Ini akan lebih kompleks karena Anda perlu tahu detail transaksi yang dihapus\n        // Untuk saat ini, asumsikan fetchData() akan menangani re-kalkulasi 'used' di budget\n        fetchData(); // Karena perubahan transaksi memengaruhi \"used\" budget dan saldo akun, kita masih perlu fetchData\n        alert('Transaksi berhasil dihapus.');\n      } catch (error) {\n        console.error(\"Gagal menghapus transaksi:\", error);\n        alert(error.message);\n      }\n    }\n  };\n\n  // **** UPDATE: handleHapusKategori ****\n  const handleHapusKategori = async categoryId => {\n    if (window.confirm(\"Yakin ingin menghapus kategori ini?\")) {\n      try {\n        await deleteCategory(categoryId);\n        // Update state categories secara langsung\n        setCategories(prev => prev.filter(cat => cat.id !== categoryId));\n\n        // Hapus juga dari budgetsByMonth jika ada\n        setBudgetsByMonth(prev => {\n          const newBudgets = {\n            ...prev\n          };\n          for (const month in newBudgets) {\n            newBudgets[month] = newBudgets[month].filter(b => b.category_id !== categoryId);\n          }\n          return newBudgets;\n        });\n\n        // Karena ini juga bisa mempengaruhi transaksi yang sudah ada, lebih aman untuk fetchData\n        fetchData();\n        alert('Kategori berhasil dihapus.');\n      } catch (error) {\n        console.error(\"Gagal hapus kategori:\", error);\n        alert(error.message);\n      }\n    }\n  };\n  const handleOpenEditTransactionModal = transaction => {\n    setSelectedTransaction(transaction);\n    setTransactionModalOpen(true);\n  };\n\n  // **** UPDATE: handleSaveTransaction ****\n  const handleSaveTransaction = async data => {\n    try {\n      let savedTransaction;\n      if (data.id) {\n        const {\n          type,\n          ...updateData\n        } = data;\n        await updateTransaction(data.id, updateData);\n        savedTransaction = {\n          ...data\n        }; // Gunakan data yang dikirim karena API tidak mengembalikan seluruh objek\n      } else {\n        savedTransaction = await createTransaction(data); // Asumsi API mengembalikan objek transaksi yang dibuat\n      }\n\n      // Update state transaksi secara langsung\n      if (savedTransaction.type === 'expense') {\n        setTransactions(prev => {\n          if (data.id) {\n            return prev.map(tx => tx.id === savedTransaction.id ? savedTransaction : tx);\n          } else {\n            return [...prev, savedTransaction];\n          }\n        });\n      } else if (savedTransaction.type === 'income') {\n        setPendapatan(prev => {\n          if (data.id) {\n            return prev.map(tx => tx.id === savedTransaction.id ? savedTransaction : tx);\n          } else {\n            return [...prev, savedTransaction];\n          }\n        });\n      }\n      setTransactionModalOpen(false);\n      // Panggil fetchData untuk memastikan semua data (terutama saldo akun dan budget 'used') terupdate\n      // Karena perubahan transaksi dapat mempengaruhi beberapa state lain yang perhitungannya kompleks\n      fetchData();\n      alert('Transaksi berhasil disimpan!');\n    } catch (error) {\n      console.error('Gagal menyimpan transaksi:', error);\n      alert(error.message);\n    }\n  };\n  const handleOpenAddCategoryModal = () => {\n    setSelectedCategory(null);\n    setCategoryModalOpen(true);\n  };\n  const handleOpenEditCategoryModal = category => {\n    setSelectedCategory({\n      id: category.category_id,\n      name: category.category_name\n    });\n    setCategoryModalOpen(true);\n  };\n\n  // **** UPDATE: handleSaveCategory ****\n  const handleSaveCategory = async data => {\n    try {\n      if (data.id) {\n        await updateCategory(data.id, {\n          name: data.name\n        });\n        // Update state categories\n        setCategories(prev => prev.map(cat => cat.id === data.id ? {\n          ...cat,\n          name: data.name\n        } : cat));\n        // Update category name in budgetsByMonth if exists\n        setBudgetsByMonth(prevBudgets => {\n          const currentMonthBudgets = prevBudgets[selectedMonth] || [];\n          const updatedBudgets = currentMonthBudgets.map(b => b.category_id === data.id ? {\n            ...b,\n            category_name: data.name\n          } : b);\n          return {\n            ...prevBudgets,\n            [selectedMonth]: updatedBudgets\n          };\n        });\n        alert('Nama kategori berhasil diupdate!');\n      } else {\n        const newCategory = await createCategory({\n          name: data.name\n        });\n        // Update state categories\n        setCategories(prev => [...prev, newCategory]);\n        if (data.amount > 0) {\n          const [year, month] = selectedMonth.split('-');\n          const newBudget = await setBudget({\n            // Asumsi setBudget mengembalikan data budget yang dibuat/diupdate\n            category_id: newCategory.id,\n            amount: data.amount,\n            year: parseInt(year),\n            month: parseInt(month)\n          });\n          // Update state budgetsByMonth\n          setBudgetsByMonth(prevBudgets => {\n            const currentMonthBudgets = prevBudgets[selectedMonth] || [];\n            return {\n              ...prevBudgets,\n              [selectedMonth]: [...currentMonthBudgets, {\n                ...newBudget,\n                category_name: newCategory.name\n              }]\n            };\n          });\n        }\n        alert('Kategori baru berhasil ditambahkan!');\n      }\n      setCategoryModalOpen(false);\n      // fetchData(); // Tidak perlu fetchData jika update state lokal sudah cukup\n    } catch (error) {\n      console.error('Gagal menyimpan kategori:', error);\n      alert(error.message);\n    }\n  };\n  const [isAccountModalOpen, setAccountModalOpen] = useState(false);\n  const handleOpenAddAccountModal = () => setAccountModalOpen(true);\n\n  // **** UPDATE: handleSaveAccount ****\n  const handleSaveAccount = async data => {\n    try {\n      let savedAccount;\n      if (data.id) {\n        await updateAccount(data.id, data);\n        savedAccount = {\n          ...data\n        }; // Asumsi API tidak mengembalikan seluruh objek\n      } else {\n        savedAccount = await createAccount(data); // Asumsi API mengembalikan objek akun yang dibuat\n      }\n\n      // Update state accounts\n      setAccounts(prev => {\n        if (data.id) {\n          return prev.map(acc => acc.id === savedAccount.id ? savedAccount : acc);\n        } else {\n          return [...prev, savedAccount];\n        }\n      });\n      setAccountModalOpen(false);\n      // fetchData(); // fetchData masih mungkin diperlukan karena perubahan akun bisa memengaruhi transaksi\n      alert('Akun berhasil disimpan!');\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  // **** UPDATE: handleDeleteAccount ****\n  const handleDeleteAccount = async accountId => {\n    if (window.confirm('Yakin ingin menghapus akun ini? Aksi ini tidak bisa dibatalkan.')) {\n      try {\n        await deleteAccount(accountId);\n        // Update state accounts secara langsung\n        setAccounts(prev => prev.filter(acc => acc.id !== accountId));\n        // Karena penghapusan akun mungkin memengaruhi transaksi yang terkait, lebih aman fetchData\n        fetchData();\n        alert('Akun berhasil dihapus.');\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n  };\n  const handleOpenEditAccountModal = account => {\n    setSelectedAccount(account);\n    setAccountModalOpen(true);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('userToken');\n    navigate('/');\n  };\n  const CircularProgress = ({\n    percentage\n  }) => {\n    const pct = Number(percentage);\n    const radius = 20;\n    const stroke = 4;\n    const normalized = radius - stroke / 2;\n    const circumference = 2 * Math.PI * normalized;\n    const clamped = Math.min(pct, 100);\n    const offset = circumference * (1 - clamped / 100);\n    const color = pct > 99 ? 'stroke-red-500' : pct > 50 ? 'stroke-yellow-400' : pct > 0 ? 'stroke-green-400' : 'stroke-transparent';\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"w-5 h-5\",\n      viewBox: \"0 0 48 48\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"stroke-gray-200\",\n        strokeWidth: stroke,\n        fill: \"transparent\",\n        r: normalized,\n        cx: \"24\",\n        cy: \"24\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: `transition-all duration-300 ${color}`,\n        strokeWidth: stroke,\n        fill: \"transparent\",\n        r: normalized,\n        cx: \"24\",\n        cy: \"24\",\n        strokeDasharray: circumference,\n        strokeDashoffset: offset,\n        strokeLinecap: \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this);\n  };\n\n  // **** UPDATE: handleIconSelect ****\n  const handleOpenIconPicker = category => {\n    setIconTargetCategory(category);\n    setIconPickerOpen(true);\n  };\n  const handleIconSelect = async iconPath => {\n    if (!iconTargetCategory) return;\n    try {\n      await updateCategory(iconTargetCategory.category_id, {\n        icon_path: iconPath\n      });\n      // Update state categories secara langsung\n      setCategories(prev => prev.map(cat => cat.id === iconTargetCategory.category_id ? {\n        ...cat,\n        icon_path: iconPath\n      } : cat));\n      // Update icon_path in budgetsByMonth if exists\n      setBudgetsByMonth(prevBudgets => {\n        const currentMonthBudgets = prevBudgets[selectedMonth] || [];\n        const updatedBudgets = currentMonthBudgets.map(b => b.category_id === iconTargetCategory.category_id ? {\n          ...b,\n          icon_path: iconPath\n        } : b);\n        return {\n          ...prevBudgets,\n          [selectedMonth]: updatedBudgets\n        };\n      });\n      setIconPickerOpen(false);\n      // fetchData(); // Tidak perlu fetchData jika update state lokal sudah cukup\n    } catch (error) {\n      console.error(\"Gagal update ikon:\", error);\n      alert(error.message);\n    }\n  };\n  function formatMonth(monthStr) {\n    const [year, month] = monthStr.split(\"-\");\n    const monthNames = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\n    return `${monthNames[parseInt(month, 10) - 1]} ${year}`;\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-col items-start justify-center min-h-screen bg-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row w-full bg-black shadow-md\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"px-5 py-4 text-xl font-bold text-white\",\n        children: \"=\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-700 shadow-md text-center py-9 md:py-32 lg:py-32\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-semibold text-white mb-4 text-4xl md:text-6xl lg:text-7xl\",\n        children: \"DuitKu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"absolute top-4 right-4 bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded-lg shadow\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline-flex rounded-full overflow-hidden shadow-md border border-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-gray-500 text-white px-6 py-2 text-sm md:text-base font-medium rounded-l-full\",\n          children: \"Transaksi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/hutang\"),\n          className: \"bg-white text-gray-500 hover:bg-gray-100 px-6 py-2 text-sm md:text-base font-medium rounded-r-full\",\n          children: \"Hutang\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-10 px-10 flex flex-row bg-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col w-1/6 mr-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"bg-gray-500 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white px-2 w-3/4\",\n            children: \"Kategori Bulanan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 py-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"month-select\",\n              className: \"text-sm font-semibold mr-2 text-gray-700\",\n              children: \"Pilih Bulan:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedMonth,\n              onChange: e => {\n                const val = e.target.value;\n                if (val === \"add_new\") {\n                  setIsModalAddMonthOpen(true);\n                } else {\n                  setSelectedMonth(val);\n                }\n              },\n              children: [Object.keys(budgetsByMonth).sort((a, b) => new Date(a) - new Date(b)).map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: month,\n                children: formatMonth(month)\n              }, month, false, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"add_new\",\n                children: \"+ Tambah Bulan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-3 py-1 w-full\",\n            children: [(budgetsByMonth[selectedMonth] || []).map(item => {\n              const budgetAmount = parseFloat(item.amount) || 0;\n              const usedAmount = parseFloat(item.used) || 0;\n              const percentage = budgetAmount > 0 ? usedAmount / budgetAmount * 100 : 0;\n              const isEditing = editingBudgetId === item.category_id;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4/6 sm:w-4/6 lg:w-2/3\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-white border rounded-xl px-2 py-1 gap-1 flex flex-col w-full border-gray-300\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex flex-row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-wrap items-center w-5/6\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"w-8 h-8 rounded-full border bg-gray-200 flex items-center justify-center cursor-pointer mr-2 flex-shrink-0\",\n                        onClick: () => handleOpenIconPicker(item),\n                        title: \"Ubah Ikon\",\n                        children: item.icon_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: item.icon_path,\n                          alt: item.category_name,\n                          className: \"w-full h-full object-cover rounded-full\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 564,\n                          columnNumber: 37\n                        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-gray-500 text-xl font-light\",\n                          children: \"+\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 566,\n                          columnNumber: 37\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 558,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-sm\",\n                        children: item.category_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 569,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 557,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(DropdownAksi, {\n                      onEdit: () => handleOpenEditCategoryModal(item),\n                      onDelete: () => handleHapusKategori(item.category_id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 571,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-[11px] mt-1 w-fit relative group inline-block\",\n                    children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      value: editingBudgetAmount,\n                      onChange: e => setEditingBudgetAmount(e.target.value),\n                      onBlur: () => handleSaveBudget(item.category_id, editingBudgetAmount),\n                      onKeyDown: e => {\n                        if (e.key === 'Enter') handleSaveBudget(item.category_id, editingBudgetAmount);\n                      },\n                      autoFocus: true,\n                      className: \"w-24 border-b-2 border-blue-500 outline-none\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 578,\n                      columnNumber: 33\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      onClick: () => {\n                        setEditingBudgetId(item.category_id);\n                        setEditingBudgetAmount(budgetAmount);\n                      },\n                      className: \"cursor-pointer\",\n                      children: [\"Rp \", budgetAmount.toLocaleString('id-ID')]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 588,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 576,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex flex-row gap-1 items-center relative w-fit group cursor-pointer\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text-[11px]\",\n                      children: [percentage.toFixed(0), \"%\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n                      percentage: percentage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"absolute left-full top-1/2 ml-2 -translate-y-1/2\\r bg-gray-500 text-white text-[11px] px-1 py-1 rounded \\r opacity-0 group-hover:opacity-100 transition-all duration-200 \\r whitespace-nowrap z-10\\r pointer-events-none\",\n                      children: \"Pemakaian\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 598,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 21\n                }, this)\n              }, item.category_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 19\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleOpenAddCategoryModal,\n              className: \"bg-gray-100 text-gray-300 xl:text-[12px] 2xl:text-[15px] px-5 py-2 rounded hover:bg-gray-500 w-9/12\",\n              children: \"+ Tambah Kategori\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"bg-gray-500 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white px-2 w-3/4\",\n          children: \"Daftar Akun\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-3 py-1 w-full\",\n          children: [accounts.length > 0 ? accounts.map(account => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4/6 sm:w-4/6 lg:w-2/3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white border rounded-xl px-2 py-2 gap-1 flex flex-col w-full border-gray-300\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-row justify-between items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm font-medium text-gray-800\",\n                  children: account.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(DropdownAksi, {\n                  onEdit: () => handleOpenEditAccountModal(account),\n                  onDelete: () => handleDeleteAccount(account.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 634,\n                  columnNumber: 34\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 632,\n                columnNumber: 30\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-semibold text-gray-900\",\n                children: [\"Rp \", Number(account.balance).toLocaleString('id-ID')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 27\n            }, this)\n          }, account.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 23\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"p-2 text-sm text-gray-500\",\n            children: \"Belum ada akun.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleOpenAddAccountModal,\n            className: \"bg-gray-100 text-gray-400 text-sm px-5 py-2 rounded-xl hover:bg-gray-200 w-4/6 sm:w-4/6 lg:w-2/3\",\n            children: \"+ Tambah Akun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-3/6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"bg-gray-300 rounded-md text-lg md:2xl lg:text-3xl font-bold text-white mx-2 px-2 w-5/6\",\n            children: \"Transaksi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b border-gray-200 dark:border-gray-700 mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"flex flex-wrap -mb-px text-sm font-medium text-center text-gray-500 dark:text-gray-400\",\n              children: [\"Terkini\", \"Harian\", \"Bulanan\", \"Tahunan\"].map(tab => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"me-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setSelectedTab(tab),\n                  className: `inline-flex items-center justify-center p-4 border-b-2 rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300 group ${selectedTab === tab ? \"text-blue-600 border-blue-600 dark:text-blue-500 dark:border-blue-500\" : \"border-transparent\"}`,\n                  children: tab\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 21\n                }, this)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 13\n          }, this), selectedTab === \"Terkini\" && /*#__PURE__*/_jsxDEV(Recent, {\n            budgets: budgetsByMonth,\n            akun: null,\n            transactions: transactions,\n            type: \"Budget\",\n            onDelete: handleDeleteTransaction,\n            onEdit: handleOpenEditTransactionModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 15\n          }, this), selectedTab === \"Harian\" && /*#__PURE__*/_jsxDEV(FilterTransaksi, {\n            budgets: budgetsByMonth,\n            akun: null,\n            tab: \"Harian\",\n            transactions: transactions,\n            setTransactions: setTransactions,\n            type: \"Budget\",\n            onDelete: handleDeleteTransaction,\n            onEdit: handleOpenEditTransactionModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 15\n          }, this), selectedTab === \"Bulanan\" && /*#__PURE__*/_jsxDEV(FilterTransaksi, {\n            budgets: budgetsByMonth,\n            akun: null,\n            tab: \"Bulanan\",\n            transactions: transactions,\n            setTransactions: setTransactions,\n            type: \"Budget\",\n            onDelete: handleDeleteTransaction,\n            onEdit: handleOpenEditTransactionModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 15\n          }, this), selectedTab === \"Tahunan\" && /*#__PURE__*/_jsxDEV(FilterTransaksi, {\n            budgets: budgetsByMonth,\n            akun: null,\n            tab: \"Tahunan\",\n            transactions: transactions,\n            setTransactions: setTransactions,\n            type: \"Budget\",\n            onDelete: handleDeleteTransaction,\n            onEdit: handleOpenEditTransactionModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col mt-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"bg-gray-300 rounded-md text-lg md:2xl lg:text-3xl font-bold text-white mx-2 px-2 w-5/6\",\n            children: \"Pendapatan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-b border-gray-200 dark:border-gray-700 mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"flex flex-wrap -mb-px text-sm font-medium text-center text-gray-500 dark:text-gray-400\",\n              children: [\"Terkini\", \"Harian\", \"Bulanan\", \"Tahunan\"].map(tab => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"me-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setSelectedTabPendapatan(tab),\n                  className: `inline-flex items-center justify-center p-4 border-b-2 rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300 group ${selectedTabPendapatan === tab ? \"text-blue-600 border-blue-600 dark:text-blue-500 dark:border-blue-500\" : \"border-transparent\"}`,\n                  children: tab\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 23\n                }, this)\n              }, tab, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this), selectedTabPendapatan === \"Terkini\" && /*#__PURE__*/_jsxDEV(Recent, {\n            budgets: null,\n            akun: null,\n            transactions: pendapatan,\n            onDelete: handleDeleteTransaction,\n            onEdit: handleOpenEditTransactionModal,\n            type: \"Akun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 19\n          }, this), selectedTabPendapatan === \"Harian\" && /*#__PURE__*/_jsxDEV(FilterTransaksi, {\n            budgets: null,\n            akun: null,\n            tab: \"Harian\",\n            transactions: pendapatan,\n            setTransactions: setPendapatan,\n            type: \"Akun\",\n            onDelete: handleDeleteTransaction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 19\n          }, this), selectedTabPendapatan === \"Bulanan\" && /*#__PURE__*/_jsxDEV(FilterTransaksi, {\n            budgets: null,\n            akun: null,\n            tab: \"Bulanan\",\n            transactions: pendapatan,\n            setTransactions: setPendapatan,\n            type: \"Akun\",\n            onDelete: handleDeleteTransaction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 19\n          }, this), selectedTabPendapatan === \"Tahunan\" && /*#__PURE__*/_jsxDEV(FilterTransaksi, {\n            budgets: null,\n            akun: null,\n            tab: \"Tahunan\",\n            transactions: pendapatan,\n            setTransactions: setPendapatan,\n            type: \"Akun\",\n            onDelete: handleDeleteTransaction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 782,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-2/6 px-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"bg-gray-300 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white mx-2 px-2 w-full\",\n            children: \"Graph Pengeluaran\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartKeuangan, {\n            transactions: transactions,\n            type: \"expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"bg-gray-300 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white mx-2 px-2 w-full\",\n            children: \"Graph Pendapatan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartKeuangan, {\n            transactions: pendapatan,\n            type: \"income\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalAddMonth, {\n      isOpen: isModalAddMonthOpen,\n      onClose: () => setIsModalAddMonthOpen(false),\n      onAddMonth: handleAddMonth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalTransaksi, {\n      isOpen: isTransactionModalOpen,\n      onClose: () => setTransactionModalOpen(false),\n      onSave: handleSaveTransaction,\n      initialData: selectedTransaction,\n      categories: categories,\n      accounts: accounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalKategori, {\n      isOpen: isCategoryModalOpen,\n      onClose: () => setCategoryModalOpen(false),\n      onSave: handleSaveCategory,\n      initialData: selectedCategory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalAkun, {\n      isOpen: isAccountModalOpen,\n      onClose: () => setAccountModalOpen(false),\n      onSave: handleSaveAccount,\n      initialData: selectedAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 7\n    }, this), isIconPickerOpen && /*#__PURE__*/_jsxDEV(IconPickerModal, {\n      onClose: () => setIconPickerOpen(false),\n      onSelect: handleIconSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 478,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6j3sCTYjIHoniokC2p7XO5HXr9M=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ModalAddMonth","React","useEffect","useState","useCallback","IconPickerModal","Recent","FilterTransaksi","ChartKeuangan","ModalTransaksi","ModalKategori","ModalAkun","useNavigate","DropdownAksi","getTransactions","getBudgets","getCategories","deleteTransaction","deleteCategory","setBudget","createTransaction","updateTransaction","createCategory","updateCategory","createAccount","getAccounts","updateAccount","deleteAccount","jsxDEV","_jsxDEV","App","_s","navigate","accounts","setAccounts","budgetsByMonth","setBudgetsByMonth","transactions","setTransactions","pendapatan","setPendapatan","categories","setCategories","isTransactionModalOpen","setTransactionModalOpen","selectedTransaction","setSelectedTransaction","isCategoryModalOpen","setCategoryModalOpen","selectedCategory","setSelectedCategory","selectedAccount","setSelectedAccount","editingBudgetId","setEditingBudgetId","editingBudgetAmount","setEditingBudgetAmount","isLoading","setIsLoading","isModalAddMonthOpen","setIsModalAddMonthOpen","selectedTab","setSelectedTab","selectedTabPendapatan","setSelectedTabPendapatan","isIconPickerOpen","setIconPickerOpen","iconTargetCategory","setIconTargetCategory","selectedMonth","setSelectedMonth","d","Date","getFullYear","String","getMonth","padStart","fetchData","fetchedBudgets","fetchedCategories","newBudgetsByMonth","forEach","budget","monthKey","year","month","category_id","sortedMonths","Object","keys","sort","a","b","length","today","currentMonth","error","console","handleAddMonth","newMonth","alert","split","existingCategories","budgetPromises","map","category","id","amount","parseInt","Promise","all","formatMonth","message","handleSaveBudget","categoryId","parsedAmount","parseFloat","prevBudgets","currentMonthBudgets","updatedBudgets","handleDeleteTransaction","transactionId","window","confirm","prev","filter","tx","p","handleHapusKategori","cat","newBudgets","handleOpenEditTransactionModal","transaction","handleSaveTransaction","data","savedTransaction","type","updateData","handleOpenAddCategoryModal","handleOpenEditCategoryModal","name","category_name","handleSaveCategory","newCategory","newBudget","isAccountModalOpen","setAccountModalOpen","handleOpenAddAccountModal","handleSaveAccount","savedAccount","acc","handleDeleteAccount","accountId","handleOpenEditAccountModal","account","handleLogout","localStorage","removeItem","CircularProgress","percentage","pct","Number","radius","stroke","normalized","circumference","Math","PI","clamped","min","offset","color","className","viewBox","children","strokeWidth","fill","r","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","strokeDashoffset","strokeLinecap","handleOpenIconPicker","handleIconSelect","iconPath","icon_path","monthStr","monthNames","onClick","htmlFor","value","onChange","e","val","target","item","budgetAmount","usedAmount","used","isEditing","title","src","alt","onEdit","onDelete","onBlur","onKeyDown","key","autoFocus","toLocaleString","toFixed","balance","tab","budgets","akun","isOpen","onClose","onAddMonth","onSave","initialData","onSelect","_c","$RefreshReg$"],"sources":["E:/testis/frontend/src/HalamanUtama.js"],"sourcesContent":["import ModalAddMonth from \"./ModalAddMonth\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport IconPickerModal from \"./IconPickerModal\";\r\nimport Recent from './RecentTransaction';\r\nimport FilterTransaksi from './FilterTransaksi';\r\nimport ChartKeuangan from './ChartKeuangan';\r\nimport ModalTransaksi from './ModalTransaksi';\r\nimport ModalKategori from './ModalKategori';\r\nimport ModalAkun from './ModalAkun';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DropdownAksi from \"./DropdownButton\";\r\nimport { \r\n  getTransactions, getBudgets, getCategories, deleteTransaction, \r\n  deleteCategory, setBudget,createTransaction, updateTransaction, \r\n  createCategory, updateCategory, createAccount, getAccounts, \r\n  updateAccount, deleteAccount\r\n} from './apiservice';\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [budgetsByMonth, setBudgetsByMonth] = useState({});\r\n  const [transactions, setTransactions] = useState([]); // Pengeluaran\r\n  const [pendapatan, setPendapatan] = useState([]); // Pendapatan\r\n  const [categories, setCategories] = useState([]);\r\n  const [isTransactionModalOpen, setTransactionModalOpen] = useState(false);\r\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\r\n  const [isCategoryModalOpen, setCategoryModalOpen] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [selectedAccount, setSelectedAccount] = useState(null);\r\n  const [editingBudgetId, setEditingBudgetId] = useState(null);\r\n  const [editingBudgetAmount, setEditingBudgetAmount] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isModalAddMonthOpen, setIsModalAddMonthOpen] = useState(false);\r\n  const [selectedTab, setSelectedTab] = useState(\"Terkini\");\r\n  const [selectedTabPendapatan, setSelectedTabPendapatan] = useState(\"Terkini\");\r\n  const [isIconPickerOpen, setIconPickerOpen] = useState(false);\r\n  const [iconTargetCategory, setIconTargetCategory] = useState(null);\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState(() => {\r\n    const d = new Date();\r\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}`;\r\n  });\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n        // Hapus pemisahan year, month di sini karena getBudgets akan mengambil semua\r\n        const fetchedBudgets = await getBudgets(); // <--- Panggil tanpa parameter\r\n        const fetchedCategories = await getCategories();\r\n\r\n        setCategories(fetchedCategories);\r\n\r\n        const newBudgetsByMonth = {};\r\n        fetchedBudgets.forEach(budget => {\r\n            const monthKey = `${budget.year}-${String(budget.month).padStart(2, '0')}`;\r\n            if (!newBudgetsByMonth[monthKey]) {\r\n                newBudgetsByMonth[monthKey] = {}; // Inisialisasi objek untuk bulan ini\r\n            }\r\n            newBudgetsByMonth[monthKey][budget.category_id] = budget;\r\n        });\r\n\r\n        setBudgetsByMonth(newBudgetsByMonth);\r\n\r\n        const sortedMonths = Object.keys(newBudgetsByMonth).sort((a, b) => new Date(a) - new Date(b));\r\n        if (sortedMonths.length > 0 && !selectedMonth) {\r\n            setSelectedMonth(sortedMonths[sortedMonths.length - 1]); // Set ke bulan terbaru\r\n        } else if (sortedMonths.length === 0 && !selectedMonth) {\r\n            const today = new Date();\r\n            const currentMonth = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n            setSelectedMonth(currentMonth);\r\n        } else if (selectedMonth && !newBudgetsByMonth[selectedMonth]) {\r\n            // Jika selectedMonth saat ini tidak ada di data yang baru diambil,\r\n            // (misal setelah menghapus semua budget di bulan itu), pindah ke bulan terbaru\r\n            if (sortedMonths.length > 0) {\r\n                setSelectedMonth(sortedMonths[sortedMonths.length - 1]);\r\n            } else {\r\n                // Jika tidak ada bulan sama sekali, kembali ke bulan saat ini\r\n                const today = new Date();\r\n                const currentMonth = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n                setSelectedMonth(currentMonth);\r\n            }\r\n        }\r\n\r\n\r\n    } catch (error) {\r\n        console.error(\"Gagal mengambil data:\", error);\r\n    } finally {\r\n        setIsLoading(false);\r\n    }\r\n}, [selectedMonth]); // HANYA PANGGIL FETCDATA JIKA BULAN BERUBAH\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n   const handleAddMonth = async (newMonth) => {\r\n    if (budgetsByMonth[newMonth]) {\r\n      alert(\"Maaf, bulan sudah ada!\");\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true); // Tampilkan loading saat proses\r\n    try {\r\n      const [year, month] = newMonth.split('-');\r\n      \r\n      // Dapatkan semua kategori yang ada\r\n      const existingCategories = categories; // Ambil dari state categories yang sudah ada\r\n      \r\n      // Buat array Promise untuk setiap kategori\r\n      const budgetPromises = existingCategories.map(async (category) => {\r\n        // Panggil API setBudget untuk setiap kategori dengan amount 0\r\n        // Backend Anda harus bisa menangani pembuatan budget baru jika belum ada\r\n        await setBudget({\r\n          category_id: category.id, // Gunakan category.id dari daftar kategori\r\n          amount: 0, // Inisialisasi dengan budget nol\r\n          year: parseInt(year),\r\n          month: parseInt(month),\r\n        });\r\n      });\r\n\r\n      // Tunggu semua promise selesai\r\n      await Promise.all(budgetPromises);\r\n\r\n      // Setelah semua budget diinisialisasi di backend,\r\n      // update state lokal dan panggil fetchData untuk mengambil semua data bulan baru\r\n      setSelectedMonth(newMonth); // Ini akan memicu fetchData\r\n      setIsModalAddMonthOpen(false); // Tutup modal\r\n      alert(`Bulan ${formatMonth(newMonth)} berhasil ditambahkan dan diinisialisasi.`);\r\n    } catch (error) {\r\n      console.error(\"Gagal menambahkan bulan baru:\", error);\r\n      alert(\"Gagal menambahkan bulan baru: \" + error.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // **** UPDATE: handleSaveBudget ****\r\n  const handleSaveBudget = async (categoryId, amount) => {\r\n    const [year, month] = selectedMonth.split('-');\r\n    try {\r\n      const parsedAmount = parseFloat(amount) || 0;\r\n      await setBudget({\r\n        category_id: categoryId,\r\n        amount: parsedAmount,\r\n        year: parseInt(year),\r\n        month: parseInt(month),\r\n      });\r\n\r\n      // Update state lokal secara langsung\r\n      setBudgetsByMonth(prevBudgets => {\r\n        const currentMonthBudgets = prevBudgets[selectedMonth] || [];\r\n        const updatedBudgets = currentMonthBudgets.map(b =>\r\n          b.category_id === categoryId ? { ...b, amount: parsedAmount } : b\r\n        );\r\n        return {\r\n          ...prevBudgets,\r\n          [selectedMonth]: updatedBudgets\r\n        };\r\n      });\r\n\r\n      alert('Budget berhasil disimpan.');\r\n      // fetchData(); // Tidak perlu fetchData() jika update state lokal sudah dilakukan dengan benar\r\n    } catch (error) {\r\n      console.error(\"Gagal simpan budget:\", error);\r\n      alert(error.message);\r\n    } finally {\r\n      setEditingBudgetId(null);\r\n    }\r\n  };\r\n\r\n  // **** UPDATE: handleDeleteTransaction ****\r\n  const handleDeleteTransaction = async (transactionId) => {\r\n    if (window.confirm(\"Anda yakin ingin menghapus transaksi ini?\")) {\r\n      try {\r\n        await deleteTransaction(transactionId);\r\n        // Update state secara manual agar UI cepat merespons\r\n        setTransactions(prev => prev.filter(tx => tx.id !== transactionId));\r\n        setPendapatan(prev => prev.filter(p => p.id !== transactionId));\r\n        \r\n        // Opsional: Jika penghapusan transaksi mempengaruhi total 'used' di budget, Anda mungkin perlu mengupdate 'used' di budgetsByMonth\r\n        // Ini akan lebih kompleks karena Anda perlu tahu detail transaksi yang dihapus\r\n        // Untuk saat ini, asumsikan fetchData() akan menangani re-kalkulasi 'used' di budget\r\n        fetchData(); // Karena perubahan transaksi memengaruhi \"used\" budget dan saldo akun, kita masih perlu fetchData\r\n        alert('Transaksi berhasil dihapus.');\r\n      } catch (error) {\r\n        console.error(\"Gagal menghapus transaksi:\", error);\r\n        alert(error.message);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // **** UPDATE: handleHapusKategori ****\r\n  const handleHapusKategori = async (categoryId) => {\r\n    if (window.confirm(\"Yakin ingin menghapus kategori ini?\")) {\r\n      try {\r\n        await deleteCategory(categoryId);\r\n        // Update state categories secara langsung\r\n        setCategories(prev => prev.filter(cat => cat.id !== categoryId));\r\n        \r\n        // Hapus juga dari budgetsByMonth jika ada\r\n        setBudgetsByMonth(prev => {\r\n          const newBudgets = { ...prev };\r\n          for (const month in newBudgets) {\r\n            newBudgets[month] = newBudgets[month].filter(b => b.category_id !== categoryId);\r\n          }\r\n          return newBudgets;\r\n        });\r\n        \r\n        // Karena ini juga bisa mempengaruhi transaksi yang sudah ada, lebih aman untuk fetchData\r\n        fetchData(); \r\n        alert('Kategori berhasil dihapus.');\r\n      } catch (error) {\r\n        console.error(\"Gagal hapus kategori:\", error);\r\n        alert(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleOpenEditTransactionModal = (transaction) => {\r\n    setSelectedTransaction(transaction);\r\n    setTransactionModalOpen(true);\r\n  };\r\n\r\n  // **** UPDATE: handleSaveTransaction ****\r\n  const handleSaveTransaction = async (data) => {\r\n    try {\r\n      let savedTransaction;\r\n      if (data.id) {\r\n        const { type, ...updateData } = data;\r\n        await updateTransaction(data.id, updateData);\r\n        savedTransaction = { ...data }; // Gunakan data yang dikirim karena API tidak mengembalikan seluruh objek\r\n      } else {\r\n        savedTransaction = await createTransaction(data); // Asumsi API mengembalikan objek transaksi yang dibuat\r\n      }\r\n\r\n      // Update state transaksi secara langsung\r\n      if (savedTransaction.type === 'expense') {\r\n        setTransactions(prev => {\r\n          if (data.id) {\r\n            return prev.map(tx => tx.id === savedTransaction.id ? savedTransaction : tx);\r\n          } else {\r\n            return [...prev, savedTransaction];\r\n          }\r\n        });\r\n      } else if (savedTransaction.type === 'income') {\r\n        setPendapatan(prev => {\r\n          if (data.id) {\r\n            return prev.map(tx => tx.id === savedTransaction.id ? savedTransaction : tx);\r\n          } else {\r\n            return [...prev, savedTransaction];\r\n          }\r\n        });\r\n      }\r\n\r\n      setTransactionModalOpen(false);\r\n      // Panggil fetchData untuk memastikan semua data (terutama saldo akun dan budget 'used') terupdate\r\n      // Karena perubahan transaksi dapat mempengaruhi beberapa state lain yang perhitungannya kompleks\r\n      fetchData(); \r\n      alert('Transaksi berhasil disimpan!');\r\n    } catch (error) {\r\n      console.error('Gagal menyimpan transaksi:', error);\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const handleOpenAddCategoryModal = () => {\r\n    setSelectedCategory(null);\r\n    setCategoryModalOpen(true);\r\n  };\r\n\r\n  const handleOpenEditCategoryModal = (category) => {\r\n    setSelectedCategory({ id: category.category_id, name: category.category_name });\r\n    setCategoryModalOpen(true);\r\n  };\r\n\r\n  // **** UPDATE: handleSaveCategory ****\r\n  const handleSaveCategory = async (data) => {\r\n    try {\r\n      if (data.id) {\r\n        await updateCategory(data.id, { name: data.name });\r\n        // Update state categories\r\n        setCategories(prev => \r\n          prev.map(cat => cat.id === data.id ? { ...cat, name: data.name } : cat)\r\n        );\r\n        // Update category name in budgetsByMonth if exists\r\n        setBudgetsByMonth(prevBudgets => {\r\n            const currentMonthBudgets = prevBudgets[selectedMonth] || [];\r\n            const updatedBudgets = currentMonthBudgets.map(b =>\r\n                b.category_id === data.id ? { ...b, category_name: data.name } : b\r\n            );\r\n            return {\r\n                ...prevBudgets,\r\n                [selectedMonth]: updatedBudgets\r\n            };\r\n        });\r\n        alert('Nama kategori berhasil diupdate!');\r\n      } else {\r\n        const newCategory = await createCategory({ name: data.name });\r\n        // Update state categories\r\n        setCategories(prev => [...prev, newCategory]);\r\n\r\n        if (data.amount > 0) {\r\n          const [year, month] = selectedMonth.split('-');\r\n          const newBudget = await setBudget({ // Asumsi setBudget mengembalikan data budget yang dibuat/diupdate\r\n            category_id: newCategory.id,\r\n            amount: data.amount,\r\n            year: parseInt(year),\r\n            month: parseInt(month),\r\n          });\r\n          // Update state budgetsByMonth\r\n          setBudgetsByMonth(prevBudgets => {\r\n            const currentMonthBudgets = prevBudgets[selectedMonth] || [];\r\n            return {\r\n              ...prevBudgets,\r\n              [selectedMonth]: [...currentMonthBudgets, { ...newBudget, category_name: newCategory.name }]\r\n            };\r\n          });\r\n        }\r\n        alert('Kategori baru berhasil ditambahkan!');\r\n      }\r\n      setCategoryModalOpen(false);\r\n      // fetchData(); // Tidak perlu fetchData jika update state lokal sudah cukup\r\n    } catch (error) {\r\n      console.error('Gagal menyimpan kategori:', error);\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  const [isAccountModalOpen, setAccountModalOpen] = useState(false);\r\n\r\n  const handleOpenAddAccountModal = () => setAccountModalOpen(true);\r\n\r\n  // **** UPDATE: handleSaveAccount ****\r\n  const handleSaveAccount = async (data) => {\r\n    try {\r\n      let savedAccount;\r\n      if (data.id) {\r\n        await updateAccount(data.id, data);\r\n        savedAccount = { ...data }; // Asumsi API tidak mengembalikan seluruh objek\r\n      } else {\r\n        savedAccount = await createAccount(data); // Asumsi API mengembalikan objek akun yang dibuat\r\n      }\r\n      \r\n      // Update state accounts\r\n      setAccounts(prev => {\r\n        if (data.id) {\r\n          return prev.map(acc => acc.id === savedAccount.id ? savedAccount : acc);\r\n        } else {\r\n          return [...prev, savedAccount];\r\n        }\r\n      });\r\n      setAccountModalOpen(false);\r\n      // fetchData(); // fetchData masih mungkin diperlukan karena perubahan akun bisa memengaruhi transaksi\r\n      alert('Akun berhasil disimpan!');\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // **** UPDATE: handleDeleteAccount ****\r\n  const handleDeleteAccount = async (accountId) => {\r\n    if(window.confirm('Yakin ingin menghapus akun ini? Aksi ini tidak bisa dibatalkan.')){\r\n      try {\r\n        await deleteAccount(accountId);\r\n        // Update state accounts secara langsung\r\n        setAccounts(prev => prev.filter(acc => acc.id !== accountId));\r\n        // Karena penghapusan akun mungkin memengaruhi transaksi yang terkait, lebih aman fetchData\r\n        fetchData();\r\n        alert('Akun berhasil dihapus.');\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleOpenEditAccountModal = (account) => {\r\n    setSelectedAccount(account);\r\n    setAccountModalOpen(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('userToken');\r\n    navigate('/');\r\n  };\r\n\r\n  const CircularProgress = ({ percentage }) => {\r\n    const pct = Number(percentage);\r\n    const radius = 20;\r\n    const stroke = 4;\r\n    const normalized = radius - stroke / 2;\r\n    const circumference = 2 * Math.PI * normalized;\r\n  \r\n    const clamped = Math.min(pct, 100);\r\n    const offset = circumference * (1 - clamped / 100);\r\n  \r\n    const color =\r\n      pct > 99 ? 'stroke-red-500'\r\n      : pct > 50 ? 'stroke-yellow-400'\r\n      : pct > 0 ? 'stroke-green-400'\r\n      : 'stroke-transparent';\r\n  \r\n    return (\r\n      <svg className=\"w-5 h-5\" viewBox=\"0 0 48 48\">\r\n        <circle\r\n          className=\"stroke-gray-200\"\r\n          strokeWidth={stroke}\r\n          fill=\"transparent\"\r\n          r={normalized}\r\n          cx=\"24\"\r\n          cy=\"24\"\r\n        />\r\n        <circle\r\n          className={`transition-all duration-300 ${color}`}\r\n          strokeWidth={stroke}\r\n          fill=\"transparent\"\r\n          r={normalized}\r\n          cx=\"24\"\r\n          cy=\"24\"\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={offset}\r\n          strokeLinecap=\"round\"\r\n        />\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  // **** UPDATE: handleIconSelect ****\r\n  const handleOpenIconPicker = (category) => {\r\n    setIconTargetCategory(category);\r\n    setIconPickerOpen(true);\r\n  };\r\n\r\n  const handleIconSelect = async (iconPath) => {\r\n    if (!iconTargetCategory) return;\r\n    try {\r\n      await updateCategory(iconTargetCategory.category_id, { icon_path: iconPath });\r\n      // Update state categories secara langsung\r\n      setCategories(prev => \r\n        prev.map(cat => \r\n          cat.id === iconTargetCategory.category_id ? { ...cat, icon_path: iconPath } : cat\r\n        )\r\n      );\r\n      // Update icon_path in budgetsByMonth if exists\r\n        setBudgetsByMonth(prevBudgets => {\r\n            const currentMonthBudgets = prevBudgets[selectedMonth] || [];\r\n            const updatedBudgets = currentMonthBudgets.map(b =>\r\n                b.category_id === iconTargetCategory.category_id ? { ...b, icon_path: iconPath } : b\r\n            );\r\n            return {\r\n                ...prevBudgets,\r\n                [selectedMonth]: updatedBudgets\r\n            };\r\n        });\r\n\r\n      setIconPickerOpen(false);\r\n      // fetchData(); // Tidak perlu fetchData jika update state lokal sudah cukup\r\n    } catch (error) {\r\n      console.error(\"Gagal update ikon:\", error);\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  function formatMonth(monthStr) {\r\n    const [year, month] = monthStr.split(\"-\");\r\n    const monthNames = [\r\n      \"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n      \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"\r\n    ];\r\n    return `${monthNames[parseInt(month, 10) - 1]} ${year}`;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-col items-start justify-center min-h-screen bg-gray-200\">\r\n      {/* ... (bagian JSX lainnya sama) ... */}\r\n\r\n      <div className=\"flex flex-row w-full bg-black shadow-md\">\r\n        <h1 className=\"px-5 py-4 text-xl font-bold text-white\">=</h1>\r\n      </div>\r\n  \r\n      <div className=\"w-full bg-gray-700 shadow-md text-center py-9 md:py-32 lg:py-32\">\r\n        <h1 className=\"font-semibold text-white mb-4 text-4xl md:text-6xl lg:text-7xl\">\r\n          DuitKu\r\n        </h1>\r\n        <button\r\n          onClick={handleLogout}\r\n          className=\"absolute top-4 right-4 bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded-lg shadow\"\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n      <div className=\"flex justify-center mt-5\">\r\n        <div className=\"inline-flex rounded-full overflow-hidden shadow-md border border-gray-500\">\r\n          <button\r\n            className=\"bg-gray-500 text-white px-6 py-2 text-sm md:text-base font-medium rounded-l-full\"\r\n          >\r\n            Transaksi\r\n          </button>\r\n          <button\r\n            onClick={() => navigate(\"/hutang\")}\r\n            className=\"bg-white text-gray-500 hover:bg-gray-100 px-6 py-2 text-sm md:text-base font-medium rounded-r-full\"\r\n          >\r\n            Hutang \r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"py-10 px-10 flex flex-row bg-gray-200\">\r\n        <div className=\"flex flex-col w-1/6 mr-8\">\r\n          <div className=\"flex flex-col\">\r\n            <h1 className=\"bg-gray-500 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white px-2 w-3/4\">\r\n              Kategori Bulanan\r\n            </h1>\r\n            <div className=\"mb-4 py-2\">\r\n              <label htmlFor=\"month-select\" className=\"text-sm font-semibold mr-2 text-gray-700\">\r\n                Pilih Bulan:\r\n              </label>\r\n              <select\r\n                value={selectedMonth}\r\n                onChange={(e) => {\r\n                  const val = e.target.value;\r\n                  if (val === \"add_new\") {\r\n                    setIsModalAddMonthOpen(true);\r\n                  } else {\r\n                    setSelectedMonth(val);\r\n                  }\r\n                }}\r\n              >\r\n                {Object.keys(budgetsByMonth)\r\n                  .sort((a, b) => new Date(a) - new Date(b))\r\n                  .map((month) => (\r\n                    <option key={month} value={month}>\r\n                      {formatMonth(month)}\r\n                    </option>\r\n                  ))\r\n                }\r\n                <option value=\"add_new\">+ Tambah Bulan</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"flex flex-wrap gap-3 py-1 w-full\">\r\n              {(budgetsByMonth[selectedMonth] || []).map((item) => {\r\n                const budgetAmount = parseFloat(item.amount) || 0;\r\n                const usedAmount = parseFloat(item.used) || 0;\r\n                const percentage = budgetAmount > 0 ? (usedAmount / budgetAmount) * 100 : 0;\r\n                const isEditing = editingBudgetId === item.category_id;\r\n  \r\n                return (\r\n                  <div\r\n                    key={item.category_id}\r\n                    className=\"w-4/6 sm:w-4/6 lg:w-2/3\"\r\n                  >\r\n                    <div className=\"bg-white border rounded-xl px-2 py-1 gap-1 flex flex-col w-full border-gray-300\">\r\n                      <div className=\"flex flex-row\">\r\n                        <div className=\"flex flex-wrap items-center w-5/6\">\r\n                          <div\r\n                              className=\"w-8 h-8 rounded-full border bg-gray-200 flex items-center justify-center cursor-pointer mr-2 flex-shrink-0\"\r\n                              onClick={() => handleOpenIconPicker(item)}\r\n                              title=\"Ubah Ikon\"\r\n                            >\r\n                              {item.icon_path ? (\r\n                                    <img src={item.icon_path} alt={item.category_name} className=\"w-full h-full object-cover rounded-full\" />\r\n                                ) : (\r\n                                    <span className=\"text-gray-500 text-xl font-light\">+</span>\r\n                                )}\r\n                            </div>\r\n                            <span className=\"text-sm\">{item.category_name}</span>\r\n                        </div>\r\n                        <DropdownAksi\r\n                            onEdit={() => handleOpenEditCategoryModal(item)}\r\n                            onDelete={() => handleHapusKategori(item.category_id)}\r\n                        />\r\n                      </div>\r\n                      <div className=\"text-[11px] mt-1 w-fit relative group inline-block\">\r\n                          {isEditing ? (\r\n                                <input\r\n                                    type=\"number\"\r\n                                    value={editingBudgetAmount}\r\n                                    onChange={(e) => setEditingBudgetAmount(e.target.value)}\r\n                                    onBlur={() => handleSaveBudget(item.category_id, editingBudgetAmount)}\r\n                                    onKeyDown={(e) => { if (e.key === 'Enter') handleSaveBudget(item.category_id, editingBudgetAmount) }}\r\n                                    autoFocus\r\n                                    className=\"w-24 border-b-2 border-blue-500 outline-none\"\r\n                                />\r\n                            ) : (\r\n                                <span onClick={() => {\r\n                                    setEditingBudgetId(item.category_id);\r\n                                    setEditingBudgetAmount(budgetAmount);\r\n                                }}\r\n                                className=\"cursor-pointer\"\r\n                                >\r\n                                    Rp {budgetAmount.toLocaleString('id-ID')}\r\n                                </span>\r\n                            )}\r\n                      </div>\r\n                      <div className=\"flex flex-row gap-1 items-center relative w-fit group cursor-pointer\">\r\n                        <div className=\"text-[11px]\">\r\n                          {percentage.toFixed(0)}%\r\n                        </div>\r\n                        <CircularProgress percentage={percentage} />\r\n                        <div className=\"absolute left-full top-1/2 ml-2 -translate-y-1/2\r\n                            bg-gray-500 text-white text-[11px] px-1 py-1 rounded \r\n                            opacity-0 group-hover:opacity-100 transition-all duration-200 \r\n                            whitespace-nowrap z-10\r\n                            pointer-events-none\">\r\n                          Pemakaian\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n  \r\n              <button\r\n                      onClick={handleOpenAddCategoryModal}\r\n                      className=\"bg-gray-100 text-gray-300 xl:text-[12px] 2xl:text-[15px] px-5 py-2 rounded hover:bg-gray-500 w-9/12\"\r\n                    >\r\n                      + Tambah Kategori\r\n                    </button>\r\n            </div>\r\n          </div>\r\n          <h1 className=\"bg-gray-500 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white px-2 w-3/4\">\r\n            Daftar Akun\r\n          </h1>\r\n          <div className=\"flex flex-wrap gap-3 py-1 w-full\">\r\n              {accounts.length > 0 ? (\r\n                  accounts.map(account => (\r\n                      <div key={account.id} className=\"w-4/6 sm:w-4/6 lg:w-2/3\">\r\n                          <div className=\"bg-white border rounded-xl px-2 py-2 gap-1 flex flex-col w-full border-gray-300\">\r\n                             <div className=\"flex flex-row justify-between items-center\">\r\n                                 <span className=\"text-sm font-medium text-gray-800\">{account.name}</span>\r\n                                 <DropdownAksi\r\n                                     onEdit={() => handleOpenEditAccountModal(account)}\r\n                                     onDelete={() => handleDeleteAccount(account.id)}\r\n                                 />\r\n                             </div>\r\n                             <span className=\"text-sm font-semibold text-gray-900\">\r\n                                 Rp {Number(account.balance).toLocaleString('id-ID')}\r\n                             </span>\r\n                          </div>\r\n                      </div>\r\n                      ))\r\n              ) : (\r\n                  <p className=\"p-2 text-sm text-gray-500\">Belum ada akun.</p>\r\n              )}\r\n              <button\r\n                  onClick={handleOpenAddAccountModal}\r\n                  className=\"bg-gray-100 text-gray-400 text-sm px-5 py-2 rounded-xl hover:bg-gray-200 w-4/6 sm:w-4/6 lg:w-2/3\"\r\n              >\r\n                  + Tambah Akun\r\n              </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"w-3/6\">\r\n          <div className=\"flex flex-col\">\r\n            <h1 className=\"bg-gray-300 rounded-md text-lg md:2xl lg:text-3xl font-bold text-white mx-2 px-2 w-5/6\">\r\n              Transaksi\r\n            </h1>\r\n            <div className=\"border-b border-gray-200 dark:border-gray-700 mb-2\">\r\n              <ul className=\"flex flex-wrap -mb-px text-sm font-medium text-center text-gray-500 dark:text-gray-400\">\r\n                {[\"Terkini\", \"Harian\",\"Bulanan\",\"Tahunan\"].map((tab) => (\r\n                  <li key={tab} className=\"me-2\">\r\n                    <button\r\n                      onClick={() => setSelectedTab(tab)}\r\n                      className={`inline-flex items-center justify-center p-4 border-b-2 rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300 group ${\r\n                        selectedTab === tab\r\n                          ? \"text-blue-600 border-blue-600 dark:text-blue-500 dark:border-blue-500\"\r\n                          : \"border-transparent\"\r\n                      }`}\r\n                    >\r\n                      {tab}\r\n                    </button>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n            {selectedTab === \"Terkini\" && (\r\n              <Recent\r\n                budgets={budgetsByMonth}\r\n                akun={null}\r\n                transactions={transactions}\r\n                type={\"Budget\"}\r\n                onDelete={handleDeleteTransaction}\r\n                onEdit={handleOpenEditTransactionModal}\r\n              />\r\n            )}\r\n            {selectedTab === \"Harian\" && (\r\n              <FilterTransaksi\r\n                budgets={budgetsByMonth}\r\n                akun={null}\r\n                tab={\"Harian\"}\r\n                transactions={transactions}\r\n                setTransactions={setTransactions}\r\n                type={\"Budget\"}\r\n                onDelete={handleDeleteTransaction}\r\n                onEdit={handleOpenEditTransactionModal}\r\n              />\r\n            )}\r\n            {selectedTab === \"Bulanan\" && (\r\n              <FilterTransaksi\r\n                budgets={budgetsByMonth}\r\n                akun={null}\r\n                tab={\"Bulanan\"}\r\n                transactions={transactions}\r\n                setTransactions={setTransactions}\r\n                type={\"Budget\"}\r\n                onDelete={handleDeleteTransaction}\r\n                onEdit={handleOpenEditTransactionModal}\r\n              />\r\n            )}\r\n            {selectedTab === \"Tahunan\" && (\r\n              <FilterTransaksi\r\n                budgets={budgetsByMonth}\r\n                akun={null}\r\n                tab={\"Tahunan\"}\r\n                transactions={transactions}\r\n                setTransactions={setTransactions}\r\n                type={\"Budget\"}\r\n                onDelete={handleDeleteTransaction}\r\n                onEdit={handleOpenEditTransactionModal}\r\n              />\r\n            )}\r\n          </div>\r\n  \r\n          <div className=\"flex flex-col mt-10\">\r\n              <h1 className=\"bg-gray-300 rounded-md text-lg md:2xl lg:text-3xl font-bold text-white mx-2 px-2 w-5/6\">\r\n                  Pendapatan\r\n              </h1>\r\n              <div className=\"border-b border-gray-200 dark:border-gray-700 mb-2\">\r\n                  <ul className=\"flex flex-wrap -mb-px text-sm font-medium text-center text-gray-500 dark:text-gray-400\">\r\n                  {[\"Terkini\", \"Harian\", \"Bulanan\", \"Tahunan\"].map((tab) => (\r\n                      <li key={tab} className=\"me-2\">\r\n                      <button\r\n                          onClick={() => setSelectedTabPendapatan(tab)}\r\n                          className={`inline-flex items-center justify-center p-4 border-b-2 rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300 group ${\r\n                          selectedTabPendapatan === tab\r\n                              ? \"text-blue-600 border-blue-600 dark:text-blue-500 dark:border-blue-500\"\r\n                              : \"border-transparent\"\r\n                          }`}\r\n                      >\r\n                          {tab}\r\n                      </button>\r\n                      </li>\r\n                  ))}\r\n                  </ul>\r\n              </div>\r\n              {selectedTabPendapatan === \"Terkini\" && (\r\n                  <Recent\r\n                  budgets={null}\r\n                  akun={null}\r\n                  transactions={pendapatan}\r\n                  onDelete={handleDeleteTransaction}\r\n                  onEdit={handleOpenEditTransactionModal}\r\n                  type={\"Akun\"}\r\n                  />\r\n              )}\r\n              {selectedTabPendapatan === \"Harian\" && (\r\n                  <FilterTransaksi\r\n                  budgets={null}\r\n                  akun={null}\r\n                  tab={\"Harian\"}\r\n                  transactions={pendapatan}\r\n                  setTransactions={setPendapatan}\r\n                  type={\"Akun\"}\r\n                  onDelete={handleDeleteTransaction}\r\n                  />\r\n              )}\r\n              {selectedTabPendapatan === \"Bulanan\" && (\r\n                  <FilterTransaksi\r\n                  budgets={null}\r\n                  akun={null}\r\n                  tab={\"Bulanan\"}\r\n                  transactions={pendapatan}\r\n                  setTransactions={setPendapatan}\r\n                  type={\"Akun\"}\r\n                  onDelete={handleDeleteTransaction}\r\n                  />\r\n              )}\r\n              {selectedTabPendapatan === \"Tahunan\" && (\r\n                  <FilterTransaksi\r\n                  budgets={null}\r\n                  akun={null}\r\n                  tab={\"Tahunan\"}\r\n                  transactions={pendapatan}\r\n                  setTransactions={setPendapatan}\r\n                  type={\"Akun\"}\r\n                  onDelete={handleDeleteTransaction}\r\n                  />\r\n              )}\r\n          </div>\r\n        </div>\r\n  \r\n        <div className=\"w-2/6 px-2\">\r\n          <div className=\"flex flex-col\">\r\n            <h1 className=\"bg-gray-300 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white mx-2 px-2 w-full\">\r\n              Graph Pengeluaran\r\n            </h1>\r\n            <ChartKeuangan transactions={transactions} type={\"expense\"} />\r\n          </div>\r\n          <div className=\"flex flex-col mt-5\">\r\n            <h1 className=\"bg-gray-300 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white mx-2 px-2 w-full\">\r\n              Graph Pendapatan\r\n            </h1>\r\n            <ChartKeuangan transactions={pendapatan} type={\"income\"} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n          \r\n      <ModalAddMonth\r\n            isOpen={isModalAddMonthOpen}\r\n            onClose={() => setIsModalAddMonthOpen(false)}\r\n            onAddMonth={handleAddMonth}\r\n      />\r\n      <ModalTransaksi\r\n        isOpen={isTransactionModalOpen}\r\n        onClose={() => setTransactionModalOpen(false)}\r\n        onSave={handleSaveTransaction}\r\n        initialData={selectedTransaction}\r\n        categories={categories}\r\n        accounts={accounts}\r\n      />\r\n      <ModalKategori\r\n        isOpen={isCategoryModalOpen}\r\n        onClose={() => setCategoryModalOpen(false)}\r\n        onSave={handleSaveCategory}\r\n        initialData={selectedCategory}\r\n      />\r\n      <ModalAkun \r\n        isOpen={isAccountModalOpen}\r\n        onClose={() => setAccountModalOpen(false)}\r\n        onSave={handleSaveAccount}\r\n        initialData={selectedAccount}\r\n      />\r\n      {isIconPickerOpen && (\r\n        <IconPickerModal\r\n            onClose={() => setIconPickerOpen(false)}\r\n            onSelect={handleIconSelect}\r\n        />\r\n    )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}