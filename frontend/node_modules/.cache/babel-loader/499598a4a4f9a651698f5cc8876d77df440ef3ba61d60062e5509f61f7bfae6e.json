{"ast":null,"code":"var _jsxFileName = \"E:\\\\testis\\\\frontend\\\\src\\\\ModalTransaksi.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalTransaksi = ({\n  isOpen,\n  onClose,\n  onSave,\n  initialData = null,\n  allBudgetsByMonth = {},\n  accounts = [],\n  currentSelectedMonth,\n  showNotification\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    description: '',\n    amount: '',\n    transaction_date: new Date().toISOString().slice(0, 10),\n    category_id: '',\n    account_id: '',\n    type: 'expense'\n  });\n  const [error, setError] = useState(''); // Internal error for form validation\n  const [sisaBudget, setSisaBudget] = useState(null);\n  const [isSaveDisabled, setSaveDisabled] = useState(false);\n\n  // Hitung min dan max date berdasarkan currentSelectedMonth\n  const [minDate, maxDate] = useMemo(() => {\n    if (!currentSelectedMonth) {\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = String(today.getMonth() + 1).padStart(2, '0');\n      const firstDay = `${year}-${month}-01`;\n      const lastDay = `${year}-${month}-${new Date(year, today.getMonth() + 1, 0).getDate()}`;\n      return [firstDay, lastDay];\n    }\n    const [year, month] = currentSelectedMonth.split('-');\n    const firstDayOfMonth = `${year}-${month}-01`;\n    const lastDayOfMonth = `${year}-${month}-${new Date(parseInt(year), parseInt(month), 0).getDate()}`;\n    return [firstDayOfMonth, lastDayOfMonth];\n  }, [currentSelectedMonth]);\n\n  // Categories sekarang difilter berdasarkan formData.transaction_date\n  const categories = useMemo(() => {\n    const transactionDate = formData.transaction_date;\n    if (!transactionDate) return [];\n    const date = new Date(transactionDate);\n    // Tambahkan validasi untuk tanggal yang tidak valid\n    if (isNaN(date.getTime())) return [];\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\n    const uniqueCategories = budgetsForSelectedDateMonth.reduce((acc, b) => {\n      if (b.category_id) {\n        acc[b.category_id] = {\n          id: b.category_id,\n          name: b.category_name\n        };\n      }\n      return acc;\n    }, {});\n    return Object.values(uniqueCategories);\n  }, [allBudgetsByMonth, formData.transaction_date]);\n\n  // checkBudget sekarang juga difilter berdasarkan formData.transaction_date\n  const checkBudget = useCallback((kategoriId, jumlahTransaksi) => {\n    if (!kategoriId || !formData.transaction_date) {\n      setSisaBudget(null);\n      setSaveDisabled(false);\n      return;\n    }\n    const date = new Date(formData.transaction_date);\n    if (isNaN(date.getTime())) {\n      // Validasi tanggal\n      setSisaBudget(null);\n      setSaveDisabled(false);\n      return;\n    }\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\n    const budgetInfo = budgetsForSelectedDateMonth.find(b => b.category_id === Number(kategoriId));\n    const sisaDiAmplop = budgetInfo ? parseFloat(budgetInfo.balance || 0) : 0;\n    let originalAmount = 0;\n    if (initialData && initialData.id === formData.id && initialData.category_id === Number(kategoriId)) {\n      originalAmount = parseFloat(initialData.amount || 0);\n    }\n    const sisaAktualUntukValidasi = sisaDiAmplop + originalAmount;\n    setSisaBudget(sisaAktualUntukValidasi);\n    setSaveDisabled(parseFloat(jumlahTransaksi || 0) > sisaAktualUntukValidasi);\n  }, [allBudgetsByMonth, initialData, formData.id, formData.transaction_date]);\n  useEffect(() => {\n    if (isOpen) {\n      const isEdit = initialData === null || initialData === void 0 ? void 0 : initialData.id;\n      let transactionDateToSet;\n\n      // Inisialisasi tanggal transaksi\n      if (isEdit && initialData.transaction_date) {\n        const initialDate = new Date(initialData.transaction_date);\n        const initialMonthKey = `${initialDate.getFullYear()}-${String(initialDate.getMonth() + 1).padStart(2, '0')}`;\n\n        // Jika transaksi yang diedit berada di bulan yang sama dengan currentSelectedMonth\n        if (initialMonthKey === currentSelectedMonth) {\n          transactionDateToSet = initialData.transaction_date;\n        } else {\n          // Jika tidak, paksa ke hari pertama bulan yang dipilih di halaman utama\n          transactionDateToSet = minDate;\n          // showNotification('Info', `Tanggal transaksi diubah ke ${minDate} karena harus sesuai dengan bulan yang dipilih di halaman utama.`, 'info');\n          // Removed the showNotification here to avoid multiple notifications on open,\n          // as the date validation in handleChange will handle it more dynamically.\n        }\n      } else {\n        // Untuk transaksi baru, default ke minDate (hari pertama bulan yang dipilih di halaman utama)\n        transactionDateToSet = minDate;\n      }\n      const data = isEdit ? initialData : {\n        description: '',\n        amount: '',\n        category_id: '',\n        account_id: '',\n        type: (initialData === null || initialData === void 0 ? void 0 : initialData.type) || 'expense'\n      };\n      const initialFormData = {\n        ...data,\n        account_id: data.account_id || (accounts.length === 1 ? accounts[0].id : ''),\n        transaction_date: transactionDateToSet // Pastikan format YYYY-MM-DD\n      };\n      setFormData(initialFormData);\n      setError(''); // Clear any previous errors on modal open\n      setSaveDisabled(false); // Enable save button on modal open\n\n      // Panggil checkBudget setelah formData diatur\n      if (initialFormData.type === 'expense') {\n        checkBudget(initialFormData.category_id, initialFormData.amount);\n      } else {\n        setSisaBudget(null);\n        setSaveDisabled(false);\n      }\n    }\n  }, [initialData, isOpen, checkBudget, accounts, currentSelectedMonth, minDate]); // Removed showNotification from deps to prevent re-renders\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let newFormData = {\n      ...formData,\n      [name]: value\n    };\n\n    // Clear previous error when input changes\n    setError('');\n    setSaveDisabled(false); // Re-enable save button by default, will be disabled again if validation fails\n\n    // Logika khusus ketika transaction_date berubah\n    if (name === 'transaction_date') {\n      const newDate = new Date(value);\n\n      // Validasi tanggal yang dipilih agar tidak di luar rentang min/max\n      if (isNaN(newDate.getTime()) || value < minDate || value > maxDate) {\n        const msg = 'Tanggal yang dipilih tidak valid atau di luar bulan yang diizinkan.';\n        setError(msg);\n        showNotification('Validasi Tanggal', msg, 'error');\n        setSaveDisabled(true); // Disable save jika tanggal tidak valid\n      } else {\n        // Clear global notification for date if it becomes valid\n        if (notification && notification.title === 'Validasi Tanggal') {\n          showNotification('', '', 'info'); // Clear notification\n        }\n      }\n      const newMonthKey = `${newDate.getFullYear()}-${String(newDate.getMonth() + 1).padStart(2, '0')}`;\n      const budgetsForNewMonth = allBudgetsByMonth[newMonthKey] || [];\n      const validCategoryIdsForNewMonth = new Set(budgetsForNewMonth.map(b => b.category_id));\n      if (newFormData.category_id && !validCategoryIdsForNewMonth.has(Number(newFormData.category_id))) {\n        newFormData = {\n          ...newFormData,\n          category_id: ''\n        }; // Reset category if invalid for new date\n        const msg = 'Kategori yang dipilih tidak tersedia untuk bulan ini. Harap pilih kategori baru.';\n        setError(msg);\n        showNotification('Validasi Kategori', msg, 'error');\n        setSaveDisabled(true); // Disable save if category is invalid\n      } else {\n        // Clear global notification for category if it becomes valid\n        if (notification && notification.title === 'Validasi Kategori') {\n          showNotification('', '', 'info'); // Clear notification\n        }\n      }\n    }\n    setFormData(newFormData);\n\n    // Re-check budget after formData is updated\n    if (newFormData.type === 'expense') {\n      const katId = newFormData.category_id;\n      const jumlah = newFormData.amount;\n      checkBudget(katId, jumlah);\n    } else {\n      setSisaBudget(null);\n      setSaveDisabled(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // Clear any previous global notification before new submission validation\n    if (showNotification) {\n      showNotification('', '', 'info');\n    }\n    if (formData.type === 'income' && !formData.account_id) {\n      const msg = \"Pemasukan wajib memilih akun tujuan.\";\n      setError(msg);\n      showNotification('Validasi Gagal', msg, 'error');\n      return;\n    }\n    if (formData.type === 'expense' && !formData.category_id) {\n      const msg = \"Pengeluaran wajib memilih kategori.\";\n      setError(msg);\n      showNotification('Validasi Gagal', msg, 'error');\n      return;\n    }\n    if (formData.type === 'expense' && isSaveDisabled) {\n      const msg = \"Jumlah transaksi melebihi sisa budget atau tanggal tidak valid.\";\n      setError(msg);\n      showNotification('Validasi Gagal', msg, 'error');\n      return;\n    }\n    setError(''); // Clear internal error if all validations pass\n    onSave({\n      ...formData,\n      id: initialData === null || initialData === void 0 ? void 0 : initialData.id\n    });\n  };\n  if (!isOpen) return null;\n  const modalTitle = `${initialData !== null && initialData !== void 0 && initialData.id ? 'Edit' : 'Tambah'} ${formData.type === 'income' ? 'Pendapatan' : 'Pengeluaran'}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: modalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Nama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            value: formData.description,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Jumlah (Rp)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"amount\",\n            value: formData.amount,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), formData.type === 'expense' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Kategori\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category_id\",\n            value: formData.category_id,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Pilih Kategori\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.id,\n              children: cat.name\n            }, cat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), sisaBudget !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `text-sm mt-1 ${sisaBudget < 0 ? 'text-red-500' : 'text-gray-500'}`,\n            children: [\"Sisa budget bulan ini: Rp \", sisaBudget.toLocaleString('id-ID')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), formData.type === 'income' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Masukkan ke Akun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"account_id\",\n            value: formData.account_id,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Pilih Akun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), accounts.map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: acc.id,\n              children: acc.name\n            }, acc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Tanggal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"transaction_date\",\n            value: formData.transaction_date,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true,\n            min: minDate,\n            max: maxDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-red-600\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2 pt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"bg-gray-200 px-4 py-2 rounded-md\",\n            onClick: onClose,\n            children: \"Batal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSaveDisabled,\n            className: `px-4 py-2 rounded-md text-white ${isSaveDisabled ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'}`,\n            children: \"Simpan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalTransaksi, \"geMhMlHcSxnGZc9EOxWusE5RgGo=\");\n_c = ModalTransaksi;\nexport default ModalTransaksi;\nvar _c;\n$RefreshReg$(_c, \"ModalTransaksi\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","jsxDEV","_jsxDEV","ModalTransaksi","isOpen","onClose","onSave","initialData","allBudgetsByMonth","accounts","currentSelectedMonth","showNotification","_s","formData","setFormData","description","amount","transaction_date","Date","toISOString","slice","category_id","account_id","type","error","setError","sisaBudget","setSisaBudget","isSaveDisabled","setSaveDisabled","minDate","maxDate","today","year","getFullYear","month","String","getMonth","padStart","firstDay","lastDay","getDate","split","firstDayOfMonth","lastDayOfMonth","parseInt","categories","transactionDate","date","isNaN","getTime","monthKey","budgetsForSelectedDateMonth","uniqueCategories","reduce","acc","b","id","name","category_name","Object","values","checkBudget","kategoriId","jumlahTransaksi","budgetInfo","find","Number","sisaDiAmplop","parseFloat","balance","originalAmount","sisaAktualUntukValidasi","isEdit","transactionDateToSet","initialDate","initialMonthKey","data","initialFormData","length","handleChange","e","value","target","newFormData","newDate","msg","notification","title","newMonthKey","budgetsForNewMonth","validCategoryIdsForNewMonth","Set","map","has","katId","jumlah","handleSubmit","preventDefault","modalTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","cat","toLocaleString","min","max","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/testis/frontend/src/ModalTransaksi.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\n\r\nconst ModalTransaksi = ({ isOpen, onClose, onSave, initialData = null, allBudgetsByMonth = {}, accounts = [], currentSelectedMonth, showNotification }) => {\r\n  const [formData, setFormData] = useState({\r\n    description: '', amount: '', transaction_date: new Date().toISOString().slice(0, 10),\r\n    category_id: '', account_id: '', type: 'expense',\r\n  });\r\n  const [error, setError] = useState(''); // Internal error for form validation\r\n  const [sisaBudget, setSisaBudget] = useState(null);\r\n  const [isSaveDisabled, setSaveDisabled] = useState(false);\r\n\r\n  // Hitung min dan max date berdasarkan currentSelectedMonth\r\n  const [minDate, maxDate] = useMemo(() => {\r\n    if (!currentSelectedMonth) {\r\n      const today = new Date();\r\n      const year = today.getFullYear();\r\n      const month = String(today.getMonth() + 1).padStart(2, '0');\r\n      const firstDay = `${year}-${month}-01`;\r\n      const lastDay = `${year}-${month}-${new Date(year, today.getMonth() + 1, 0).getDate()}`;\r\n      return [firstDay, lastDay];\r\n    }\r\n\r\n    const [year, month] = currentSelectedMonth.split('-');\r\n    const firstDayOfMonth = `${year}-${month}-01`;\r\n    const lastDayOfMonth = `${year}-${month}-${new Date(parseInt(year), parseInt(month), 0).getDate()}`;\r\n    return [firstDayOfMonth, lastDayOfMonth];\r\n  }, [currentSelectedMonth]);\r\n\r\n\r\n  // Categories sekarang difilter berdasarkan formData.transaction_date\r\n  const categories = useMemo(() => {\r\n    const transactionDate = formData.transaction_date;\r\n    if (!transactionDate) return [];\r\n\r\n    const date = new Date(transactionDate);\r\n    // Tambahkan validasi untuk tanggal yang tidak valid\r\n    if (isNaN(date.getTime())) return [];\r\n\r\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n\r\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\r\n\r\n    const uniqueCategories = budgetsForSelectedDateMonth.reduce((acc, b) => {\r\n      if (b.category_id) {\r\n        acc[b.category_id] = { id: b.category_id, name: b.category_name };\r\n      }\r\n      return acc;\r\n    }, {});\r\n    return Object.values(uniqueCategories);\r\n  }, [allBudgetsByMonth, formData.transaction_date]);\r\n\r\n  // checkBudget sekarang juga difilter berdasarkan formData.transaction_date\r\n  const checkBudget = useCallback((kategoriId, jumlahTransaksi) => {\r\n    if (!kategoriId || !formData.transaction_date) {\r\n      setSisaBudget(null);\r\n      setSaveDisabled(false);\r\n      return;\r\n    }\r\n\r\n    const date = new Date(formData.transaction_date);\r\n    if (isNaN(date.getTime())) { // Validasi tanggal\r\n        setSisaBudget(null);\r\n        setSaveDisabled(false);\r\n        return;\r\n    }\r\n\r\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n\r\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\r\n\r\n    const budgetInfo = budgetsForSelectedDateMonth.find(b => b.category_id === Number(kategoriId));\r\n\r\n    const sisaDiAmplop = budgetInfo ? parseFloat(budgetInfo.balance || 0) : 0;\r\n\r\n    let originalAmount = 0;\r\n    if (initialData && initialData.id === formData.id && initialData.category_id === Number(kategoriId)) {\r\n      originalAmount = parseFloat(initialData.amount || 0);\r\n    }\r\n\r\n    const sisaAktualUntukValidasi = sisaDiAmplop + originalAmount;\r\n\r\n    setSisaBudget(sisaAktualUntukValidasi);\r\n    setSaveDisabled(parseFloat(jumlahTransaksi || 0) > sisaAktualUntukValidasi);\r\n\r\n  }, [allBudgetsByMonth, initialData, formData.id, formData.transaction_date]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const isEdit = initialData?.id;\r\n      let transactionDateToSet;\r\n\r\n      // Inisialisasi tanggal transaksi\r\n      if (isEdit && initialData.transaction_date) {\r\n        const initialDate = new Date(initialData.transaction_date);\r\n        const initialMonthKey = `${initialDate.getFullYear()}-${String(initialDate.getMonth() + 1).padStart(2, '0')}`;\r\n\r\n        // Jika transaksi yang diedit berada di bulan yang sama dengan currentSelectedMonth\r\n        if (initialMonthKey === currentSelectedMonth) {\r\n          transactionDateToSet = initialData.transaction_date;\r\n        } else {\r\n          // Jika tidak, paksa ke hari pertama bulan yang dipilih di halaman utama\r\n          transactionDateToSet = minDate;\r\n          // showNotification('Info', `Tanggal transaksi diubah ke ${minDate} karena harus sesuai dengan bulan yang dipilih di halaman utama.`, 'info');\r\n          // Removed the showNotification here to avoid multiple notifications on open,\r\n          // as the date validation in handleChange will handle it more dynamically.\r\n        }\r\n      } else {\r\n        // Untuk transaksi baru, default ke minDate (hari pertama bulan yang dipilih di halaman utama)\r\n        transactionDateToSet = minDate;\r\n      }\r\n\r\n      const data = isEdit ? initialData : {\r\n        description: '', amount: '', category_id: '', account_id: '', type: initialData?.type || 'expense',\r\n      };\r\n\r\n      const initialFormData = {\r\n        ...data,\r\n        account_id: data.account_id || (accounts.length === 1 ? accounts[0].id : ''),\r\n        transaction_date: transactionDateToSet, // Pastikan format YYYY-MM-DD\r\n      };\r\n\r\n      setFormData(initialFormData);\r\n      setError(''); // Clear any previous errors on modal open\r\n      setSaveDisabled(false); // Enable save button on modal open\r\n\r\n      // Panggil checkBudget setelah formData diatur\r\n      if (initialFormData.type === 'expense') {\r\n        checkBudget(initialFormData.category_id, initialFormData.amount);\r\n      } else {\r\n        setSisaBudget(null);\r\n        setSaveDisabled(false);\r\n      }\r\n    }\r\n  }, [initialData, isOpen, checkBudget, accounts, currentSelectedMonth, minDate]); // Removed showNotification from deps to prevent re-renders\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let newFormData = { ...formData, [name]: value };\r\n\r\n    // Clear previous error when input changes\r\n    setError('');\r\n    setSaveDisabled(false); // Re-enable save button by default, will be disabled again if validation fails\r\n\r\n    // Logika khusus ketika transaction_date berubah\r\n    if (name === 'transaction_date') {\r\n      const newDate = new Date(value);\r\n\r\n      // Validasi tanggal yang dipilih agar tidak di luar rentang min/max\r\n      if (isNaN(newDate.getTime()) || value < minDate || value > maxDate) {\r\n        const msg = 'Tanggal yang dipilih tidak valid atau di luar bulan yang diizinkan.';\r\n        setError(msg);\r\n        showNotification('Validasi Tanggal', msg, 'error');\r\n        setSaveDisabled(true); // Disable save jika tanggal tidak valid\r\n      } else {\r\n        // Clear global notification for date if it becomes valid\r\n        if (notification && notification.title === 'Validasi Tanggal') {\r\n          showNotification('', '', 'info'); // Clear notification\r\n        }\r\n      }\r\n\r\n      const newMonthKey = `${newDate.getFullYear()}-${String(newDate.getMonth() + 1).padStart(2, '0')}`;\r\n      const budgetsForNewMonth = allBudgetsByMonth[newMonthKey] || [];\r\n      const validCategoryIdsForNewMonth = new Set(budgetsForNewMonth.map(b => b.category_id));\r\n\r\n      if (newFormData.category_id && !validCategoryIdsForNewMonth.has(Number(newFormData.category_id))) {\r\n        newFormData = { ...newFormData, category_id: '' }; // Reset category if invalid for new date\r\n        const msg = 'Kategori yang dipilih tidak tersedia untuk bulan ini. Harap pilih kategori baru.';\r\n        setError(msg);\r\n        showNotification('Validasi Kategori', msg, 'error');\r\n        setSaveDisabled(true); // Disable save if category is invalid\r\n      } else {\r\n        // Clear global notification for category if it becomes valid\r\n        if (notification && notification.title === 'Validasi Kategori') {\r\n          showNotification('', '', 'info'); // Clear notification\r\n        }\r\n      }\r\n    }\r\n\r\n    setFormData(newFormData);\r\n\r\n    // Re-check budget after formData is updated\r\n    if (newFormData.type === 'expense') {\r\n      const katId = newFormData.category_id;\r\n      const jumlah = newFormData.amount;\r\n      checkBudget(katId, jumlah);\r\n    } else {\r\n      setSisaBudget(null);\r\n      setSaveDisabled(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Clear any previous global notification before new submission validation\r\n    if (showNotification) {\r\n      showNotification('', '', 'info');\r\n    }\r\n\r\n    if (formData.type === 'income' && !formData.account_id) {\r\n      const msg = \"Pemasukan wajib memilih akun tujuan.\";\r\n      setError(msg);\r\n      showNotification('Validasi Gagal', msg, 'error');\r\n      return;\r\n    }\r\n    if (formData.type === 'expense' && !formData.category_id) {\r\n      const msg = \"Pengeluaran wajib memilih kategori.\";\r\n      setError(msg);\r\n      showNotification('Validasi Gagal', msg, 'error');\r\n      return;\r\n    }\r\n    if (formData.type === 'expense' && isSaveDisabled) {\r\n        const msg = \"Jumlah transaksi melebihi sisa budget atau tanggal tidak valid.\";\r\n        setError(msg);\r\n        showNotification('Validasi Gagal', msg, 'error');\r\n        return;\r\n    }\r\n    setError(''); // Clear internal error if all validations pass\r\n    onSave({ ...formData, id: initialData?.id });\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const modalTitle = `${initialData?.id ? 'Edit' : 'Tambah'} ${formData.type === 'income' ? 'Pendapatan' : 'Pengeluaran'}`;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">{modalTitle}</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Nama</label>\r\n            <input type=\"text\" name=\"description\" value={formData.description} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Jumlah (Rp)</label>\r\n            <input type=\"number\" name=\"amount\" value={formData.amount} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required />\r\n          </div>\r\n\r\n          {formData.type === 'expense' && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Kategori</label>\r\n              <select name=\"category_id\" value={formData.category_id} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required>\r\n                <option value=\"\">Pilih Kategori</option>\r\n                {categories.map(cat => (\r\n                  <option key={cat.id} value={cat.id}>{cat.name}</option>\r\n                ))}\r\n              </select>\r\n              {sisaBudget !== null && (\r\n                <p className={`text-sm mt-1 ${sisaBudget < 0 ? 'text-red-500' : 'text-gray-500'}`}>\r\n                  Sisa budget bulan ini: Rp {sisaBudget.toLocaleString('id-ID')}\r\n                </p>\r\n              )}\r\n            </div>\r\n          )}\r\n          {formData.type === 'income' && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Masukkan ke Akun</label>\r\n              <select name=\"account_id\" value={formData.account_id} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required>\r\n                <option value=\"\">Pilih Akun</option>\r\n                {accounts.map(acc => (\r\n                  <option key={acc.id} value={acc.id}>{acc.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Tanggal</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"transaction_date\"\r\n              value={formData.transaction_date}\r\n              onChange={handleChange}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n              required\r\n              min={minDate}\r\n              max={maxDate}\r\n            />\r\n          </div>\r\n\r\n          {error && <p className=\"text-sm text-red-600\">{error}</p>}\r\n          <div className=\"flex justify-end space-x-2 pt-2\">\r\n            <button type=\"button\" className=\"bg-gray-200 px-4 py-2 rounded-md\" onClick={onClose}>Batal</button>\r\n            <button type=\"submit\" disabled={isSaveDisabled} className={`px-4 py-2 rounded-md text-white ${isSaveDisabled ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'}`}>Simpan</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalTransaksi;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}