{"ast":null,"code":"var _jsxFileName = \"E:\\\\testis\\\\frontend\\\\src\\\\ModalKategori.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Tambahkan prop showNotification\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ModalKategori({\n  isOpen,\n  onClose,\n  onSave,\n  initialData,\n  accounts,\n  mode,\n  showNotification\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [accountAllocations, setAccountAllocations] = useState([]); // [{ account_id: '...', amount: '...' }]\n  const [error, setError] = useState('');\n  const [originalAccountBalances, setOriginalAccountBalances] = useState({});\n  const [initialCategoryAllocations, setInitialCategoryAllocations] = useState({}); // To store original allocations for the category being edited\n\n  // Calculate total budget in real-time from allocations\n  const calculatedTotalAmount = accountAllocations.reduce((sum, alloc) => {\n    const amount = parseFloat(alloc.amount);\n    return sum + (isNaN(amount) ? 0 : amount);\n  }, 0);\n  useEffect(() => {\n    if (isOpen) {\n      setError('');\n      setName((initialData === null || initialData === void 0 ? void 0 : initialData.name) || '');\n\n      // Simpan saldo asli akun saat modal dibuka\n      const initialBalances = {};\n      accounts.forEach(acc => {\n        initialBalances[acc.id] = acc.balance;\n      });\n      setOriginalAccountBalances(initialBalances);\n\n      // Jika mode 'edit', inisialisasi accountAllocations dengan data yang ada\n      if (mode === 'edit' && initialData && initialData.allocations) {\n        const currentAllocations = initialData.allocations.map(alloc => ({\n          account_id: alloc.account_id,\n          amount: parseFloat(alloc.amount_allocated) // Pastikan formatnya sesuai\n        }));\n        // PENTING: Set accountAllocations di sini agar checkbox terisi\n        setAccountAllocations(currentAllocations);\n\n        // Simpan alokasi awal untuk kategori yang sedang diedit\n        const categoryInitialAllocations = {};\n        initialData.allocations.forEach(alloc => {\n          categoryInitialAllocations[alloc.account_id] = parseFloat(alloc.amount_allocated);\n        });\n        setInitialCategoryAllocations(categoryInitialAllocations);\n      } else {\n        // Mode 'add'\n        setAccountAllocations([]); // Reset alokasi untuk mode 'add'\n        setInitialCategoryAllocations({}); // Reset untuk mode 'add'\n      }\n    }\n  }, [isOpen, initialData, mode, accounts]);\n  const handleAllocationChange = (accountId, amount) => {\n    // Hanya izinkan perubahan jika mode adalah 'add'\n    if (mode === 'add') {\n      setAccountAllocations(prev => {\n        const existingIndex = prev.findIndex(alloc => alloc.account_id === accountId);\n        const newAmount = amount === '' ? '' : parseFloat(amount);\n        if (existingIndex > -1) {\n          const updated = [...prev];\n          updated[existingIndex] = {\n            account_id: accountId,\n            amount: newAmount\n          };\n          return updated;\n        } else {\n          return [...prev, {\n            account_id: accountId,\n            amount: newAmount\n          }];\n        }\n      });\n    }\n  };\n  const handleCheckboxChange = (accountId, isChecked) => {\n    // Hanya izinkan perubahan jika mode adalah 'add'\n    if (mode === 'add') {\n      setAccountAllocations(prev => {\n        if (isChecked) {\n          var _initialData$allocati;\n          // Tambahkan akun jika dicentang, dengan jumlah awal dari initialData jika ada\n          const existingAllocation = initialData === null || initialData === void 0 ? void 0 : (_initialData$allocati = initialData.allocations) === null || _initialData$allocati === void 0 ? void 0 : _initialData$allocati.find(alloc => alloc.account_id === accountId);\n          return [...prev, {\n            account_id: accountId,\n            amount: existingAllocation ? parseFloat(existingAllocation.amount_allocated) : ''\n          }];\n        } else {\n          // Hapus akun jika tidak dicentang\n          return prev.filter(alloc => alloc.account_id !== accountId);\n        }\n      });\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError(''); // Clear previous internal error\n    // Clear previous global notification error if any\n    if (showNotification) {\n      showNotification('', '', 'info'); // Clear any active notification\n    }\n    if (!name.trim()) {\n      const msg = 'Nama kategori tidak boleh kosong.';\n      setError(msg);\n      if (showNotification) showNotification('Validasi Gagal', msg, 'error');\n      return;\n    }\n    if (mode === 'add') {\n      if (accountAllocations.length === 0) {\n        const msg = 'Harap pilih setidaknya satu akun untuk alokasi dana.';\n        setError(msg);\n        if (showNotification) showNotification('Validasi Gagal', msg, 'error');\n        return;\n      }\n      const validAllocations = [];\n      for (const alloc of accountAllocations) {\n        const parsedAmount = parseFloat(alloc.amount);\n        if (isNaN(parsedAmount) || parsedAmount <= 0) {\n          var _accounts$find;\n          const accountName = ((_accounts$find = accounts.find(a => a.id === alloc.account_id)) === null || _accounts$find === void 0 ? void 0 : _accounts$find.name) || alloc.account_id;\n          const msg = `Nominal alokasi untuk akun ${accountName} tidak valid atau kosong.`;\n          setError(msg);\n          if (showNotification) showNotification('Validasi Gagal', msg, 'error');\n          return;\n        }\n        const prevAllocationForCategory = initialCategoryAllocations[alloc.account_id] || 0;\n        const effectiveAccountBalance = originalAccountBalances[alloc.account_id] + prevAllocationForCategory;\n        if (parsedAmount > effectiveAccountBalance) {\n          var _accounts$find2;\n          const accountName = ((_accounts$find2 = accounts.find(a => a.id === alloc.account_id)) === null || _accounts$find2 === void 0 ? void 0 : _accounts$find2.name) || alloc.account_id;\n          const msg = `Alokasi untuk akun ${accountName} melebihi saldo yang tersedia.`;\n          setError(msg);\n          if (showNotification) showNotification('Validasi Gagal', msg, 'error');\n          return;\n        }\n        validAllocations.push({\n          account_id: alloc.account_id,\n          amount: parsedAmount\n        });\n      }\n      if (calculatedTotalAmount <= 0) {\n        const msg = 'Total budget kategori harus lebih dari Rp 0.';\n        setError(msg);\n        if (showNotification) showNotification('Validasi Gagal', msg, 'error');\n        return;\n      }\n      onSave({\n        name,\n        total_amount: calculatedTotalAmount,\n        allocations: validAllocations\n      });\n    } else if (mode === 'edit') {\n      // Untuk mode 'edit', hanya kirim ID dan nama\n      onSave({\n        id: initialData.id,\n        name\n      });\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-xl w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: mode === 'add' ? 'Tambah Kategori Baru' : 'Edit Kategori'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Nama Kategori:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), mode === 'add' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              children: \"Alokasi dari Akun:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), accounts.length > 0 ? accounts.map(account => {\n              var _accountAllocations$f;\n              // Periksa apakah akun ini sudah dialokasikan untuk kategori ini\n              const isAccountAllocated = accountAllocations.some(alloc => alloc.account_id === account.id);\n              // Ambil jumlah alokasi untuk akun ini\n              const allocatedAmountForThisAccount = ((_accountAllocations$f = accountAllocations.find(alloc => alloc.account_id === account.id)) === null || _accountAllocations$f === void 0 ? void 0 : _accountAllocations$f.amount) || '';\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `account-${account.id}`,\n                  className: \"mr-2\",\n                  checked: isAccountAllocated // Ini yang memastikan checkbox tercentang\n                  ,\n                  onChange: e => handleCheckboxChange(account.id, e.target.checked)\n                  // disabled={mode === 'edit'} // No longer needed here as the whole section is hidden\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `account-${account.id}`,\n                  className: \"text-gray-700 mr-2 flex-grow\",\n                  children: [account.name, ' ', \"(Saldo Tersedia:\", ' ', \"Rp \", (() => {\n                    const allocatedAmount = parseFloat(allocatedAmountForThisAccount);\n                    const amount = isNaN(allocatedAmount) ? 0 : allocatedAmount;\n                    const available = originalAccountBalances[account.id] - amount;\n                    return available.toLocaleString('id-ID');\n                  })(), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 25\n                }, this), isAccountAllocated && /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"shadow appearance-none border rounded py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline w-1/3\",\n                  value: allocatedAmountForThisAccount,\n                  onChange: e => handleAllocationChange(account.id, e.target.value),\n                  min: \"0\",\n                  step: \"any\",\n                  placeholder: \"Jumlah\",\n                  required: isAccountAllocated // Required only if checked in add mode\n                  // disabled={mode === 'edit'} // No longer needed here\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 27\n                }, this)]\n              }, account.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 23\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 text-sm\",\n              children: \"Tidak ada akun tersedia. Harap buat akun terlebih dahulu.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 text-lg font-bold text-gray-800\",\n            children: [\"Total Budget Kategori: Rp \", calculatedTotalAmount.toLocaleString('id-ID')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-xs italic mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\",\n            children: \"Batal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\",\n            children: mode === 'add' ? 'Tambah' : 'Simpan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(ModalKategori, \"cF7GOd3+7rabqz5754MKtGEU5to=\");\n_c = ModalKategori;\nexport default ModalKategori;\nvar _c;\n$RefreshReg$(_c, \"ModalKategori\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalKategori","isOpen","onClose","onSave","initialData","accounts","mode","showNotification","_s","name","setName","accountAllocations","setAccountAllocations","error","setError","originalAccountBalances","setOriginalAccountBalances","initialCategoryAllocations","setInitialCategoryAllocations","calculatedTotalAmount","reduce","sum","alloc","amount","parseFloat","isNaN","initialBalances","forEach","acc","id","balance","allocations","currentAllocations","map","account_id","amount_allocated","categoryInitialAllocations","handleAllocationChange","accountId","prev","existingIndex","findIndex","newAmount","updated","handleCheckboxChange","isChecked","_initialData$allocati","existingAllocation","find","filter","handleSubmit","e","preventDefault","trim","msg","length","validAllocations","parsedAmount","_accounts$find","accountName","a","prevAllocationForCategory","effectiveAccountBalance","_accounts$find2","push","total_amount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","account","_accountAllocations$f","isAccountAllocated","some","allocatedAmountForThisAccount","checked","allocatedAmount","available","toLocaleString","min","step","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/testis/frontend/src/ModalKategori.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Tambahkan prop showNotification\r\nfunction ModalKategori({ isOpen, onClose, onSave, initialData, accounts, mode, showNotification }) {\r\n  const [name, setName] = useState('');\r\n  const [accountAllocations, setAccountAllocations] = useState([]); // [{ account_id: '...', amount: '...' }]\r\n  const [error, setError] = useState('');\r\n  const [originalAccountBalances, setOriginalAccountBalances] = useState({});\r\n  const [initialCategoryAllocations, setInitialCategoryAllocations] = useState({}); // To store original allocations for the category being edited\r\n\r\n  // Calculate total budget in real-time from allocations\r\n  const calculatedTotalAmount = accountAllocations.reduce((sum, alloc) => {\r\n    const amount = parseFloat(alloc.amount);\r\n    return sum + (isNaN(amount) ? 0 : amount);\r\n  }, 0);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setError('');\r\n      setName(initialData?.name || '');\r\n\r\n      // Simpan saldo asli akun saat modal dibuka\r\n      const initialBalances = {};\r\n      accounts.forEach(acc => {\r\n        initialBalances[acc.id] = acc.balance;\r\n      });\r\n      setOriginalAccountBalances(initialBalances);\r\n\r\n      // Jika mode 'edit', inisialisasi accountAllocations dengan data yang ada\r\n      if (mode === 'edit' && initialData && initialData.allocations) {\r\n        const currentAllocations = initialData.allocations.map(alloc => ({\r\n          account_id: alloc.account_id,\r\n          amount: parseFloat(alloc.amount_allocated) // Pastikan formatnya sesuai\r\n        }));\r\n        // PENTING: Set accountAllocations di sini agar checkbox terisi\r\n        setAccountAllocations(currentAllocations);\r\n\r\n        // Simpan alokasi awal untuk kategori yang sedang diedit\r\n        const categoryInitialAllocations = {};\r\n        initialData.allocations.forEach(alloc => {\r\n          categoryInitialAllocations[alloc.account_id] = parseFloat(alloc.amount_allocated);\r\n        });\r\n        setInitialCategoryAllocations(categoryInitialAllocations);\r\n      } else { // Mode 'add'\r\n        setAccountAllocations([]); // Reset alokasi untuk mode 'add'\r\n        setInitialCategoryAllocations({}); // Reset untuk mode 'add'\r\n      }\r\n    }\r\n  }, [isOpen, initialData, mode, accounts]);\r\n\r\n  const handleAllocationChange = (accountId, amount) => {\r\n    // Hanya izinkan perubahan jika mode adalah 'add'\r\n    if (mode === 'add') {\r\n      setAccountAllocations(prev => {\r\n        const existingIndex = prev.findIndex(alloc => alloc.account_id === accountId);\r\n        const newAmount = amount === '' ? '' : parseFloat(amount);\r\n\r\n        if (existingIndex > -1) {\r\n          const updated = [...prev];\r\n          updated[existingIndex] = { account_id: accountId, amount: newAmount };\r\n          return updated;\r\n        } else {\r\n          return [...prev, { account_id: accountId, amount: newAmount }];\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (accountId, isChecked) => {\r\n    // Hanya izinkan perubahan jika mode adalah 'add'\r\n    if (mode === 'add') {\r\n      setAccountAllocations(prev => {\r\n        if (isChecked) {\r\n          // Tambahkan akun jika dicentang, dengan jumlah awal dari initialData jika ada\r\n          const existingAllocation = initialData?.allocations?.find(alloc => alloc.account_id === accountId);\r\n          return [...prev, { account_id: accountId, amount: existingAllocation ? parseFloat(existingAllocation.amount_allocated) : '' }];\r\n        } else {\r\n          // Hapus akun jika tidak dicentang\r\n          return prev.filter(alloc => alloc.account_id !== accountId);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError(''); // Clear previous internal error\r\n    // Clear previous global notification error if any\r\n    if (showNotification) {\r\n      showNotification('', '', 'info'); // Clear any active notification\r\n    }\r\n\r\n    if (!name.trim()) {\r\n      const msg = 'Nama kategori tidak boleh kosong.';\r\n      setError(msg);\r\n      if (showNotification) showNotification('Validasi Gagal', msg, 'error');\r\n      return;\r\n    }\r\n\r\n    if (mode === 'add') {\r\n      if (accountAllocations.length === 0) {\r\n        const msg = 'Harap pilih setidaknya satu akun untuk alokasi dana.';\r\n        setError(msg);\r\n        if (showNotification) showNotification('Validasi Gagal', msg, 'error');\r\n        return;\r\n      }\r\n\r\n      const validAllocations = [];\r\n      for (const alloc of accountAllocations) {\r\n        const parsedAmount = parseFloat(alloc.amount);\r\n        if (isNaN(parsedAmount) || parsedAmount <= 0) {\r\n          const accountName = accounts.find(a => a.id === alloc.account_id)?.name || alloc.account_id;\r\n          const msg = `Nominal alokasi untuk akun ${accountName} tidak valid atau kosong.`;\r\n          setError(msg);\r\n          if (showNotification) showNotification('Validasi Gagal', msg, 'error');\r\n          return;\r\n        }\r\n\r\n        const prevAllocationForCategory = initialCategoryAllocations[alloc.account_id] || 0;\r\n        const effectiveAccountBalance = originalAccountBalances[alloc.account_id] + prevAllocationForCategory;\r\n\r\n        if (parsedAmount > effectiveAccountBalance) {\r\n          const accountName = accounts.find(a => a.id === alloc.account_id)?.name || alloc.account_id;\r\n          const msg = `Alokasi untuk akun ${accountName} melebihi saldo yang tersedia.`;\r\n          setError(msg);\r\n          if (showNotification) showNotification('Validasi Gagal', msg, 'error');\r\n          return;\r\n        }\r\n\r\n        validAllocations.push({ account_id: alloc.account_id, amount: parsedAmount });\r\n      }\r\n\r\n      if (calculatedTotalAmount <= 0) {\r\n        const msg = 'Total budget kategori harus lebih dari Rp 0.';\r\n        setError(msg);\r\n        if (showNotification) showNotification('Validasi Gagal', msg, 'error');\r\n        return;\r\n      }\r\n\r\n      onSave({ name, total_amount: calculatedTotalAmount, allocations: validAllocations });\r\n\r\n    } else if (mode === 'edit') {\r\n      // Untuk mode 'edit', hanya kirim ID dan nama\r\n      onSave({ id: initialData.id, name });\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-xl w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">\r\n          {mode === 'add' ? 'Tambah Kategori Baru' : 'Edit Kategori'}\r\n        </h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"name\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n              Nama Kategori:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Conditional rendering for allocation section */}\r\n          {mode === 'add' && (\r\n            <>\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                  Alokasi dari Akun:\r\n                </label>\r\n                {accounts.length > 0 ? (\r\n                  accounts.map(account => {\r\n                    // Periksa apakah akun ini sudah dialokasikan untuk kategori ini\r\n                    const isAccountAllocated = accountAllocations.some(alloc => alloc.account_id === account.id);\r\n                    // Ambil jumlah alokasi untuk akun ini\r\n                    const allocatedAmountForThisAccount = accountAllocations.find(alloc => alloc.account_id === account.id)?.amount || '';\r\n\r\n                    return (\r\n                      <div key={account.id} className=\"flex items-center mb-2\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          id={`account-${account.id}`}\r\n                          className=\"mr-2\"\r\n                          checked={isAccountAllocated} // Ini yang memastikan checkbox tercentang\r\n                          onChange={(e) => handleCheckboxChange(account.id, e.target.checked)}\r\n                          // disabled={mode === 'edit'} // No longer needed here as the whole section is hidden\r\n                        />\r\n                        <label htmlFor={`account-${account.id}`} className=\"text-gray-700 mr-2 flex-grow\">\r\n                          {account.name}{' '}\r\n                          (Saldo Tersedia:{' '}\r\n                          Rp {\r\n                            (() => {\r\n                              const allocatedAmount = parseFloat(allocatedAmountForThisAccount);\r\n                              const amount = isNaN(allocatedAmount) ? 0 : allocatedAmount;\r\n                              const available = originalAccountBalances[account.id] - amount;\r\n                              return available.toLocaleString('id-ID');\r\n                            })()\r\n                          })\r\n                        </label>\r\n\r\n                        {isAccountAllocated && (\r\n                          <input\r\n                            type=\"number\"\r\n                            className=\"shadow appearance-none border rounded py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline w-1/3\"\r\n                            value={allocatedAmountForThisAccount}\r\n                            onChange={(e) => handleAllocationChange(account.id, e.target.value)}\r\n                            min=\"0\"\r\n                            step=\"any\"\r\n                            placeholder=\"Jumlah\"\r\n                            required={isAccountAllocated} // Required only if checked in add mode\r\n                            // disabled={mode === 'edit'} // No longer needed here\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <p className=\"text-gray-500 text-sm\">Tidak ada akun tersedia. Harap buat akun terlebih dahulu.</p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"mb-4 text-lg font-bold text-gray-800\">\r\n                Total Budget Kategori: Rp {calculatedTotalAmount.toLocaleString('id-ID')}\r\n              </div>\r\n            </>\r\n          )}\r\n\r\n          {error && <p className=\"text-red-500 text-xs italic mb-4\">{error}</p>}\r\n\r\n          <div className=\"flex justify-end gap-2\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\"\r\n            >\r\n              Batal\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\"\r\n            >\r\n              {mode === 'add' ? 'Tambah' : 'Simpan'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalKategori;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}