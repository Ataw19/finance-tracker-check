{"ast":null,"code":"var _jsxFileName = \"E:\\\\testis\\\\frontend\\\\src\\\\ChartKeuangan.js\",\n  _s = $RefreshSig$();\n// src/ChartKeuangan.js (VERSI BARU DENGAN GRAFIK VERTIKAL)\n\nimport React, { useState, useMemo } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst ChartKeuangan = ({\n  transactions,\n  type\n}) => {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState(() => {\n    const today = new Date();\n    return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\n  });\n\n  // 1. Filter transaksi (tidak ada perubahan di sini)\n  const filtered = useMemo(() => {\n    return transactions.filter(tx => {\n      const txDate = new Date(tx.transaction_date);\n      const txMonth = `${txDate.getFullYear()}-${String(txDate.getMonth() + 1).padStart(2, '0')}`;\n      if (txMonth !== selectedMonth) return false;\n      return tx.type === type;\n    });\n  }, [transactions, selectedMonth, type]);\n\n  // 2. Kelompokkan total berdasarkan nama kategori (tidak ada perubahan di sini)\n  const categoryTotals = useMemo(() => {\n    // Jika tipe adalah PENDAPATAN, kelompokkan berdasarkan NAMA AKUN\n    if (type === 'income') {\n      return filtered.reduce((acc, tx) => {\n        const label = tx.account_name || \"Tidak Diketahui\"; // Gunakan nama akun sebagai label\n        acc[label] = (acc[label] || 0) + (Number(tx.amount) || 0);\n        return acc;\n      }, {});\n    }\n\n    // Jika tidak, berarti PENGELUARAN, kelompokkan berdasarkan NAMA KATEGORI\n    return filtered.reduce((acc, tx) => {\n      const label = tx.category_name || \"Lain-lain\";\n      acc[label] = (acc[label] || 0) + (Number(tx.amount) || 0);\n      return acc;\n    }, {});\n  }, [filtered, type]);\n  const data = useMemo(() => {\n    // Label untuk sumbu bawah (hanya satu, misal: \"Total\")\n    const labels = [`Laporan ${type} (${selectedMonth})`];\n    const categoryNames = Object.keys(categoryTotals);\n    const colors = ['#3b82f6', '#ef4444', '#22c55e', '#f97316', '#8b5cf6', '#ec4899', '#f59e0b', '#10b981'];\n    return {\n      labels: labels,\n      // Buat satu 'dataset' untuk setiap kategori. Ini kunci untuk legenda dan warna yang berbeda.\n      datasets: categoryNames.map((category, index) => ({\n        label: category,\n        // Ini akan menjadi nama di legenda (cth: \"Makanan\")\n        data: [categoryTotals[category]],\n        // Nilai untuk kategori ini\n        backgroundColor: colors[index % colors.length],\n        // Pilih warna secara berurutan\n        borderRadius: 4\n      }))\n    };\n  }, [categoryTotals, type, selectedMonth]);\n  const options = useMemo(() => ({\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        // Tampilkan legenda\n        position: 'top' // Posisi legenda di atas\n      },\n      title: {\n        display: false // Judul utama bisa disembunyikan\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            let label = context.dataset.label || '';\n            if (label) {\n              label += ': ';\n            }\n            if (context.parsed.y !== null) {\n              label += new Intl.NumberFormat('id-ID', {\n                style: 'currency',\n                currency: 'IDR'\n              }).format(context.parsed.y);\n            }\n            return label;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        //stacked: true, // Tumpuk barnya jika ada beberapa data dalam satu label\n      },\n      y: {\n        // Format angka di sumbu vertikal (sekarang sumbu Y)\n        //stacked: true,\n        ticks: {\n          callback: function (value) {\n            if (value >= 1000000) return 'Rp ' + value / 1000000 + 'jt';\n            if (value >= 1000) return 'Rp ' + value / 1000 + 'k';\n            return 'Rp ' + value;\n          }\n        }\n      }\n    }\n  }), []);\n  const formattedTitle = type.charAt(0).toUpperCase() + type.slice(1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full bg-white p-4 rounded-lg shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold text-lg text-gray-800\",\n        children: `Grafik ${formattedTitle}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"month\",\n        value: selectedMonth,\n        onChange: e => setSelectedMonth(e.target.value),\n        className: \"border rounded px-2 py-1 bg-gray-100 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative h-64\",\n      children: [\" \", filtered.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center items-center h-full\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: [\"Tidak ada data \", type.toLowerCase(), \" di bulan ini.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartKeuangan, \"j9y4Fby67kUP8Ch4yD59vqzXsi4=\");\n_c = ChartKeuangan;\nexport default ChartKeuangan;\nvar _c;\n$RefreshReg$(_c, \"ChartKeuangan\");","map":{"version":3,"names":["React","useState","useMemo","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","ChartKeuangan","transactions","type","_s","selectedMonth","setSelectedMonth","today","Date","getFullYear","String","getMonth","padStart","filtered","filter","tx","txDate","transaction_date","txMonth","categoryTotals","reduce","acc","label","account_name","Number","amount","category_name","data","labels","categoryNames","Object","keys","colors","datasets","map","category","index","backgroundColor","length","borderRadius","options","responsive","maintainAspectRatio","plugins","legend","display","position","title","tooltip","callbacks","context","dataset","parsed","y","Intl","NumberFormat","style","currency","format","scales","x","ticks","callback","value","formattedTitle","charAt","toUpperCase","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","toLowerCase","_c","$RefreshReg$"],"sources":["E:/testis/frontend/src/ChartKeuangan.js"],"sourcesContent":["// src/ChartKeuangan.js (VERSI BARU DENGAN GRAFIK VERTIKAL)\r\n\r\nimport React, { useState, useMemo } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst ChartKeuangan = ({ transactions, type }) => {\r\n  const [selectedMonth, setSelectedMonth] = useState(() => {\r\n    const today = new Date();\r\n    return `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n  });\r\n\r\n  // 1. Filter transaksi (tidak ada perubahan di sini)\r\n  const filtered = useMemo(() => {\r\n    return transactions.filter(tx => {\r\n      const txDate = new Date(tx.transaction_date);\r\n      const txMonth = `${txDate.getFullYear()}-${String(txDate.getMonth() + 1).padStart(2, '0')}`;\r\n      if (txMonth !== selectedMonth) return false;\r\n      return tx.type === type;\r\n    });\r\n  }, [transactions, selectedMonth, type]);\r\n\r\n  // 2. Kelompokkan total berdasarkan nama kategori (tidak ada perubahan di sini)\r\n  const categoryTotals = useMemo(() => {\r\n    // Jika tipe adalah PENDAPATAN, kelompokkan berdasarkan NAMA AKUN\r\n    if (type === 'income') {\r\n        return filtered.reduce((acc, tx) => {\r\n            const label = tx.account_name || \"Tidak Diketahui\"; // Gunakan nama akun sebagai label\r\n            acc[label] = (acc[label] || 0) + (Number(tx.amount) || 0);\r\n            return acc;\r\n        }, {});\r\n    }\r\n\r\n    // Jika tidak, berarti PENGELUARAN, kelompokkan berdasarkan NAMA KATEGORI\r\n    return filtered.reduce((acc, tx) => {\r\n        const label = tx.category_name || \"Lain-lain\";\r\n        acc[label] = (acc[label] || 0) + (Number(tx.amount) || 0);\r\n        return acc;\r\n    }, {});\r\n}, [filtered, type]);\r\n\r\n  const data = useMemo(() => {\r\n    // Label untuk sumbu bawah (hanya satu, misal: \"Total\")\r\n    const labels = [`Laporan ${type} (${selectedMonth})`];\r\n    \r\n    const categoryNames = Object.keys(categoryTotals);\r\n    const colors = ['#3b82f6', '#ef4444', '#22c55e', '#f97316', '#8b5cf6', '#ec4899', '#f59e0b', '#10b981'];\r\n\r\n    return {\r\n      labels: labels,\r\n      // Buat satu 'dataset' untuk setiap kategori. Ini kunci untuk legenda dan warna yang berbeda.\r\n      datasets: categoryNames.map((category, index) => ({\r\n        label: category, // Ini akan menjadi nama di legenda (cth: \"Makanan\")\r\n        data: [categoryTotals[category]], // Nilai untuk kategori ini\r\n        backgroundColor: colors[index % colors.length], // Pilih warna secara berurutan\r\n        borderRadius: 4,\r\n      })),\r\n    };\r\n  }, [categoryTotals, type, selectedMonth]);\r\n\r\n  const options = useMemo(() => ({\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: true, // Tampilkan legenda\r\n        position: 'top', // Posisi legenda di atas\r\n      },\r\n      title: {\r\n        display: false, // Judul utama bisa disembunyikan\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function(context) {\r\n            let label = context.dataset.label || '';\r\n            if (label) {\r\n              label += ': ';\r\n            }\r\n            if (context.parsed.y !== null) {\r\n              label += new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(context.parsed.y);\r\n            }\r\n            return label;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    scales: {\r\n      x: {\r\n        //stacked: true, // Tumpuk barnya jika ada beberapa data dalam satu label\r\n      },\r\n      y: { // Format angka di sumbu vertikal (sekarang sumbu Y)\r\n        //stacked: true,\r\n        ticks: {\r\n          callback: function(value) {\r\n            if (value >= 1000000) return 'Rp ' + (value / 1000000) + 'jt';\r\n            if (value >= 1000) return 'Rp ' + (value / 1000) + 'k';\r\n            return 'Rp ' + value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }), []);\r\n  \r\n  const formattedTitle = type.charAt(0).toUpperCase() + type.slice(1);\r\n\r\n  return (\r\n    <div className=\"w-full bg-white p-4 rounded-lg shadow\">\r\n      <div className=\"mb-4 flex justify-between items-center\">\r\n        <p className=\"font-semibold text-lg text-gray-800\">{`Grafik ${formattedTitle}`}</p>\r\n        <input\r\n          type=\"month\"\r\n          value={selectedMonth}\r\n          onChange={(e) => setSelectedMonth(e.target.value)}\r\n          className=\"border rounded px-2 py-1 bg-gray-100 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        />\r\n      </div>\r\n      <div className=\"relative h-64\"> {/* Beri tinggi yang tetap untuk canvas grafik */}\r\n        {filtered.length === 0 ? (\r\n          <div className=\"flex justify-center items-center h-full\">\r\n            <p className='text-sm text-gray-500'>\r\n              Tidak ada data {type.toLowerCase()} di bulan ini.\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          <Bar data={data} options={options} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartKeuangan;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}