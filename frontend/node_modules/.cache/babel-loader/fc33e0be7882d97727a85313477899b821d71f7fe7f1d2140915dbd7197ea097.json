{"ast":null,"code":"var _jsxFileName = \"E:\\\\testis\\\\frontend\\\\src\\\\ModalTransaksi.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalTransaksi = ({\n  isOpen,\n  onClose,\n  onSave,\n  initialData = null,\n  allBudgetsByMonth = {},\n  accounts = []\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    description: '',\n    amount: '',\n    transaction_date: new Date().toISOString().slice(0, 10),\n    category_id: '',\n    account_id: '',\n    type: 'expense'\n  });\n  const [error, setError] = useState('');\n  const [sisaBudget, setSisaBudget] = useState(null);\n  const [isSaveDisabled, setSaveDisabled] = useState(false);\n\n  // Categories sekarang difilter berdasarkan formData.transaction_date\n  const categories = useMemo(() => {\n    console.log('[ModalTransaksi] useMemo: categories triggered.');\n    const transactionDate = formData.transaction_date;\n    console.log('[ModalTransaksi] useMemo: transactionDate from formData:', transactionDate);\n    if (!transactionDate) {\n      console.log('[ModalTransaksi] useMemo: transactionDate is empty, returning empty categories.');\n      return [];\n    }\n    const date = new Date(transactionDate);\n    // Pastikan date valid. Jika 'Invalid Date', berarti input date bermasalah\n    if (isNaN(date.getTime())) {\n      console.error('[ModalTransaksi] useMemo: Invalid Date object created from transactionDate:', transactionDate);\n      return [];\n    }\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    console.log('[ModalTransaksi] useMemo: monthKey derived from date:', monthKey);\n\n    // Ambil budget untuk bulan yang dipilih di input tanggal\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\n    console.log('[ModalTransaksi] useMemo: budgetsForSelectedDateMonth for', monthKey, ':', budgetsForSelectedDateMonth);\n    const uniqueCategories = budgetsForSelectedDateMonth.reduce((acc, b) => {\n      if (b.category_id) {\n        // Hanya proses jika ada kategori\n        acc[b.category_id] = {\n          id: b.category_id,\n          name: b.category_name\n        };\n      }\n      return acc;\n    }, {});\n    const finalCategories = Object.values(uniqueCategories);\n    console.log('[ModalTransaksi] useMemo: Final categories:', finalCategories);\n    return finalCategories;\n  }, [allBudgetsByMonth, formData.transaction_date]); // Dependencies diubah\n\n  // checkBudget sekarang juga difilter berdasarkan formData.transaction_date\n  const checkBudget = useCallback((kategoriId, jumlahTransaksi) => {\n    console.log('[ModalTransaksi] useCallback: checkBudget triggered.');\n    console.log('[ModalTransaksi] checkBudget: kategoriId:', kategoriId, 'jumlahTransaksi:', jumlahTransaksi, 'formData.transaction_date:', formData.transaction_date);\n\n    // Pastikan kategoriId dan transaction_date ada\n    if (!kategoriId || !formData.transaction_date) {\n      console.log('[ModalTransaksi] checkBudget: Missing kategoriId or transaction_date.');\n      setSisaBudget(null);\n      setSaveDisabled(false);\n      return;\n    }\n    const date = new Date(formData.transaction_date);\n    if (isNaN(date.getTime())) {\n      console.error('[ModalTransaksi] checkBudget: Invalid Date object from formData.transaction_date:', formData.transaction_date);\n      setSisaBudget(null);\n      setSaveDisabled(false);\n      return;\n    }\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    console.log('[ModalTransaksi] checkBudget: monthKey derived:', monthKey);\n\n    // Ambil budget untuk bulan yang dipilih di input tanggal\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\n    console.log('[ModalTransaksi] checkBudget: budgetsForSelectedDateMonth for', monthKey, ':', budgetsForSelectedDateMonth);\n    const budgetInfo = budgetsForSelectedDateMonth.find(b => b.category_id === Number(kategoriId));\n    console.log('[ModalTransaksi] checkBudget: budgetInfo found:', budgetInfo);\n    const sisaDiAmplop = budgetInfo ? parseFloat(budgetInfo.balance || 0) : 0;\n    console.log('[ModalTransaksi] checkBudget: sisaDiAmplop:', sisaDiAmplop);\n\n    // Saat mode edit, kita harus menambahkan kembali nominal lama dari transaksi ini ke sisa budget\n    // Pastikan initialData.id dan formData.id cocok (transaksi yang sama sedang diedit)\n    // dan category_id juga cocok (karena budget bisa berubah antar kategori)\n    let originalAmount = 0;\n    if (initialData && initialData.id === formData.id && initialData.category_id === Number(kategoriId)) {\n      originalAmount = parseFloat(initialData.amount || 0);\n      console.log('[ModalTransaksi] checkBudget: originalAmount (edit mode):', originalAmount);\n    }\n    const sisaAktualUntukValidasi = sisaDiAmplop + originalAmount;\n    console.log('[ModalTransaksi] checkBudget: sisaAktualUntukValidasi:', sisaAktualUntukValidasi);\n    setSisaBudget(sisaAktualUntukValidasi);\n    setSaveDisabled(parseFloat(jumlahTransaksi || 0) > sisaAktualUntukValidasi);\n  }, [allBudgetsByMonth, initialData, formData.id, formData.transaction_date]); // Dependencies diubah\n\n  useEffect(() => {\n    console.log('[ModalTransaksi] useEffect: isOpen changed or initialData changed.');\n    if (isOpen) {\n      const isEdit = initialData === null || initialData === void 0 ? void 0 : initialData.id;\n      const data = isEdit ? initialData : {\n        description: '',\n        amount: '',\n        transaction_date: new Date().toISOString().slice(0, 10),\n        category_id: '',\n        account_id: '',\n        type: (initialData === null || initialData === void 0 ? void 0 : initialData.type) || 'expense'\n      };\n      const initialFormData = {\n        ...data,\n        account_id: data.account_id || (accounts.length === 1 ? accounts[0].id : ''),\n        transaction_date: data.transaction_date ? new Date(data.transaction_date).toISOString().slice(0, 10) : new Date().toISOString().slice(0, 10)\n      };\n      console.log('[ModalTransaksi] useEffect: initialFormData set to:', initialFormData);\n      setFormData(initialFormData); // Set form data terlebih dahulu\n\n      // Panggil checkBudget setelah formData diatur\n      if (initialFormData.type === 'expense') {\n        console.log('[ModalTransaksi] useEffect: Calling checkBudget for expense type.');\n        checkBudget(initialFormData.category_id, initialFormData.amount);\n      } else {\n        console.log('[ModalTransaksi] useEffect: Not expense type, resetting budget info.');\n        setSisaBudget(null);\n        setSaveDisabled(false);\n      }\n      setError('');\n    }\n  }, [initialData, isOpen, checkBudget, accounts]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(`[ModalTransaksi] handleChange: Input '${name}' changed to '${value}'`);\n    let newFormData = {\n      ...formData,\n      [name]: value\n    };\n\n    // Logika khusus ketika transaction_date berubah\n    if (name === 'transaction_date') {\n      const newDate = new Date(value);\n      console.log('[ModalTransaksi] handleChange: New Date object from value:', newDate);\n\n      // Pastikan newDate valid\n      if (isNaN(newDate.getTime())) {\n        console.error('[ModalTransaksi] handleChange: Invalid date selected:', value);\n        // Mungkin ingin menampilkan error ke user di sini\n        setError('Format tanggal tidak valid.');\n        setFormData(newFormData); // Tetap update form data, tapi mungkin tidak akan berfungsi\n        return;\n      } else {\n        setError(''); // Hapus error jika tanggal valid\n      }\n      const newMonthKey = `${newDate.getFullYear()}-${String(newDate.getMonth() + 1).padStart(2, '0')}`;\n      console.log('[ModalTransaksi] handleChange: newMonthKey derived:', newMonthKey);\n\n      // Dapatkan daftar kategori yang valid untuk bulan yang baru dipilih\n      const budgetsForNewMonth = allBudgetsByMonth[newMonthKey] || [];\n      const validCategoryIdsForNewMonth = new Set(budgetsForNewMonth.map(b => b.category_id));\n      console.log('[ModalTransaksi] handleChange: Valid category IDs for new month:', Array.from(validCategoryIdsForNewMonth));\n\n      // Jika category_id yang saat ini terpilih TIDAK valid untuk bulan yang baru, reset\n      if (newFormData.category_id && !validCategoryIdsForNewMonth.has(Number(newFormData.category_id))) {\n        console.log('[ModalTransaksi] handleChange: Resetting category_id because it is not valid for the new month.');\n        newFormData = {\n          ...newFormData,\n          category_id: ''\n        }; // Reset category_id\n        setError('Kategori yang dipilih tidak tersedia untuk bulan ini. Harap pilih kategori baru.');\n      } else {\n        console.log('[ModalTransaksi] handleChange: Current category_id is valid or empty.');\n        if (name === 'transaction_date') {\n          // Only clear general error if date is valid and category is fine\n          setError('');\n        }\n      }\n    }\n    setFormData(newFormData); // Update state dengan formData yang mungkin sudah direset category_id-nya\n    console.log('[ModalTransaksi] handleChange: formData after setFormData:', newFormData);\n\n    // Periksa budget jika itu pengeluaran dan kategori, jumlah, atau tanggal berubah\n    if (newFormData.type === 'expense') {\n      const katId = newFormData.category_id; // Gunakan category_id terbaru dari newFormData\n      const jumlah = newFormData.amount; // Gunakan amount terbaru dari newFormData\n      console.log('[ModalTransaksi] handleChange: Calling checkBudget with katId:', katId, 'jumlah:', jumlah);\n      checkBudget(katId, jumlah);\n    } else {\n      console.log('[ModalTransaksi] handleChange: Not expense type, resetting budget info.');\n      setSisaBudget(null);\n      setSaveDisabled(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log('[ModalTransaksi] handleSubmit: Form submitted with formData:', formData);\n    if (formData.type === 'income' && !formData.account_id) {\n      setError(\"Pemasukan wajib memilih akun tujuan.\");\n      return;\n    }\n    if (formData.type === 'expense' && !formData.category_id) {\n      setError(\"Pengeluaran wajib memilih kategori.\");\n      return;\n    }\n    // Tambahkan validasi untuk jumlah jika sisa budget negatif\n    if (formData.type === 'expense' && isSaveDisabled) {\n      setError(\"Jumlah transaksi melebihi sisa budget.\");\n      return;\n    }\n    setError('');\n    onSave({\n      ...formData,\n      id: initialData === null || initialData === void 0 ? void 0 : initialData.id\n    });\n  };\n  if (!isOpen) return null;\n  const modalTitle = `${initialData !== null && initialData !== void 0 && initialData.id ? 'Edit' : 'Tambah'} ${formData.type === 'income' ? 'Pendapatan' : 'Pengeluaran'}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: modalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Nama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            value: formData.description,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Jumlah (Rp)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"amount\",\n            value: formData.amount,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), formData.type === 'expense' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Kategori\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category_id\",\n            value: formData.category_id,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Pilih Kategori\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.id,\n              children: cat.name\n            }, cat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), sisaBudget !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `text-sm mt-1 ${sisaBudget < 0 ? 'text-red-500' : 'text-gray-500'}`,\n            children: [\"Sisa budget bulan ini: Rp \", sisaBudget.toLocaleString('id-ID')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), formData.type === 'income' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Masukkan ke Akun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"account_id\",\n            value: formData.account_id,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Pilih Akun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), accounts.map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: acc.id,\n              children: acc.name\n            }, acc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Tanggal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"transaction_date\",\n            value: formData.transaction_date,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-red-600\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2 pt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"bg-gray-200 px-4 py-2 rounded-md\",\n            onClick: onClose,\n            children: \"Batal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSaveDisabled,\n            className: `px-4 py-2 rounded-md text-white ${isSaveDisabled ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'}`,\n            children: \"Simpan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalTransaksi, \"RGSHKzMIApsyD+YxxSuZjw5ySU4=\");\n_c = ModalTransaksi;\nexport default ModalTransaksi;\nvar _c;\n$RefreshReg$(_c, \"ModalTransaksi\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","jsxDEV","_jsxDEV","ModalTransaksi","isOpen","onClose","onSave","initialData","allBudgetsByMonth","accounts","_s","formData","setFormData","description","amount","transaction_date","Date","toISOString","slice","category_id","account_id","type","error","setError","sisaBudget","setSisaBudget","isSaveDisabled","setSaveDisabled","categories","console","log","transactionDate","date","isNaN","getTime","monthKey","getFullYear","String","getMonth","padStart","budgetsForSelectedDateMonth","uniqueCategories","reduce","acc","b","id","name","category_name","finalCategories","Object","values","checkBudget","kategoriId","jumlahTransaksi","budgetInfo","find","Number","sisaDiAmplop","parseFloat","balance","originalAmount","sisaAktualUntukValidasi","isEdit","data","initialFormData","length","handleChange","e","value","target","newFormData","newDate","newMonthKey","budgetsForNewMonth","validCategoryIdsForNewMonth","Set","map","Array","from","has","katId","jumlah","handleSubmit","preventDefault","modalTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","cat","toLocaleString","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/testis/frontend/src/ModalTransaksi.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\n\r\nconst ModalTransaksi = ({ isOpen, onClose, onSave, initialData = null, allBudgetsByMonth = {}, accounts = [] }) => {\r\n  const [formData, setFormData] = useState({\r\n    description: '', amount: '', transaction_date: new Date().toISOString().slice(0, 10),\r\n    category_id: '', account_id: '', type: 'expense',\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [sisaBudget, setSisaBudget] = useState(null);\r\n  const [isSaveDisabled, setSaveDisabled] = useState(false);\r\n\r\n  // Categories sekarang difilter berdasarkan formData.transaction_date\r\n  const categories = useMemo(() => {\r\n    console.log('[ModalTransaksi] useMemo: categories triggered.');\r\n    const transactionDate = formData.transaction_date;\r\n    console.log('[ModalTransaksi] useMemo: transactionDate from formData:', transactionDate);\r\n\r\n    if (!transactionDate) {\r\n      console.log('[ModalTransaksi] useMemo: transactionDate is empty, returning empty categories.');\r\n      return [];\r\n    }\r\n\r\n    const date = new Date(transactionDate);\r\n    // Pastikan date valid. Jika 'Invalid Date', berarti input date bermasalah\r\n    if (isNaN(date.getTime())) {\r\n      console.error('[ModalTransaksi] useMemo: Invalid Date object created from transactionDate:', transactionDate);\r\n      return [];\r\n    }\r\n\r\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n    console.log('[ModalTransaksi] useMemo: monthKey derived from date:', monthKey);\r\n\r\n    // Ambil budget untuk bulan yang dipilih di input tanggal\r\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\r\n    console.log('[ModalTransaksi] useMemo: budgetsForSelectedDateMonth for', monthKey, ':', budgetsForSelectedDateMonth);\r\n\r\n    const uniqueCategories = budgetsForSelectedDateMonth.reduce((acc, b) => {\r\n      if (b.category_id) { // Hanya proses jika ada kategori\r\n        acc[b.category_id] = { id: b.category_id, name: b.category_name };\r\n      }\r\n      return acc;\r\n    }, {});\r\n    const finalCategories = Object.values(uniqueCategories);\r\n    console.log('[ModalTransaksi] useMemo: Final categories:', finalCategories);\r\n    return finalCategories;\r\n  }, [allBudgetsByMonth, formData.transaction_date]); // Dependencies diubah\r\n\r\n  // checkBudget sekarang juga difilter berdasarkan formData.transaction_date\r\n  const checkBudget = useCallback((kategoriId, jumlahTransaksi) => {\r\n    console.log('[ModalTransaksi] useCallback: checkBudget triggered.');\r\n    console.log('[ModalTransaksi] checkBudget: kategoriId:', kategoriId, 'jumlahTransaksi:', jumlahTransaksi, 'formData.transaction_date:', formData.transaction_date);\r\n\r\n    // Pastikan kategoriId dan transaction_date ada\r\n    if (!kategoriId || !formData.transaction_date) {\r\n      console.log('[ModalTransaksi] checkBudget: Missing kategoriId or transaction_date.');\r\n      setSisaBudget(null);\r\n      setSaveDisabled(false);\r\n      return;\r\n    }\r\n\r\n    const date = new Date(formData.transaction_date);\r\n    if (isNaN(date.getTime())) {\r\n      console.error('[ModalTransaksi] checkBudget: Invalid Date object from formData.transaction_date:', formData.transaction_date);\r\n      setSisaBudget(null);\r\n      setSaveDisabled(false);\r\n      return;\r\n    }\r\n\r\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n    console.log('[ModalTransaksi] checkBudget: monthKey derived:', monthKey);\r\n\r\n    // Ambil budget untuk bulan yang dipilih di input tanggal\r\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\r\n    console.log('[ModalTransaksi] checkBudget: budgetsForSelectedDateMonth for', monthKey, ':', budgetsForSelectedDateMonth);\r\n\r\n    const budgetInfo = budgetsForSelectedDateMonth.find(b => b.category_id === Number(kategoriId));\r\n    console.log('[ModalTransaksi] checkBudget: budgetInfo found:', budgetInfo);\r\n\r\n    const sisaDiAmplop = budgetInfo ? parseFloat(budgetInfo.balance || 0) : 0;\r\n    console.log('[ModalTransaksi] checkBudget: sisaDiAmplop:', sisaDiAmplop);\r\n\r\n    // Saat mode edit, kita harus menambahkan kembali nominal lama dari transaksi ini ke sisa budget\r\n    // Pastikan initialData.id dan formData.id cocok (transaksi yang sama sedang diedit)\r\n    // dan category_id juga cocok (karena budget bisa berubah antar kategori)\r\n    let originalAmount = 0;\r\n    if (initialData && initialData.id === formData.id && initialData.category_id === Number(kategoriId)) {\r\n      originalAmount = parseFloat(initialData.amount || 0);\r\n      console.log('[ModalTransaksi] checkBudget: originalAmount (edit mode):', originalAmount);\r\n    }\r\n\r\n    const sisaAktualUntukValidasi = sisaDiAmplop + originalAmount;\r\n    console.log('[ModalTransaksi] checkBudget: sisaAktualUntukValidasi:', sisaAktualUntukValidasi);\r\n\r\n    setSisaBudget(sisaAktualUntukValidasi);\r\n    setSaveDisabled(parseFloat(jumlahTransaksi || 0) > sisaAktualUntukValidasi);\r\n\r\n  }, [allBudgetsByMonth, initialData, formData.id, formData.transaction_date]); // Dependencies diubah\r\n\r\n  useEffect(() => {\r\n    console.log('[ModalTransaksi] useEffect: isOpen changed or initialData changed.');\r\n    if (isOpen) {\r\n      const isEdit = initialData?.id;\r\n      const data = isEdit ? initialData : {\r\n        description: '', amount: '', transaction_date: new Date().toISOString().slice(0, 10),\r\n        category_id: '', account_id: '', type: initialData?.type || 'expense',\r\n      };\r\n\r\n      const initialFormData = {\r\n        ...data,\r\n        account_id: data.account_id || (accounts.length === 1 ? accounts[0].id : ''),\r\n        transaction_date: data.transaction_date ? new Date(data.transaction_date).toISOString().slice(0, 10) : new Date().toISOString().slice(0, 10)\r\n      };\r\n      console.log('[ModalTransaksi] useEffect: initialFormData set to:', initialFormData);\r\n\r\n      setFormData(initialFormData); // Set form data terlebih dahulu\r\n\r\n      // Panggil checkBudget setelah formData diatur\r\n      if (initialFormData.type === 'expense') {\r\n        console.log('[ModalTransaksi] useEffect: Calling checkBudget for expense type.');\r\n        checkBudget(initialFormData.category_id, initialFormData.amount);\r\n      } else {\r\n        console.log('[ModalTransaksi] useEffect: Not expense type, resetting budget info.');\r\n        setSisaBudget(null);\r\n        setSaveDisabled(false);\r\n      }\r\n      setError('');\r\n    }\r\n  }, [initialData, isOpen, checkBudget, accounts]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(`[ModalTransaksi] handleChange: Input '${name}' changed to '${value}'`);\r\n\r\n    let newFormData = { ...formData, [name]: value };\r\n\r\n    // Logika khusus ketika transaction_date berubah\r\n    if (name === 'transaction_date') {\r\n      const newDate = new Date(value);\r\n      console.log('[ModalTransaksi] handleChange: New Date object from value:', newDate);\r\n      \r\n      // Pastikan newDate valid\r\n      if (isNaN(newDate.getTime())) {\r\n        console.error('[ModalTransaksi] handleChange: Invalid date selected:', value);\r\n        // Mungkin ingin menampilkan error ke user di sini\r\n        setError('Format tanggal tidak valid.');\r\n        setFormData(newFormData); // Tetap update form data, tapi mungkin tidak akan berfungsi\r\n        return;\r\n      } else {\r\n        setError(''); // Hapus error jika tanggal valid\r\n      }\r\n\r\n      const newMonthKey = `${newDate.getFullYear()}-${String(newDate.getMonth() + 1).padStart(2, '0')}`;\r\n      console.log('[ModalTransaksi] handleChange: newMonthKey derived:', newMonthKey);\r\n\r\n      // Dapatkan daftar kategori yang valid untuk bulan yang baru dipilih\r\n      const budgetsForNewMonth = allBudgetsByMonth[newMonthKey] || [];\r\n      const validCategoryIdsForNewMonth = new Set(budgetsForNewMonth.map(b => b.category_id));\r\n      console.log('[ModalTransaksi] handleChange: Valid category IDs for new month:', Array.from(validCategoryIdsForNewMonth));\r\n\r\n\r\n      // Jika category_id yang saat ini terpilih TIDAK valid untuk bulan yang baru, reset\r\n      if (newFormData.category_id && !validCategoryIdsForNewMonth.has(Number(newFormData.category_id))) {\r\n        console.log('[ModalTransaksi] handleChange: Resetting category_id because it is not valid for the new month.');\r\n        newFormData = { ...newFormData, category_id: '' }; // Reset category_id\r\n        setError('Kategori yang dipilih tidak tersedia untuk bulan ini. Harap pilih kategori baru.');\r\n      } else {\r\n        console.log('[ModalTransaksi] handleChange: Current category_id is valid or empty.');\r\n        if (name === 'transaction_date') { // Only clear general error if date is valid and category is fine\r\n            setError('');\r\n        }\r\n      }\r\n    }\r\n\r\n    setFormData(newFormData); // Update state dengan formData yang mungkin sudah direset category_id-nya\r\n    console.log('[ModalTransaksi] handleChange: formData after setFormData:', newFormData);\r\n\r\n\r\n    // Periksa budget jika itu pengeluaran dan kategori, jumlah, atau tanggal berubah\r\n    if (newFormData.type === 'expense') {\r\n      const katId = newFormData.category_id; // Gunakan category_id terbaru dari newFormData\r\n      const jumlah = newFormData.amount;     // Gunakan amount terbaru dari newFormData\r\n      console.log('[ModalTransaksi] handleChange: Calling checkBudget with katId:', katId, 'jumlah:', jumlah);\r\n      checkBudget(katId, jumlah);\r\n    } else {\r\n      console.log('[ModalTransaksi] handleChange: Not expense type, resetting budget info.');\r\n      setSisaBudget(null);\r\n      setSaveDisabled(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('[ModalTransaksi] handleSubmit: Form submitted with formData:', formData);\r\n    if (formData.type === 'income' && !formData.account_id) {\r\n      setError(\"Pemasukan wajib memilih akun tujuan.\");\r\n      return;\r\n    }\r\n    if (formData.type === 'expense' && !formData.category_id) {\r\n      setError(\"Pengeluaran wajib memilih kategori.\");\r\n      return;\r\n    }\r\n    // Tambahkan validasi untuk jumlah jika sisa budget negatif\r\n    if (formData.type === 'expense' && isSaveDisabled) {\r\n        setError(\"Jumlah transaksi melebihi sisa budget.\");\r\n        return;\r\n    }\r\n    setError('');\r\n    onSave({ ...formData, id: initialData?.id });\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const modalTitle = `${initialData?.id ? 'Edit' : 'Tambah'} ${formData.type === 'income' ? 'Pendapatan' : 'Pengeluaran'}`;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">{modalTitle}</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Nama</label>\r\n            <input type=\"text\" name=\"description\" value={formData.description} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Jumlah (Rp)</label>\r\n            <input type=\"number\" name=\"amount\" value={formData.amount} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required />\r\n          </div>\r\n\r\n          {formData.type === 'expense' && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Kategori</label>\r\n              <select name=\"category_id\" value={formData.category_id} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required>\r\n                <option value=\"\">Pilih Kategori</option>\r\n                {categories.map(cat => (\r\n                  <option key={cat.id} value={cat.id}>{cat.name}</option>\r\n                ))}\r\n              </select>\r\n              {sisaBudget !== null && (\r\n                <p className={`text-sm mt-1 ${sisaBudget < 0 ? 'text-red-500' : 'text-gray-500'}`}>\r\n                  Sisa budget bulan ini: Rp {sisaBudget.toLocaleString('id-ID')}\r\n                </p>\r\n              )}\r\n            </div>\r\n          )}\r\n          {formData.type === 'income' && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Masukkan ke Akun</label>\r\n              <select name=\"account_id\" value={formData.account_id} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required>\r\n                <option value=\"\">Pilih Akun</option>\r\n                {accounts.map(acc => (\r\n                  <option key={acc.id} value={acc.id}>{acc.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Tanggal</label>\r\n            <input type=\"date\" name=\"transaction_date\" value={formData.transaction_date} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required />\r\n          </div>\r\n\r\n          {error && <p className=\"text-sm text-red-600\">{error}</p>}\r\n          <div className=\"flex justify-end space-x-2 pt-2\">\r\n            <button type=\"button\" className=\"bg-gray-200 px-4 py-2 rounded-md\" onClick={onClose}>Batal</button>\r\n            <button type=\"submit\" disabled={isSaveDisabled} className={`px-4 py-2 rounded-md text-white ${isSaveDisabled ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'}`}>Simpan</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalTransaksi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}