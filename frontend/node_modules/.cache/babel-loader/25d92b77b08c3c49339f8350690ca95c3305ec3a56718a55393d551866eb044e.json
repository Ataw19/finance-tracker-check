{"ast":null,"code":"var _jsxFileName = \"E:\\\\testis\\\\frontend\\\\src\\\\HalamanUtama.js\",\n  _s = $RefreshSig$();\nimport ModalAddMonth from \"./ModalAddMonth\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport IconPickerModal from \"./IconPickerModal\";\nimport Recent from './RecentTransaction';\nimport FilterTransaksi from './FilterTransaksi';\nimport ChartKeuangan from './ChartKeuangan';\nimport ModalTransaksi from './ModalTransaksi';\nimport ModalKategori from './ModalKategori';\nimport ModalAkun from './ModalAkun';\nimport { useNavigate } from 'react-router-dom';\nimport DropdownAksi from \"./DropdownButton\";\nimport { getTransactions, getBudgets, getCategories, deleteTransaction, deleteCategory, setBudget, createTransaction, updateTransaction, createCategory, updateCategory, createAccount, getAccounts, updateAccount, deleteAccount } from './apiservice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  const [accounts, setAccounts] = useState([]);\n  const [budgetsByMonth, setBudgetsByMonth] = useState({});\n  const [transactions, setTransactions] = useState([]);\n  const [pendapatan, setPendapatan] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [isTransactionModalOpen, setTransactionModalOpen] = useState(false);\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\n  const [isCategoryModalOpen, setCategoryModalOpen] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [selectedAccount, setSelectedAccount] = useState(null);\n  const [editingBudgetId, setEditingBudgetId] = useState(null);\n  const [editingBudgetAmount, setEditingBudgetAmount] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isModalAddMonthOpen, setIsModalAddMonthOpen] = useState(false);\n  const [selectedTab, setSelectedTab] = useState(\"Terkini\");\n  const [selectedTabPendapatan, setSelectedTabPendapatan] = useState(\"Terkini\");\n  const [isIconPickerOpen, setIconPickerOpen] = useState(false);\n  const [iconTargetCategory, setIconTargetCategory] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(() => {\n    const d = new Date();\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}`;\n  });\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const [year, month] = selectedMonth.split('-');\n      const [accountData, transactionData, categoryData] = await Promise.all([getAccounts(), getTransactions(), getCategories()]);\n\n      // Hanya fetch budgets jika bulan sudah ada di budgetsByMonth\n      let budgetData = [];\n      if (budgetsByMonth[selectedMonth] !== undefined) {\n        budgetData = await getBudgets(year, month);\n      }\n      setAccounts(accountData);\n\n      // Update budgets hanya jika ada data\n      if (budgetData.length > 0) {\n        setBudgetsByMonth(prev => ({\n          ...prev,\n          [selectedMonth]: budgetData\n        }));\n      }\n      const expenseTxs = transactionData.filter(tx => tx.type === 'expense');\n      const incomeTxs = transactionData.filter(tx => tx.type === 'income');\n      setTransactions(expenseTxs);\n      setPendapatan(incomeTxs);\n      setCategories(categoryData);\n    } catch (error) {\n      console.error(\"Gagal mengambil data:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [selectedMonth, budgetsByMonth]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  const handleAddMonth = async newMonth => {\n    if (budgetsByMonth[newMonth] !== undefined) {\n      alert(\"Maaf, bulan sudah ada!\");\n      return;\n    }\n\n    // Tambahkan bulan baru dengan array kosong\n    setBudgetsByMonth(prev => ({\n      ...prev,\n      [newMonth]: []\n    }));\n    setSelectedMonth(newMonth);\n    setIsModalAddMonthOpen(false);\n  };\n  const handleSaveBudget = async (categoryId, amount) => {\n    const [year, month] = selectedMonth.split('-');\n    try {\n      await setBudget({\n        category_id: categoryId,\n        amount: parseFloat(amount) || 0,\n        year: parseInt(year),\n        month: parseInt(month)\n      });\n\n      // Setelah menyimpan budget baru, fetch data untuk bulan tersebut\n      const budgetData = await getBudgets(year, month);\n      setBudgetsByMonth(prev => ({\n        ...prev,\n        [selectedMonth]: budgetData\n      }));\n    } catch (error) {\n      console.error(\"Gagal simpan budget:\", error);\n      alert(error.message);\n    } finally {\n      setEditingBudgetId(null);\n    }\n  };\n\n  // Fungsi untuk mendapatkan kategori yang belum memiliki budget di bulan ini\n  const getUnbudgetedCategories = () => {\n    const currentBudgets = budgetsByMonth[selectedMonth] || [];\n    const budgetedCategoryIds = currentBudgets.map(b => b.category_id);\n    return categories.filter(cat => !budgetedCategoryIds.includes(cat.id));\n  };\n  const CircularProgress = ({\n    percentage\n  }) => {\n    const pct = Number(percentage);\n    const radius = 20;\n    const stroke = 4;\n    const normalized = radius - stroke / 2;\n    const circumference = 2 * Math.PI * normalized;\n    const clamped = Math.min(pct, 100);\n    const offset = circumference * (1 - clamped / 100);\n    const color = pct > 99 ? 'stroke-red-500' : pct > 50 ? 'stroke-yellow-400' : pct > 0 ? 'stroke-green-400' : 'stroke-transparent';\n    return /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"w-5 h-5\",\n      viewBox: \"0 0 48 48\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        className: \"stroke-gray-200\",\n        strokeWidth: stroke,\n        fill: \"transparent\",\n        r: normalized,\n        cx: \"24\",\n        cy: \"24\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        className: `transition-all duration-300 ${color}`,\n        strokeWidth: stroke,\n        fill: \"transparent\",\n        r: normalized,\n        cx: \"24\",\n        cy: \"24\",\n        strokeDasharray: circumference,\n        strokeDashoffset: offset,\n        strokeLinecap: \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  };\n  function formatMonth(monthStr) {\n    const [year, month] = monthStr.split(\"-\");\n    const monthNames = [\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"];\n    return `${monthNames[parseInt(month, 10) - 1]} ${year}`;\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-col items-start justify-center min-h-screen bg-gray-200\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col w-1/6 mr-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"bg-gray-500 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white px-2 w-3/4\",\n          children: \"Kategori Bulanan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4 py-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"month-select\",\n            className: \"text-sm font-semibold mr-2 text-gray-700\",\n            children: \"Pilih Bulan:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMonth,\n            onChange: e => {\n              const val = e.target.value;\n              if (val === \"add_new\") {\n                setIsModalAddMonthOpen(true);\n              } else {\n                setSelectedMonth(val);\n              }\n            },\n            children: [Object.keys(budgetsByMonth).sort((a, b) => new Date(a) - new Date(b)).map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: month,\n              children: formatMonth(month)\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"add_new\",\n              children: \"+ Tambah Bulan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-3 py-1 w-full\",\n          children: [(budgetsByMonth[selectedMonth] || []).map(item => {\n            const budgetAmount = parseFloat(item.amount) || 0;\n            const usedAmount = parseFloat(item.used) || 0;\n            const percentage = budgetAmount > 0 ? usedAmount / budgetAmount * 100 : 0;\n            const isEditing = editingBudgetId === item.category_id;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-4/6 sm:w-4/6 lg:w-2/3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white border rounded-xl px-2 py-1 gap-1 flex flex-col w-full border-gray-300\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex flex-wrap items-center w-5/6\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-8 h-8 rounded-full border bg-gray-200 flex items-center justify-center cursor-pointer mr-2 flex-shrink-0\",\n                      onClick: () => handleOpenIconPicker(item),\n                      title: \"Ubah Ikon\",\n                      children: item.icon_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: item.icon_path,\n                        alt: item.category_name,\n                        className: \"w-full h-full object-cover rounded-full\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"text-gray-500 text-xl font-light\",\n                        children: \"+\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-sm\",\n                      children: item.category_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 252,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(DropdownAksi, {\n                    onEdit: () => handleOpenEditCategoryModal(item),\n                    onDelete: () => handleHapusKategori(item.category_id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-[11px] mt-1 w-fit relative group inline-block\",\n                  children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    value: editingBudgetAmount,\n                    onChange: e => setEditingBudgetAmount(e.target.value),\n                    onBlur: () => handleSaveBudget(item.category_id, editingBudgetAmount),\n                    onKeyDown: e => {\n                      if (e.key === 'Enter') handleSaveBudget(item.category_id, editingBudgetAmount);\n                    },\n                    autoFocus: true,\n                    className: \"w-24 border-b-2 border-blue-500 outline-none\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    onClick: () => {\n                      setEditingBudgetId(item.category_id);\n                      setEditingBudgetAmount(budgetAmount);\n                    },\n                    className: \"cursor-pointer\",\n                    children: [\"Rp \", budgetAmount.toLocaleString('id-ID')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-row gap-1 items-center relative w-fit group cursor-pointer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-[11px]\",\n                    children: [percentage.toFixed(0), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n                    percentage: percentage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this)\n            }, item.category_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this);\n          }), getUnbudgetedCategories().map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4/6 sm:w-4/6 lg:w-2/3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-100 border rounded-xl px-2 py-1 gap-1 flex flex-col w-full border-gray-300\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-wrap items-center w-5/6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-8 h-8 rounded-full border bg-gray-200 flex items-center justify-center mr-2\",\n                    children: category.icon_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: category.icon_path,\n                      alt: category.name,\n                      className: \"w-full h-full object-cover rounded-full\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-gray-500 text-xl font-light\",\n                      children: \"+\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-sm\",\n                    children: category.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setEditingBudgetId(category.id);\n                  setEditingBudgetAmount('');\n                },\n                className: \"text-xs text-blue-500 hover:text-blue-700 mt-1\",\n                children: \"+ Tambah Budget\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleOpenAddCategoryModal,\n            className: \"bg-gray-100 text-gray-400 text-sm px-5 py-2 rounded-xl hover:bg-gray-200 w-4/6 sm:w-4/6 lg:w-2/3\",\n            children: \"+ Tambah Kategori\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1QegG9AwfvkjfqugOBymvBjbq1g=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ModalAddMonth","React","useEffect","useState","useCallback","IconPickerModal","Recent","FilterTransaksi","ChartKeuangan","ModalTransaksi","ModalKategori","ModalAkun","useNavigate","DropdownAksi","getTransactions","getBudgets","getCategories","deleteTransaction","deleteCategory","setBudget","createTransaction","updateTransaction","createCategory","updateCategory","createAccount","getAccounts","updateAccount","deleteAccount","jsxDEV","_jsxDEV","App","_s","navigate","accounts","setAccounts","budgetsByMonth","setBudgetsByMonth","transactions","setTransactions","pendapatan","setPendapatan","categories","setCategories","isTransactionModalOpen","setTransactionModalOpen","selectedTransaction","setSelectedTransaction","isCategoryModalOpen","setCategoryModalOpen","selectedCategory","setSelectedCategory","selectedAccount","setSelectedAccount","editingBudgetId","setEditingBudgetId","editingBudgetAmount","setEditingBudgetAmount","isLoading","setIsLoading","isModalAddMonthOpen","setIsModalAddMonthOpen","selectedTab","setSelectedTab","selectedTabPendapatan","setSelectedTabPendapatan","isIconPickerOpen","setIconPickerOpen","iconTargetCategory","setIconTargetCategory","selectedMonth","setSelectedMonth","d","Date","getFullYear","String","getMonth","padStart","fetchData","year","month","split","accountData","transactionData","categoryData","Promise","all","budgetData","undefined","length","prev","expenseTxs","filter","tx","type","incomeTxs","error","console","handleAddMonth","newMonth","alert","handleSaveBudget","categoryId","amount","category_id","parseFloat","parseInt","message","getUnbudgetedCategories","currentBudgets","budgetedCategoryIds","map","b","cat","includes","id","CircularProgress","percentage","pct","Number","radius","stroke","normalized","circumference","Math","PI","clamped","min","offset","color","className","viewBox","children","strokeWidth","fill","r","cx","cy","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","strokeDashoffset","strokeLinecap","formatMonth","monthStr","monthNames","htmlFor","value","onChange","e","val","target","Object","keys","sort","a","item","budgetAmount","usedAmount","used","isEditing","onClick","handleOpenIconPicker","title","icon_path","src","alt","category_name","onEdit","handleOpenEditCategoryModal","onDelete","handleHapusKategori","onBlur","onKeyDown","key","autoFocus","toLocaleString","toFixed","category","name","handleOpenAddCategoryModal","_c","$RefreshReg$"],"sources":["E:/testis/frontend/src/HalamanUtama.js"],"sourcesContent":["import ModalAddMonth from \"./ModalAddMonth\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport IconPickerModal from \"./IconPickerModal\";\r\nimport Recent from './RecentTransaction';\r\nimport FilterTransaksi from './FilterTransaksi';\r\nimport ChartKeuangan from './ChartKeuangan';\r\nimport ModalTransaksi from './ModalTransaksi';\r\nimport ModalKategori from './ModalKategori';\r\nimport ModalAkun from './ModalAkun';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport DropdownAksi from \"./DropdownButton\";\r\nimport { getTransactions, getBudgets, getCategories, deleteTransaction, deleteCategory, setBudget, createTransaction, updateTransaction, createCategory, updateCategory, createAccount, getAccounts, updateAccount, deleteAccount } from './apiservice';\r\n\r\nfunction App() {\r\n  const navigate = useNavigate();\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [budgetsByMonth, setBudgetsByMonth] = useState({});\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [pendapatan, setPendapatan] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [isTransactionModalOpen, setTransactionModalOpen] = useState(false);\r\n  const [selectedTransaction, setSelectedTransaction] = useState(null);\r\n  const [isCategoryModalOpen, setCategoryModalOpen] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [selectedAccount, setSelectedAccount] = useState(null);\r\n  const [editingBudgetId, setEditingBudgetId] = useState(null);\r\n  const [editingBudgetAmount, setEditingBudgetAmount] = useState('');\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isModalAddMonthOpen, setIsModalAddMonthOpen] = useState(false);\r\n  const [selectedTab, setSelectedTab] = useState(\"Terkini\");\r\n  const [selectedTabPendapatan, setSelectedTabPendapatan] = useState(\"Terkini\");\r\n  const [isIconPickerOpen, setIconPickerOpen] = useState(false);\r\n  const [iconTargetCategory, setIconTargetCategory] = useState(null);\r\n\r\n  const [selectedMonth, setSelectedMonth] = useState(() => {\r\n    const d = new Date();\r\n    return `${d.getFullYear()}-${String(d.getMonth() + 1).padStart(2, '0')}`;\r\n  });\r\n\r\n  const fetchData = useCallback(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const [year, month] = selectedMonth.split('-');\r\n      \r\n      const [accountData, transactionData, categoryData] = await Promise.all([\r\n        getAccounts(),\r\n        getTransactions(),\r\n        getCategories()\r\n      ]);\r\n      \r\n      // Hanya fetch budgets jika bulan sudah ada di budgetsByMonth\r\n      let budgetData = [];\r\n      if (budgetsByMonth[selectedMonth] !== undefined) {\r\n        budgetData = await getBudgets(year, month);\r\n      }\r\n\r\n      setAccounts(accountData);\r\n      \r\n      // Update budgets hanya jika ada data\r\n      if (budgetData.length > 0) {\r\n        setBudgetsByMonth(prev => ({\r\n          ...prev,\r\n          [selectedMonth]: budgetData\r\n        }));\r\n      }\r\n\r\n      const expenseTxs = transactionData.filter(tx => tx.type === 'expense');\r\n      const incomeTxs = transactionData.filter(tx => tx.type === 'income');\r\n      setTransactions(expenseTxs);\r\n      setPendapatan(incomeTxs);\r\n      \r\n      setCategories(categoryData);\r\n\r\n    } catch (error) {\r\n      console.error(\"Gagal mengambil data:\", error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [selectedMonth, budgetsByMonth]);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  const handleAddMonth = async (newMonth) => {\r\n    if (budgetsByMonth[newMonth] !== undefined) {\r\n      alert(\"Maaf, bulan sudah ada!\");\r\n      return;\r\n    }\r\n    \r\n    // Tambahkan bulan baru dengan array kosong\r\n    setBudgetsByMonth(prev => ({\r\n      ...prev,\r\n      [newMonth]: []\r\n    }));\r\n    \r\n    setSelectedMonth(newMonth);\r\n    setIsModalAddMonthOpen(false);\r\n  };\r\n\r\n  const handleSaveBudget = async (categoryId, amount) => {\r\n    const [year, month] = selectedMonth.split('-');\r\n    try {\r\n      await setBudget({\r\n        category_id: categoryId,\r\n        amount: parseFloat(amount) || 0,\r\n        year: parseInt(year),\r\n        month: parseInt(month),\r\n      });\r\n      \r\n      // Setelah menyimpan budget baru, fetch data untuk bulan tersebut\r\n      const budgetData = await getBudgets(year, month);\r\n      \r\n      setBudgetsByMonth(prev => ({\r\n        ...prev,\r\n        [selectedMonth]: budgetData\r\n      }));\r\n      \r\n    } catch (error) {\r\n      console.error(\"Gagal simpan budget:\", error);\r\n      alert(error.message);\r\n    } finally {\r\n      setEditingBudgetId(null);\r\n    }\r\n  };\r\n\r\n  // Fungsi untuk mendapatkan kategori yang belum memiliki budget di bulan ini\r\n  const getUnbudgetedCategories = () => {\r\n    const currentBudgets = budgetsByMonth[selectedMonth] || [];\r\n    const budgetedCategoryIds = currentBudgets.map(b => b.category_id);\r\n    \r\n    return categories.filter(cat => \r\n      !budgetedCategoryIds.includes(cat.id)\r\n    );\r\n  };\r\n\r\n  const CircularProgress = ({ percentage }) => {\r\n    const pct = Number(percentage);\r\n    const radius = 20;\r\n    const stroke = 4;\r\n    const normalized = radius - stroke / 2;\r\n    const circumference = 2 * Math.PI * normalized;\r\n    const clamped = Math.min(pct, 100);\r\n    const offset = circumference * (1 - clamped / 100);\r\n\r\n    const color =\r\n      pct > 99 ? 'stroke-red-500'\r\n      : pct > 50 ? 'stroke-yellow-400'\r\n      : pct > 0 ? 'stroke-green-400'\r\n      : 'stroke-transparent';\r\n\r\n    return (\r\n      <svg className=\"w-5 h-5\" viewBox=\"0 0 48 48\">\r\n        <circle\r\n          className=\"stroke-gray-200\"\r\n          strokeWidth={stroke}\r\n          fill=\"transparent\"\r\n          r={normalized}\r\n          cx=\"24\"\r\n          cy=\"24\"\r\n        />\r\n        <circle\r\n          className={`transition-all duration-300 ${color}`}\r\n          strokeWidth={stroke}\r\n          fill=\"transparent\"\r\n          r={normalized}\r\n          cx=\"24\"\r\n          cy=\"24\"\r\n          strokeDasharray={circumference}\r\n          strokeDashoffset={offset}\r\n          strokeLinecap=\"round\"\r\n        />\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  function formatMonth(monthStr) {\r\n    const [year, month] = monthStr.split(\"-\");\r\n    const monthNames = [\r\n      \"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\",\r\n      \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\"\r\n    ];\r\n    return `${monthNames[parseInt(month, 10) - 1]} ${year}`;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-col items-start justify-center min-h-screen bg-gray-200\">\r\n      {/* Header dan bagian atas tetap sama */}\r\n      {/* ... */}\r\n\r\n      {/* Bagian Kategori Bulanan */}\r\n      <div className=\"flex flex-col w-1/6 mr-8\">\r\n        <div className=\"flex flex-col\">\r\n          <h1 className=\"bg-gray-500 rounded-md text-[13px] md:text-base lg:text-lg font-bold text-white px-2 w-3/4\">\r\n            Kategori Bulanan\r\n          </h1>\r\n          <div className=\"mb-4 py-2\">\r\n            <label htmlFor=\"month-select\" className=\"text-sm font-semibold mr-2 text-gray-700\">\r\n              Pilih Bulan:\r\n            </label>\r\n            <select\r\n              value={selectedMonth}\r\n              onChange={(e) => {\r\n                const val = e.target.value;\r\n                if (val === \"add_new\") {\r\n                  setIsModalAddMonthOpen(true);\r\n                } else {\r\n                  setSelectedMonth(val);\r\n                }\r\n              }}\r\n            >\r\n              {Object.keys(budgetsByMonth)\r\n                .sort((a, b) => new Date(a) - new Date(b))\r\n                .map((month) => (\r\n                  <option key={month} value={month}>\r\n                    {formatMonth(month)}\r\n                  </option>\r\n                ))\r\n              }\r\n              <option value=\"add_new\">+ Tambah Bulan</option>\r\n            </select>\r\n          </div>\r\n          \r\n          {/* Daftar Kategori dengan Budget */}\r\n          <div className=\"flex flex-wrap gap-3 py-1 w-full\">\r\n            {(budgetsByMonth[selectedMonth] || []).map((item) => {\r\n              const budgetAmount = parseFloat(item.amount) || 0;\r\n              const usedAmount = parseFloat(item.used) || 0;\r\n              const percentage = budgetAmount > 0 ? (usedAmount / budgetAmount) * 100 : 0;\r\n              const isEditing = editingBudgetId === item.category_id;\r\n\r\n              return (\r\n                <div key={item.category_id} className=\"w-4/6 sm:w-4/6 lg:w-2/3\">\r\n                  <div className=\"bg-white border rounded-xl px-2 py-1 gap-1 flex flex-col w-full border-gray-300\">\r\n                    <div className=\"flex flex-row\">\r\n                      <div className=\"flex flex-wrap items-center w-5/6\">\r\n                        <div\r\n                          className=\"w-8 h-8 rounded-full border bg-gray-200 flex items-center justify-center cursor-pointer mr-2 flex-shrink-0\"\r\n                          onClick={() => handleOpenIconPicker(item)}\r\n                          title=\"Ubah Ikon\"\r\n                        >\r\n                          {item.icon_path ? (\r\n                            <img src={item.icon_path} alt={item.category_name} className=\"w-full h-full object-cover rounded-full\" />\r\n                          ) : (\r\n                            <span className=\"text-gray-500 text-xl font-light\">+</span>\r\n                          )}\r\n                        </div>\r\n                        <span className=\"text-sm\">{item.category_name}</span>\r\n                      </div>\r\n                      <DropdownAksi\r\n                        onEdit={() => handleOpenEditCategoryModal(item)}\r\n                        onDelete={() => handleHapusKategori(item.category_id)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"text-[11px] mt-1 w-fit relative group inline-block\">\r\n                      {isEditing ? (\r\n                        <input\r\n                          type=\"number\"\r\n                          value={editingBudgetAmount}\r\n                          onChange={(e) => setEditingBudgetAmount(e.target.value)}\r\n                          onBlur={() => handleSaveBudget(item.category_id, editingBudgetAmount)}\r\n                          onKeyDown={(e) => { if (e.key === 'Enter') handleSaveBudget(item.category_id, editingBudgetAmount) }}\r\n                          autoFocus\r\n                          className=\"w-24 border-b-2 border-blue-500 outline-none\"\r\n                        />\r\n                      ) : (\r\n                        <span \r\n                          onClick={() => {\r\n                            setEditingBudgetId(item.category_id);\r\n                            setEditingBudgetAmount(budgetAmount);\r\n                          }}\r\n                          className=\"cursor-pointer\"\r\n                        >\r\n                          Rp {budgetAmount.toLocaleString('id-ID')}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex flex-row gap-1 items-center relative w-fit group cursor-pointer\">\r\n                      <div className=\"text-[11px]\">\r\n                        {percentage.toFixed(0)}%\r\n                      </div>\r\n                      <CircularProgress percentage={percentage} />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n            {/* Daftar Kategori Tanpa Budget */}\r\n            {getUnbudgetedCategories().map(category => (\r\n              <div key={category.id} className=\"w-4/6 sm:w-4/6 lg:w-2/3\">\r\n                <div className=\"bg-gray-100 border rounded-xl px-2 py-1 gap-1 flex flex-col w-full border-gray-300\">\r\n                  <div className=\"flex flex-row\">\r\n                    <div className=\"flex flex-wrap items-center w-5/6\">\r\n                      <div className=\"w-8 h-8 rounded-full border bg-gray-200 flex items-center justify-center mr-2\">\r\n                        {category.icon_path ? (\r\n                          <img src={category.icon_path} alt={category.name} className=\"w-full h-full object-cover rounded-full\" />\r\n                        ) : (\r\n                          <span className=\"text-gray-500 text-xl font-light\">+</span>\r\n                        )}\r\n                      </div>\r\n                      <span className=\"text-sm\">{category.name}</span>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => {\r\n                      setEditingBudgetId(category.id);\r\n                      setEditingBudgetAmount('');\r\n                    }}\r\n                    className=\"text-xs text-blue-500 hover:text-blue-700 mt-1\"\r\n                  >\r\n                    + Tambah Budget\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n\r\n            {/* Tombol Tambah Kategori */}\r\n            <button\r\n              onClick={handleOpenAddCategoryModal}\r\n              className=\"bg-gray-100 text-gray-400 text-sm px-5 py-2 rounded-xl hover:bg-gray-200 w-4/6 sm:w-4/6 lg:w-2/3\"\r\n            >\r\n              + Tambah Kategori\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Bagian Daftar Akun (tetap sama) */}\r\n        {/* ... */}\r\n      </div>\r\n\r\n      {/* Modal dan bagian lainnya tetap sama */}\r\n      {/* ... */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}