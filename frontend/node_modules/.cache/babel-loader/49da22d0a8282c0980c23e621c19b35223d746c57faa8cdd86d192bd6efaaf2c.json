{"ast":null,"code":"var _jsxFileName = \"E:\\\\testis\\\\frontend\\\\src\\\\ModalKategori.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ModalKategori({\n  isOpen,\n  onClose,\n  onSave,\n  initialData,\n  accounts,\n  mode\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [accountAllocations, setAccountAllocations] = useState([]); // [{ account_id: '...', amount: '...' }]\n  const [error, setError] = useState('');\n  const [originalAccountBalances, setOriginalAccountBalances] = useState({});\n  const [initialCategoryAllocations, setInitialCategoryAllocations] = useState({}); // To store original allocations for the category being edited\n\n  // Hitung total budget secara real-time dari alokasi\n  const calculatedTotalAmount = accountAllocations.reduce((sum, alloc) => {\n    const amount = parseFloat(alloc.amount);\n    return sum + (isNaN(amount) ? 0 : amount);\n  }, 0);\n  useEffect(() => {\n    if (isOpen) {\n      setError('');\n      setName((initialData === null || initialData === void 0 ? void 0 : initialData.name) || '');\n\n      // Simpan saldo asli akun saat modal dibuka\n      const initialBalances = {};\n      accounts.forEach(acc => {\n        initialBalances[acc.id] = acc.balance;\n      });\n      setOriginalAccountBalances(initialBalances);\n\n      // Jika mode 'edit', inisialisasi accountAllocations dengan data yang ada\n      if (mode === 'edit' && initialData && initialData.allocations) {\n        const currentAllocations = initialData.allocations.map(alloc => ({\n          account_id: alloc.account_id,\n          amount: parseFloat(alloc.amount_allocated) // Pastikan formatnya sesuai\n        }));\n        setAccountAllocations(currentAllocations);\n\n        // Simpan alokasi awal untuk kategori yang sedang diedit\n        const categoryInitialAllocations = {};\n        initialData.allocations.forEach(alloc => {\n          categoryInitialAllocations[alloc.account_id] = parseFloat(alloc.amount_allocated);\n        });\n        setInitialCategoryAllocations(categoryInitialAllocations);\n      } else {\n        setAccountAllocations([]); // Reset alokasi untuk mode 'add'\n        setInitialCategoryAllocations({}); // Reset untuk mode 'add'\n      }\n    }\n  }, [isOpen, initialData, mode, accounts]);\n\n  // Fungsi untuk mendapatkan saldo tentatif akun (saldo asli - jumlah alokasi saat ini + jumlah alokasi sebelumnya dari kategori ini)\n  const getTentativeAccountBalance = accountId => {\n    var _accountAllocations$f;\n    const originalBalance = originalAccountBalances[accountId] || 0;\n    const currentAllocation = parseFloat(((_accountAllocations$f = accountAllocations.find(alloc => alloc.account_id === accountId)) === null || _accountAllocations$f === void 0 ? void 0 : _accountAllocations$f.amount) || 0);\n    const prevAllocationForCategory = initialCategoryAllocations[accountId] || 0;\n\n    // Saldo tentatif adalah saldo asli dikurangi alokasi yang sedang diinputkan\n    // ditambahkan kembali dengan alokasi yang sudah ada untuk kategori ini (karena itu sudah \"terpakai\" oleh kategori ini)\n    return originalBalance - (currentAllocation - prevAllocationForCategory);\n  };\n  const handleAllocationChange = (accountId, amount) => {\n    setAccountAllocations(prev => {\n      const existingIndex = prev.findIndex(alloc => alloc.account_id === accountId);\n      const newAmount = amount === '' ? '' : parseFloat(amount);\n      if (existingIndex > -1) {\n        const updated = [...prev];\n        updated[existingIndex] = {\n          account_id: accountId,\n          amount: newAmount\n        };\n        return updated;\n      } else {\n        // Ini seharusnya tidak terjadi jika checkbox sudah dicentang terlebih dahulu\n        return [...prev, {\n          account_id: accountId,\n          amount: newAmount\n        }];\n      }\n    });\n  };\n  const handleCheckboxChange = (accountId, isChecked) => {\n    setAccountAllocations(prev => {\n      if (isChecked) {\n        var _initialData$allocati;\n        // Tambahkan akun jika dicentang, dengan jumlah awal dari initialData jika ada\n        const existingAllocation = initialData === null || initialData === void 0 ? void 0 : (_initialData$allocati = initialData.allocations) === null || _initialData$allocati === void 0 ? void 0 : _initialData$allocati.find(alloc => alloc.account_id === accountId);\n        return [...prev, {\n          account_id: accountId,\n          amount: existingAllocation ? parseFloat(existingAllocation.amount_allocated) : ''\n        }];\n      } else {\n        // Hapus akun jika tidak dicentang\n        return prev.filter(alloc => alloc.account_id !== accountId);\n      }\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n    if (!name.trim()) {\n      setError('Nama kategori tidak boleh kosong.');\n      return;\n    }\n    if (accountAllocations.length === 0) {\n      setError('Harap pilih setidaknya satu akun untuk alokasi dana.');\n      return;\n    }\n    const validAllocations = [];\n    for (const alloc of accountAllocations) {\n      const parsedAmount = parseFloat(alloc.amount);\n      if (isNaN(parsedAmount) || parsedAmount <= 0) {\n        var _accounts$find;\n        setError(`Nominal alokasi untuk akun ${((_accounts$find = accounts.find(a => a.id === alloc.account_id)) === null || _accounts$find === void 0 ? void 0 : _accounts$find.name) || alloc.account_id} tidak valid atau kosong.`);\n        return;\n      }\n      const prevAllocationForCategory = initialCategoryAllocations[alloc.account_id] || 0;\n      // Saldo efektif untuk validasi adalah saldo asli ditambah alokasi yang sudah ada untuk kategori ini\n      const effectiveAccountBalance = originalAccountBalances[alloc.account_id] + prevAllocationForCategory;\n      if (parsedAmount > effectiveAccountBalance) {\n        var _accounts$find2;\n        setError(`Alokasi untuk akun ${(_accounts$find2 = accounts.find(a => a.id === alloc.account_id)) === null || _accounts$find2 === void 0 ? void 0 : _accounts$find2.name} melebihi saldo yang tersedia.`);\n        return;\n      }\n      validAllocations.push({\n        account_id: alloc.account_id,\n        amount: parsedAmount\n      });\n    }\n    if (calculatedTotalAmount <= 0) {\n      setError('Total budget kategori harus lebih dari Rp 0.');\n      return;\n    }\n    if (mode === 'add') {\n      onSave({\n        name,\n        total_amount: calculatedTotalAmount,\n        allocations: validAllocations\n      });\n    } else if (mode === 'edit') {\n      onSave({\n        id: initialData.id,\n        name,\n        total_amount: calculatedTotalAmount,\n        allocations: validAllocations\n      });\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-xl w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-4\",\n        children: mode === 'add' ? 'Tambah Kategori Baru' : 'Edit Kategori'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"block text-gray-700 text-sm font-bold mb-2\",\n            children: \"Nama Kategori:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-gray-700 text-sm font-bold mb-2\",\n              children: \"Alokasi dari Akun:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), accounts.length > 0 ? accounts.map(account => {\n              var _accountAllocations$f2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center mb-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: `account-${account.id}`,\n                  className: \"mr-2\",\n                  checked: accountAllocations.some(alloc => alloc.account_id === account.id),\n                  onChange: e => handleCheckboxChange(account.id, e.target.checked)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: `account-${account.id}`,\n                  className: \"text-gray-700 mr-2 flex-grow\",\n                  children: [account.name, \" (Saldo Tersedia: Rp \", getTentativeAccountBalance(account.id).toLocaleString('id-ID'), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), accountAllocations.some(alloc => alloc.account_id === account.id) && /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  className: \"shadow appearance-none border rounded py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline w-1/3\",\n                  value: ((_accountAllocations$f2 = accountAllocations.find(alloc => alloc.account_id === account.id)) === null || _accountAllocations$f2 === void 0 ? void 0 : _accountAllocations$f2.amount) || '',\n                  onChange: e => handleAllocationChange(account.id, e.target.value),\n                  min: \"0\",\n                  step: \"any\",\n                  placeholder: \"Jumlah\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this)]\n              }, account.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this);\n            }) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-500 text-sm\",\n              children: \"Tidak ada akun tersedia. Harap buat akun terlebih dahulu.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 text-lg font-bold text-gray-800\",\n            children: [\"Total Budget Kategori: Rp \", calculatedTotalAmount.toLocaleString('id-ID')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500 text-xs italic mb-4\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\",\n            children: \"Batal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\",\n            children: mode === 'add' ? 'Tambah' : 'Simpan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(ModalKategori, \"cF7GOd3+7rabqz5754MKtGEU5to=\");\n_c = ModalKategori;\nexport default ModalKategori;\nvar _c;\n$RefreshReg$(_c, \"ModalKategori\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalKategori","isOpen","onClose","onSave","initialData","accounts","mode","_s","name","setName","accountAllocations","setAccountAllocations","error","setError","originalAccountBalances","setOriginalAccountBalances","initialCategoryAllocations","setInitialCategoryAllocations","calculatedTotalAmount","reduce","sum","alloc","amount","parseFloat","isNaN","initialBalances","forEach","acc","id","balance","allocations","currentAllocations","map","account_id","amount_allocated","categoryInitialAllocations","getTentativeAccountBalance","accountId","_accountAllocations$f","originalBalance","currentAllocation","find","prevAllocationForCategory","handleAllocationChange","prev","existingIndex","findIndex","newAmount","updated","handleCheckboxChange","isChecked","_initialData$allocati","existingAllocation","filter","handleSubmit","e","preventDefault","trim","length","validAllocations","parsedAmount","_accounts$find","a","effectiveAccountBalance","_accounts$find2","push","total_amount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","account","_accountAllocations$f2","checked","some","toLocaleString","min","step","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/testis/frontend/src/ModalKategori.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ModalKategori({ isOpen, onClose, onSave, initialData, accounts, mode }) {\r\n  const [name, setName] = useState('');\r\n  const [accountAllocations, setAccountAllocations] = useState([]); // [{ account_id: '...', amount: '...' }]\r\n  const [error, setError] = useState('');\r\n  const [originalAccountBalances, setOriginalAccountBalances] = useState({});\r\n  const [initialCategoryAllocations, setInitialCategoryAllocations] = useState({}); // To store original allocations for the category being edited\r\n\r\n  // Hitung total budget secara real-time dari alokasi\r\n  const calculatedTotalAmount = accountAllocations.reduce((sum, alloc) => {\r\n    const amount = parseFloat(alloc.amount);\r\n    return sum + (isNaN(amount) ? 0 : amount);\r\n  }, 0);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setError('');\r\n      setName(initialData?.name || '');\r\n\r\n      // Simpan saldo asli akun saat modal dibuka\r\n      const initialBalances = {};\r\n      accounts.forEach(acc => {\r\n        initialBalances[acc.id] = acc.balance;\r\n      });\r\n      setOriginalAccountBalances(initialBalances);\r\n\r\n      // Jika mode 'edit', inisialisasi accountAllocations dengan data yang ada\r\n      if (mode === 'edit' && initialData && initialData.allocations) {\r\n        const currentAllocations = initialData.allocations.map(alloc => ({\r\n          account_id: alloc.account_id,\r\n          amount: parseFloat(alloc.amount_allocated) // Pastikan formatnya sesuai\r\n        }));\r\n        setAccountAllocations(currentAllocations);\r\n\r\n        // Simpan alokasi awal untuk kategori yang sedang diedit\r\n        const categoryInitialAllocations = {};\r\n        initialData.allocations.forEach(alloc => {\r\n          categoryInitialAllocations[alloc.account_id] = parseFloat(alloc.amount_allocated);\r\n        });\r\n        setInitialCategoryAllocations(categoryInitialAllocations);\r\n      } else {\r\n        setAccountAllocations([]); // Reset alokasi untuk mode 'add'\r\n        setInitialCategoryAllocations({}); // Reset untuk mode 'add'\r\n      }\r\n    }\r\n  }, [isOpen, initialData, mode, accounts]);\r\n\r\n  // Fungsi untuk mendapatkan saldo tentatif akun (saldo asli - jumlah alokasi saat ini + jumlah alokasi sebelumnya dari kategori ini)\r\n  const getTentativeAccountBalance = (accountId) => {\r\n    const originalBalance = originalAccountBalances[accountId] || 0;\r\n    const currentAllocation = parseFloat(accountAllocations.find(alloc => alloc.account_id === accountId)?.amount || 0);\r\n    const prevAllocationForCategory = initialCategoryAllocations[accountId] || 0;\r\n\r\n    // Saldo tentatif adalah saldo asli dikurangi alokasi yang sedang diinputkan\r\n    // ditambahkan kembali dengan alokasi yang sudah ada untuk kategori ini (karena itu sudah \"terpakai\" oleh kategori ini)\r\n    return originalBalance - (currentAllocation - prevAllocationForCategory);\r\n  };\r\n\r\n  const handleAllocationChange = (accountId, amount) => {\r\n    setAccountAllocations(prev => {\r\n      const existingIndex = prev.findIndex(alloc => alloc.account_id === accountId);\r\n      const newAmount = amount === '' ? '' : parseFloat(amount);\r\n\r\n      if (existingIndex > -1) {\r\n        const updated = [...prev];\r\n        updated[existingIndex] = { account_id: accountId, amount: newAmount };\r\n        return updated;\r\n      } else {\r\n        // Ini seharusnya tidak terjadi jika checkbox sudah dicentang terlebih dahulu\r\n        return [...prev, { account_id: accountId, amount: newAmount }];\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (accountId, isChecked) => {\r\n    setAccountAllocations(prev => {\r\n      if (isChecked) {\r\n        // Tambahkan akun jika dicentang, dengan jumlah awal dari initialData jika ada\r\n        const existingAllocation = initialData?.allocations?.find(alloc => alloc.account_id === accountId);\r\n        return [...prev, { account_id: accountId, amount: existingAllocation ? parseFloat(existingAllocation.amount_allocated) : '' }];\r\n      } else {\r\n        // Hapus akun jika tidak dicentang\r\n        return prev.filter(alloc => alloc.account_id !== accountId);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    if (!name.trim()) {\r\n      setError('Nama kategori tidak boleh kosong.');\r\n      return;\r\n    }\r\n\r\n    if (accountAllocations.length === 0) {\r\n      setError('Harap pilih setidaknya satu akun untuk alokasi dana.');\r\n      return;\r\n    }\r\n\r\n    const validAllocations = [];\r\n    for (const alloc of accountAllocations) {\r\n      const parsedAmount = parseFloat(alloc.amount);\r\n      if (isNaN(parsedAmount) || parsedAmount <= 0) {\r\n        setError(`Nominal alokasi untuk akun ${accounts.find(a => a.id === alloc.account_id)?.name || alloc.account_id} tidak valid atau kosong.`);\r\n        return;\r\n      }\r\n\r\n      const prevAllocationForCategory = initialCategoryAllocations[alloc.account_id] || 0;\r\n      // Saldo efektif untuk validasi adalah saldo asli ditambah alokasi yang sudah ada untuk kategori ini\r\n      const effectiveAccountBalance = originalAccountBalances[alloc.account_id] + prevAllocationForCategory; \r\n\r\n      if (parsedAmount > effectiveAccountBalance) {\r\n        setError(`Alokasi untuk akun ${accounts.find(a => a.id === alloc.account_id)?.name} melebihi saldo yang tersedia.`);\r\n        return;\r\n      }\r\n\r\n      validAllocations.push({ account_id: alloc.account_id, amount: parsedAmount });\r\n    }\r\n\r\n    if (calculatedTotalAmount <= 0) {\r\n      setError('Total budget kategori harus lebih dari Rp 0.');\r\n      return;\r\n    }\r\n\r\n    if (mode === 'add') {\r\n      onSave({ name, total_amount: calculatedTotalAmount, allocations: validAllocations });\r\n    } else if (mode === 'edit') {\r\n      onSave({ id: initialData.id, name, total_amount: calculatedTotalAmount, allocations: validAllocations });\r\n    }\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex justify-center items-center z-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-xl w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">\r\n          {mode === 'add' ? 'Tambah Kategori Baru' : 'Edit Kategori'}\r\n        </h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"mb-4\">\r\n            <label htmlFor=\"name\" className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n              Nama Kategori:\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"name\"\r\n              className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          {/* Bagian alokasi sekarang muncul di kedua mode */}\r\n          <>\r\n            <div className=\"mb-4\">\r\n              <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                Alokasi dari Akun:\r\n              </label>\r\n              {accounts.length > 0 ? (\r\n                accounts.map(account => (\r\n                  <div key={account.id} className=\"flex items-center mb-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={`account-${account.id}`}\r\n                      className=\"mr-2\"\r\n                      checked={accountAllocations.some(alloc => alloc.account_id === account.id)}\r\n                      onChange={(e) => handleCheckboxChange(account.id, e.target.checked)}\r\n                    />\r\n                    <label htmlFor={`account-${account.id}`} className=\"text-gray-700 mr-2 flex-grow\">\r\n                      {account.name} (Saldo Tersedia: Rp {getTentativeAccountBalance(account.id).toLocaleString('id-ID')})\r\n                    </label>\r\n                    {accountAllocations.some(alloc => alloc.account_id === account.id) && (\r\n                      <input\r\n                        type=\"number\"\r\n                        className=\"shadow appearance-none border rounded py-1 px-2 text-gray-700 leading-tight focus:outline-none focus:shadow-outline w-1/3\"\r\n                        value={accountAllocations.find(alloc => alloc.account_id === account.id)?.amount || ''}\r\n                        onChange={(e) => handleAllocationChange(account.id, e.target.value)}\r\n                        min=\"0\"\r\n                        step=\"any\"\r\n                        placeholder=\"Jumlah\"\r\n                        required\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p className=\"text-gray-500 text-sm\">Tidak ada akun tersedia. Harap buat akun terlebih dahulu.</p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"mb-4 text-lg font-bold text-gray-800\">\r\n              Total Budget Kategori: Rp {calculatedTotalAmount.toLocaleString('id-ID')}\r\n            </div>\r\n          </>\r\n\r\n          {error && <p className=\"text-red-500 text-xs italic mb-4\">{error}</p>}\r\n\r\n          <div className=\"flex justify-end gap-2\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onClose}\r\n              className=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\"\r\n            >\r\n              Batal\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg focus:outline-none focus:shadow-outline\"\r\n            >\r\n              {mode === 'add' ? 'Tambah' : 'Simpan'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalKategori;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}