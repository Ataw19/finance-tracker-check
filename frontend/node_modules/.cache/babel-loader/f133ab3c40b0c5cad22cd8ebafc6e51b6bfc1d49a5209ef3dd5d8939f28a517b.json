{"ast":null,"code":"var _jsxFileName = \"E:\\\\testis\\\\frontend\\\\src\\\\ModalTransaksi.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\n\n// Tambahkan prop 'currentSelectedMonth'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalTransaksi = ({\n  isOpen,\n  onClose,\n  onSave,\n  initialData = null,\n  allBudgetsByMonth = {},\n  accounts = [],\n  currentSelectedMonth\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    description: '',\n    amount: '',\n    transaction_date: new Date().toISOString().slice(0, 10),\n    category_id: '',\n    account_id: '',\n    type: 'expense'\n  });\n  const [error, setError] = useState('');\n  const [sisaBudget, setSisaBudget] = useState(null);\n  const [isSaveDisabled, setSaveDisabled] = useState(false);\n\n  // Hitung min dan max date berdasarkan currentSelectedMonth\n  const [minDate, maxDate] = useMemo(() => {\n    if (!currentSelectedMonth) {\n      // Fallback jika currentSelectedMonth belum tersedia\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = String(today.getMonth() + 1).padStart(2, '0');\n      const firstDay = `${year}-${month}-01`;\n      const lastDay = `${year}-${month}-${new Date(year, today.getMonth() + 1, 0).getDate()}`;\n      return [firstDay, lastDay];\n    }\n    const [year, month] = currentSelectedMonth.split('-');\n    const firstDayOfMonth = `${year}-${month}-01`;\n    const lastDayOfMonth = `${year}-${month}-${new Date(parseInt(year), parseInt(month), 0).getDate()}`;\n    return [firstDayOfMonth, lastDayOfMonth];\n  }, [currentSelectedMonth]);\n\n  // Categories sekarang difilter berdasarkan formData.transaction_date\n  const categories = useMemo(() => {\n    const transactionDate = formData.transaction_date;\n    if (!transactionDate) return [];\n    const date = new Date(transactionDate);\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\n    const uniqueCategories = budgetsForSelectedDateMonth.reduce((acc, b) => {\n      if (b.category_id) {\n        acc[b.category_id] = {\n          id: b.category_id,\n          name: b.category_name\n        };\n      }\n      return acc;\n    }, {});\n    return Object.values(uniqueCategories);\n  }, [allBudgetsByMonth, formData.transaction_date]);\n\n  // checkBudget sekarang juga difilter berdasarkan formData.transaction_date\n  const checkBudget = useCallback((kategoriId, jumlahTransaksi) => {\n    if (!kategoriId || !formData.transaction_date) {\n      setSisaBudget(null);\n      setSaveDisabled(false);\n      return;\n    }\n    const date = new Date(formData.transaction_date);\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\n    const budgetInfo = budgetsForSelectedDateMonth.find(b => b.category_id === Number(kategoriId));\n    const sisaDiAmplop = budgetInfo ? parseFloat(budgetInfo.balance || 0) : 0;\n    let originalAmount = 0;\n    if (initialData && initialData.id === formData.id && initialData.category_id === Number(kategoriId)) {\n      originalAmount = parseFloat(initialData.amount || 0);\n    }\n    const sisaAktualUntukValidasi = sisaDiAmplop + originalAmount;\n    setSisaBudget(sisaAktualUntukValidasi);\n    setSaveDisabled(parseFloat(jumlahTransaksi || 0) > sisaAktualUntukValidasi);\n  }, [allBudgetsByMonth, initialData, formData.id, formData.transaction_date]);\n  useEffect(() => {\n    if (isOpen) {\n      const isEdit = initialData === null || initialData === void 0 ? void 0 : initialData.id;\n      let transactionDateToSet;\n      if (isEdit && initialData.transaction_date) {\n        const initialDate = new Date(initialData.transaction_date);\n        const initialMonthKey = `${initialDate.getFullYear()}-${String(initialDate.getMonth() + 1).padStart(2, '0')}`;\n\n        // Jika transaksi yang diedit bukan di bulan yang sedang dipilih di halaman utama,\n        // paksa tanggalnya ke hari pertama bulan yang dipilih di halaman utama.\n        // Ini memastikan konsistensi dengan batasan date picker.\n        if (initialMonthKey !== currentSelectedMonth) {\n          transactionDateToSet = minDate; // Set ke tanggal awal bulan yang dipilih\n          setError(`Tanggal transaksi diubah ke ${minDate} karena harus sesuai dengan bulan yang dipilih di halaman utama.`);\n        } else {\n          transactionDateToSet = initialData.transaction_date;\n        }\n      } else {\n        // Untuk transaksi baru, default ke tanggal hari ini, tapi pastikan dalam bulan yang dipilih\n        const today = new Date();\n        const todayMonthKey = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\n        if (todayMonthKey === currentSelectedMonth) {\n          transactionDateToSet = today.toISOString().slice(0, 10);\n        } else {\n          transactionDateToSet = minDate; // Jika bulan ini bukan bulan yang dipilih, default ke hari pertama bulan yang dipilih\n        }\n      }\n      const data = isEdit ? initialData : {\n        description: '',\n        amount: '',\n        category_id: '',\n        account_id: '',\n        type: (initialData === null || initialData === void 0 ? void 0 : initialData.type) || 'expense'\n      };\n      const initialFormData = {\n        ...data,\n        account_id: data.account_id || (accounts.length === 1 ? accounts[0].id : ''),\n        transaction_date: transactionDateToSet ? new Date(transactionDateToSet).toISOString().slice(0, 10) : new Date().toISOString().slice(0, 10)\n      };\n      setFormData(initialFormData);\n      if (initialFormData.type === 'expense') {\n        checkBudget(initialFormData.category_id, initialFormData.amount);\n      } else {\n        setSisaBudget(null);\n        setSaveDisabled(false);\n      }\n      // setError(''); // Jangan reset error di sini jika sudah diset oleh logika tanggal\n    }\n  }, [initialData, isOpen, checkBudget, accounts, currentSelectedMonth, minDate]); // Tambahkan currentSelectedMonth dan minDate sebagai dependency\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let newFormData = {\n      ...formData,\n      [name]: value\n    };\n\n    // Logika khusus ketika transaction_date berubah\n    if (name === 'transaction_date') {\n      const newDate = new Date(value);\n      if (isNaN(newDate.getTime())) {\n        setError('Format tanggal tidak valid.');\n        setFormData(newFormData);\n        return;\n      } else {\n        // Pastikan tanggal yang dipilih berada dalam rentang bulan yang diizinkan\n        const selectedMonthKey = `${newDate.getFullYear()}-${String(newDate.getMonth() + 1).padStart(2, '0')}`;\n        if (selectedMonthKey !== currentSelectedMonth) {\n          // Ini seharusnya dicegah oleh min/max, tapi sebagai fallback\n          setError(`Tanggal harus berada dalam bulan ${currentSelectedMonth}.`);\n          setSaveDisabled(true); // Disable save jika tanggal di luar bulan\n          return; // Jangan lanjutkan pemrosesan jika tanggal tidak valid\n        } else {\n          setError(''); // Hapus error jika tanggal valid\n        }\n      }\n\n      // Dapatkan daftar kategori yang valid untuk bulan yang baru dipilih (yang seharusnya sama dengan currentSelectedMonth)\n      const newMonthKey = `${newDate.getFullYear()}-${String(newDate.getMonth() + 1).padStart(2, '0')}`;\n      const budgetsForNewMonth = allBudgetsByMonth[newMonthKey] || [];\n      const validCategoryIdsForNewMonth = new Set(budgetsForNewMonth.map(b => b.category_id));\n\n      // Jika category_id yang saat ini terpilih TIDAK valid untuk bulan yang baru, reset\n      if (newFormData.category_id && !validCategoryIdsForNewMonth.has(Number(newFormData.category_id))) {\n        newFormData = {\n          ...newFormData,\n          category_id: ''\n        }; // Reset category_id\n        setError('Kategori yang dipilih tidak tersedia untuk bulan ini. Harap pilih kategori baru.');\n      } else {\n        if (name === 'transaction_date') {\n          setError('');\n        }\n      }\n    }\n    setFormData(newFormData);\n    if (newFormData.type === 'expense') {\n      const katId = newFormData.category_id;\n      const jumlah = newFormData.amount;\n      checkBudget(katId, jumlah);\n    } else {\n      setSisaBudget(null);\n      setSaveDisabled(false);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (formData.type === 'income' && !formData.account_id) {\n      setError(\"Pemasukan wajib memilih akun tujuan.\");\n      return;\n    }\n    if (formData.type === 'expense' && !formData.category_id) {\n      setError(\"Pengeluaran wajib memilih kategori.\");\n      return;\n    }\n    if (formData.type === 'expense' && isSaveDisabled) {\n      setError(\"Jumlah transaksi melebihi sisa budget.\");\n      return;\n    }\n    setError('');\n    onSave({\n      ...formData,\n      id: initialData === null || initialData === void 0 ? void 0 : initialData.id\n    });\n  };\n  if (!isOpen) return null;\n  const modalTitle = `${initialData !== null && initialData !== void 0 && initialData.id ? 'Edit' : 'Tambah'} ${formData.type === 'income' ? 'Pendapatan' : 'Pengeluaran'}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-semibold mb-4\",\n        children: modalTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Nama\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"description\",\n            value: formData.description,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Jumlah (Rp)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"amount\",\n            value: formData.amount,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), formData.type === 'expense' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Kategori\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"category_id\",\n            value: formData.category_id,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Pilih Kategori\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat.id,\n              children: cat.name\n            }, cat.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), sisaBudget !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `text-sm mt-1 ${sisaBudget < 0 ? 'text-red-500' : 'text-gray-500'}`,\n            children: [\"Sisa budget bulan ini: Rp \", sisaBudget.toLocaleString('id-ID')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), formData.type === 'income' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Masukkan ke Akun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"account_id\",\n            value: formData.account_id,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Pilih Akun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), accounts.map(acc => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: acc.id,\n              children: acc.name\n            }, acc.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-sm font-medium text-gray-700\",\n            children: \"Tanggal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"transaction_date\",\n            value: formData.transaction_date,\n            onChange: handleChange,\n            className: \"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\",\n            required: true,\n            min: minDate // Atur tanggal minimum\n            ,\n            max: maxDate // Atur tanggal maksimum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-red-600\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-2 pt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"bg-gray-200 px-4 py-2 rounded-md\",\n            onClick: onClose,\n            children: \"Batal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSaveDisabled,\n            className: `px-4 py-2 rounded-md text-white ${isSaveDisabled ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'}`,\n            children: \"Simpan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalTransaksi, \"geMhMlHcSxnGZc9EOxWusE5RgGo=\");\n_c = ModalTransaksi;\nexport default ModalTransaksi;\nvar _c;\n$RefreshReg$(_c, \"ModalTransaksi\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","jsxDEV","_jsxDEV","ModalTransaksi","isOpen","onClose","onSave","initialData","allBudgetsByMonth","accounts","currentSelectedMonth","_s","formData","setFormData","description","amount","transaction_date","Date","toISOString","slice","category_id","account_id","type","error","setError","sisaBudget","setSisaBudget","isSaveDisabled","setSaveDisabled","minDate","maxDate","today","year","getFullYear","month","String","getMonth","padStart","firstDay","lastDay","getDate","split","firstDayOfMonth","lastDayOfMonth","parseInt","categories","transactionDate","date","monthKey","budgetsForSelectedDateMonth","uniqueCategories","reduce","acc","b","id","name","category_name","Object","values","checkBudget","kategoriId","jumlahTransaksi","budgetInfo","find","Number","sisaDiAmplop","parseFloat","balance","originalAmount","sisaAktualUntukValidasi","isEdit","transactionDateToSet","initialDate","initialMonthKey","todayMonthKey","data","initialFormData","length","handleChange","e","value","target","newFormData","newDate","isNaN","getTime","selectedMonthKey","newMonthKey","budgetsForNewMonth","validCategoryIdsForNewMonth","Set","map","has","katId","jumlah","handleSubmit","preventDefault","modalTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","cat","toLocaleString","min","max","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/testis/frontend/src/ModalTransaksi.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\n\r\n// Tambahkan prop 'currentSelectedMonth'\r\nconst ModalTransaksi = ({ isOpen, onClose, onSave, initialData = null, allBudgetsByMonth = {}, accounts = [], currentSelectedMonth }) => {\r\n  const [formData, setFormData] = useState({\r\n    description: '', amount: '', transaction_date: new Date().toISOString().slice(0, 10),\r\n    category_id: '', account_id: '', type: 'expense',\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [sisaBudget, setSisaBudget] = useState(null);\r\n  const [isSaveDisabled, setSaveDisabled] = useState(false);\r\n\r\n  // Hitung min dan max date berdasarkan currentSelectedMonth\r\n  const [minDate, maxDate] = useMemo(() => {\r\n    if (!currentSelectedMonth) {\r\n      // Fallback jika currentSelectedMonth belum tersedia\r\n      const today = new Date();\r\n      const year = today.getFullYear();\r\n      const month = String(today.getMonth() + 1).padStart(2, '0');\r\n      const firstDay = `${year}-${month}-01`;\r\n      const lastDay = `${year}-${month}-${new Date(year, today.getMonth() + 1, 0).getDate()}`;\r\n      return [firstDay, lastDay];\r\n    }\r\n\r\n    const [year, month] = currentSelectedMonth.split('-');\r\n    const firstDayOfMonth = `${year}-${month}-01`;\r\n    const lastDayOfMonth = `${year}-${month}-${new Date(parseInt(year), parseInt(month), 0).getDate()}`;\r\n    return [firstDayOfMonth, lastDayOfMonth];\r\n  }, [currentSelectedMonth]);\r\n\r\n\r\n  // Categories sekarang difilter berdasarkan formData.transaction_date\r\n  const categories = useMemo(() => {\r\n    const transactionDate = formData.transaction_date;\r\n    if (!transactionDate) return [];\r\n\r\n    const date = new Date(transactionDate);\r\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n\r\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\r\n\r\n    const uniqueCategories = budgetsForSelectedDateMonth.reduce((acc, b) => {\r\n      if (b.category_id) {\r\n        acc[b.category_id] = { id: b.category_id, name: b.category_name };\r\n      }\r\n      return acc;\r\n    }, {});\r\n    return Object.values(uniqueCategories);\r\n  }, [allBudgetsByMonth, formData.transaction_date]);\r\n\r\n  // checkBudget sekarang juga difilter berdasarkan formData.transaction_date\r\n  const checkBudget = useCallback((kategoriId, jumlahTransaksi) => {\r\n    if (!kategoriId || !formData.transaction_date) {\r\n      setSisaBudget(null);\r\n      setSaveDisabled(false);\r\n      return;\r\n    }\r\n\r\n    const date = new Date(formData.transaction_date);\r\n    const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n\r\n    const budgetsForSelectedDateMonth = allBudgetsByMonth[monthKey] || [];\r\n\r\n    const budgetInfo = budgetsForSelectedDateMonth.find(b => b.category_id === Number(kategoriId));\r\n\r\n    const sisaDiAmplop = budgetInfo ? parseFloat(budgetInfo.balance || 0) : 0;\r\n\r\n    let originalAmount = 0;\r\n    if (initialData && initialData.id === formData.id && initialData.category_id === Number(kategoriId)) {\r\n      originalAmount = parseFloat(initialData.amount || 0);\r\n    }\r\n\r\n    const sisaAktualUntukValidasi = sisaDiAmplop + originalAmount;\r\n\r\n    setSisaBudget(sisaAktualUntukValidasi);\r\n    setSaveDisabled(parseFloat(jumlahTransaksi || 0) > sisaAktualUntukValidasi);\r\n\r\n  }, [allBudgetsByMonth, initialData, formData.id, formData.transaction_date]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const isEdit = initialData?.id;\r\n      let transactionDateToSet;\r\n\r\n      if (isEdit && initialData.transaction_date) {\r\n        const initialDate = new Date(initialData.transaction_date);\r\n        const initialMonthKey = `${initialDate.getFullYear()}-${String(initialDate.getMonth() + 1).padStart(2, '0')}`;\r\n\r\n        // Jika transaksi yang diedit bukan di bulan yang sedang dipilih di halaman utama,\r\n        // paksa tanggalnya ke hari pertama bulan yang dipilih di halaman utama.\r\n        // Ini memastikan konsistensi dengan batasan date picker.\r\n        if (initialMonthKey !== currentSelectedMonth) {\r\n          transactionDateToSet = minDate; // Set ke tanggal awal bulan yang dipilih\r\n          setError(`Tanggal transaksi diubah ke ${minDate} karena harus sesuai dengan bulan yang dipilih di halaman utama.`);\r\n        } else {\r\n          transactionDateToSet = initialData.transaction_date;\r\n        }\r\n      } else {\r\n        // Untuk transaksi baru, default ke tanggal hari ini, tapi pastikan dalam bulan yang dipilih\r\n        const today = new Date();\r\n        const todayMonthKey = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}`;\r\n        if (todayMonthKey === currentSelectedMonth) {\r\n          transactionDateToSet = today.toISOString().slice(0, 10);\r\n        } else {\r\n          transactionDateToSet = minDate; // Jika bulan ini bukan bulan yang dipilih, default ke hari pertama bulan yang dipilih\r\n        }\r\n      }\r\n\r\n      const data = isEdit ? initialData : {\r\n        description: '', amount: '', category_id: '', account_id: '', type: initialData?.type || 'expense',\r\n      };\r\n\r\n      const initialFormData = {\r\n        ...data,\r\n        account_id: data.account_id || (accounts.length === 1 ? accounts[0].id : ''),\r\n        transaction_date: transactionDateToSet ? new Date(transactionDateToSet).toISOString().slice(0, 10) : new Date().toISOString().slice(0, 10)\r\n      };\r\n\r\n      setFormData(initialFormData);\r\n\r\n      if (initialFormData.type === 'expense') {\r\n        checkBudget(initialFormData.category_id, initialFormData.amount);\r\n      } else {\r\n        setSisaBudget(null);\r\n        setSaveDisabled(false);\r\n      }\r\n      // setError(''); // Jangan reset error di sini jika sudah diset oleh logika tanggal\r\n    }\r\n  }, [initialData, isOpen, checkBudget, accounts, currentSelectedMonth, minDate]); // Tambahkan currentSelectedMonth dan minDate sebagai dependency\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let newFormData = { ...formData, [name]: value };\r\n\r\n    // Logika khusus ketika transaction_date berubah\r\n    if (name === 'transaction_date') {\r\n      const newDate = new Date(value);\r\n      \r\n      if (isNaN(newDate.getTime())) {\r\n        setError('Format tanggal tidak valid.');\r\n        setFormData(newFormData);\r\n        return;\r\n      } else {\r\n        // Pastikan tanggal yang dipilih berada dalam rentang bulan yang diizinkan\r\n        const selectedMonthKey = `${newDate.getFullYear()}-${String(newDate.getMonth() + 1).padStart(2, '0')}`;\r\n        if (selectedMonthKey !== currentSelectedMonth) {\r\n            // Ini seharusnya dicegah oleh min/max, tapi sebagai fallback\r\n            setError(`Tanggal harus berada dalam bulan ${currentSelectedMonth}.`);\r\n            setSaveDisabled(true); // Disable save jika tanggal di luar bulan\r\n            return; // Jangan lanjutkan pemrosesan jika tanggal tidak valid\r\n        } else {\r\n            setError(''); // Hapus error jika tanggal valid\r\n        }\r\n      }\r\n\r\n      // Dapatkan daftar kategori yang valid untuk bulan yang baru dipilih (yang seharusnya sama dengan currentSelectedMonth)\r\n      const newMonthKey = `${newDate.getFullYear()}-${String(newDate.getMonth() + 1).padStart(2, '0')}`;\r\n      const budgetsForNewMonth = allBudgetsByMonth[newMonthKey] || [];\r\n      const validCategoryIdsForNewMonth = new Set(budgetsForNewMonth.map(b => b.category_id));\r\n\r\n      // Jika category_id yang saat ini terpilih TIDAK valid untuk bulan yang baru, reset\r\n      if (newFormData.category_id && !validCategoryIdsForNewMonth.has(Number(newFormData.category_id))) {\r\n        newFormData = { ...newFormData, category_id: '' }; // Reset category_id\r\n        setError('Kategori yang dipilih tidak tersedia untuk bulan ini. Harap pilih kategori baru.');\r\n      } else {\r\n        if (name === 'transaction_date') {\r\n            setError('');\r\n        }\r\n      }\r\n    }\r\n\r\n    setFormData(newFormData);\r\n\r\n    if (newFormData.type === 'expense') {\r\n      const katId = newFormData.category_id;\r\n      const jumlah = newFormData.amount;\r\n      checkBudget(katId, jumlah);\r\n    } else {\r\n      setSisaBudget(null);\r\n      setSaveDisabled(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (formData.type === 'income' && !formData.account_id) {\r\n      setError(\"Pemasukan wajib memilih akun tujuan.\");\r\n      return;\r\n    }\r\n    if (formData.type === 'expense' && !formData.category_id) {\r\n      setError(\"Pengeluaran wajib memilih kategori.\");\r\n      return;\r\n    }\r\n    if (formData.type === 'expense' && isSaveDisabled) {\r\n        setError(\"Jumlah transaksi melebihi sisa budget.\");\r\n        return;\r\n    }\r\n    setError('');\r\n    onSave({ ...formData, id: initialData?.id });\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const modalTitle = `${initialData?.id ? 'Edit' : 'Tambah'} ${formData.type === 'income' ? 'Pendapatan' : 'Pengeluaran'}`;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg w-full max-w-md\">\r\n        <h2 className=\"text-lg font-semibold mb-4\">{modalTitle}</h2>\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Nama</label>\r\n            <input type=\"text\" name=\"description\" value={formData.description} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required />\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Jumlah (Rp)</label>\r\n            <input type=\"number\" name=\"amount\" value={formData.amount} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required />\r\n          </div>\r\n\r\n          {formData.type === 'expense' && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Kategori</label>\r\n              <select name=\"category_id\" value={formData.category_id} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required>\r\n                <option value=\"\">Pilih Kategori</option>\r\n                {categories.map(cat => (\r\n                  <option key={cat.id} value={cat.id}>{cat.name}</option>\r\n                ))}\r\n              </select>\r\n              {sisaBudget !== null && (\r\n                <p className={`text-sm mt-1 ${sisaBudget < 0 ? 'text-red-500' : 'text-gray-500'}`}>\r\n                  Sisa budget bulan ini: Rp {sisaBudget.toLocaleString('id-ID')}\r\n                </p>\r\n              )}\r\n            </div>\r\n          )}\r\n          {formData.type === 'income' && (\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700\">Masukkan ke Akun</label>\r\n              <select name=\"account_id\" value={formData.account_id} onChange={handleChange} className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\" required>\r\n                <option value=\"\">Pilih Akun</option>\r\n                {accounts.map(acc => (\r\n                  <option key={acc.id} value={acc.id}>{acc.name}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700\">Tanggal</label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"transaction_date\"\r\n              value={formData.transaction_date}\r\n              onChange={handleChange}\r\n              className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md\"\r\n              required\r\n              min={minDate} // Atur tanggal minimum\r\n              max={maxDate} // Atur tanggal maksimum\r\n            />\r\n          </div>\r\n\r\n          {error && <p className=\"text-sm text-red-600\">{error}</p>}\r\n          <div className=\"flex justify-end space-x-2 pt-2\">\r\n            <button type=\"button\" className=\"bg-gray-200 px-4 py-2 rounded-md\" onClick={onClose}>Batal</button>\r\n            <button type=\"submit\" disabled={isSaveDisabled} className={`px-4 py-2 rounded-md text-white ${isSaveDisabled ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-600 hover:bg-blue-700'}`}>Simpan</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalTransaksi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}